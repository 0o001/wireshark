# windeployqt-to-nsh
#
# Windeployqt-to-nsh - Convert the output of windeployqt to an equivalent set of
# NSIS "File" function calls.
#
# Copyright 2014 Gerald Combs <gerald@wireshark.org>
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

#requires -version 2

<#
.SYNOPSIS
Convert the output of windeployqt to an equivalent set of NSIS "File"
function calls.

.DESCRIPTION
This script reads the output of Qt's "windeployqt" utility and converts it to a
set of file packaging commands suitable for use with NSIS. Windeployqt lists the
DLLs required to run a Qt application. It ships with Qt 5.2 and later.

.PARAMETER Windeployqt
Specifies the path to the windeployqt utility.

.PARAMETER Executable
The path to a Qt application. It will be examined for dependent DLLs.

.PARAMETER FilePath
Output filename.

.INPUTS
-Windeployqt Path to the windeployqt utility.
-Executable Path to the Qt application.
-FilePath Output NSIS file.

.OUTPUTS
List of NSIS commands required to package supporting DLLs.

.EXAMPLE
C:\PS> .\windeployqt-to-nsis.ps1 windeployqt.exe ..\..\staging\wireshark.exe qt-dll-manifest.nsh
#>

Param(
    [Parameter(Mandatory=$true, Position=0)]
    [String] $Windeployqt,

    [Parameter(Mandatory=$true, Position=1)]
    [String] $Executable,

    [Parameter(Position=2)]
    [String] $FilePath = "qt-dll-manifest.nsh"
)

$wdqtList = & $Windeployqt `
    --release `
    --no-compiler-runtime `
    --list relative `
    $Executable

$dllPath = Split-Path -Parent $Executable

$dllList = @()
$dirList = @()

foreach ($entry in $wdqtList) {
    $dir = Split-Path -Parent $entry
    if ($dir) {
        $dirList += $dir
    } else {
        $dllList += $entry
    }
}

$dirList = $dirList | Sort-Object | Get-Unique

Set-Content $FilePath @"
#
# Automatically generated by $($MyInvocation.MyCommand.Name)
#
"@

foreach ($entry in $dllList) {
    Add-Content $FilePath "File `"$dllPath\$entry`""
}

foreach ($entry in $dirList) {
    Add-Content $FilePath "File /r `"$dllPath\$entry`""
}
