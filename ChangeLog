commit bd0f5c6132
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Feb 25 20:12:34 2020 +0000

    bthci_cmd: fix typo
    
    Bug: 16411
    Change-Id: I9fed7473c2fc3772bc65f7a126ac2f5af79f027f
    Reviewed-on: https://code.wireshark.org/review/36186
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 5608e07641511f7efd12c98248c129a2fdbdbc4d)
    Reviewed-on: https://code.wireshark.org/review/36188

commit 2cf15bba7d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Feb 25 18:09:57 2020 -0800

    Prep for 3.2.2.
    
    Change-Id: I3304fe728af6868b03ef6fbc85f0a09fa03a48a6
    Reviewed-on: https://code.wireshark.org/review/36187
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 67af93246e
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat Feb 22 16:45:10 2020 +0000

    QUIC,TLS: update transport parameter encoding (draft-27)
    
    Use heuristics to distinguish TP encoding of older drafts from draft 27.
    Tested with a draft-24 and draft-27 capture.
    
    Bug: 13881
    Change-Id: I0426f2b3afeab974104f0363b25dcf6387101d1f
    Reviewed-on: https://code.wireshark.org/review/36150
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit e4138a3b98ac5782d3cc55de1c8c65352172fa10)
    Reviewed-on: https://code.wireshark.org/review/36180
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 9c057e6809
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Feb 4 21:46:55 2020 +0100

    TLS (QUIC): Add min_ack_delay TP
    
    From https://tools.ietf.org/html/draft-iyengar-quic-delayed-ack-00
    
    And https://github.com/quicwg/base-drafts/wiki/Temporary-IANA-Registry
    
    Ping-Bug: 13881
    Change-Id: I60b262d44b03a0b454016392eb1a01d46ca03d52
    Reviewed-on: https://code.wireshark.org/review/36032
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 8a6000b6dc21393767c35729f3e83f214fde26b5)
    Reviewed-on: https://code.wireshark.org/review/36179

commit 14bc60ef8f
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Jan 15 15:46:56 2020 +0100

    QUIC: Add Loss Bits Transport Parameter
    
    https://igorlord.github.io/draft-ferrieuxhamchaoui-tsvwg-lossbits/draft-ferrieuxhamchaoui-quic-lossbits.html#name-transport-parameter
    
    Change-Id: I05df0e025726a35e3b6eb265b0530ae0022c6764
    Reviewed-on: https://code.wireshark.org/review/35820
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 4ad18674b734993f0ff7b1721825e4c265adf710)
    Reviewed-on: https://code.wireshark.org/review/36178

commit 73c5fff899
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat Feb 22 12:03:48 2020 +0000

    WireGuard: fix null pointer crash
    
    It was assumed that the WireGuard dissector is always called on the
    first pass before the second pass. That might not be the case when the
    heuristics dissector sets a conversation dissector later in the stream.
    Be prepared to handle this case. Do not simply abort, the previous
    packets may be valid data messages.
    
    Bug: 16394
    Change-Id: Id5bf38c07f4d1bffd4b372e92d9a8784e094829a
    Reviewed-on: https://code.wireshark.org/review/36148
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit b2ee7a2876c26b71f50cd0808c89af6a8483f007)
    Reviewed-on: https://code.wireshark.org/review/36159
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 79769da3b5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Feb 21 10:19:35 2020 -0800

    EAP: Remove a couple of string length assumptions.
    
    Don't assume our MNC and MCC string lengths are > 3.
    
    Bug: 16397
    Change-Id: I0759dcb9d0c5f078cf3a98e9323d9cb741e15dd4
    Reviewed-on: https://code.wireshark.org/review/36146
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 8bda8642dfc8c9a870c6a48771566012353cc898)
    Reviewed-on: https://code.wireshark.org/review/36171

commit 8702598963
Author: Jason Cohen <j.cohen@f5.com>
Date:   Thu Feb 13 16:13:23 2020 -0600

    packet-lldp: Report only the consumed octets
    
    Allow unconsumed octets to be passed back to the caller so that possible
    trailer dissctors can be ran.
    
    Bug: 16387
    Change-Id: I289b4b077d40581d5d0f884e30c2f882d58fccf1
    Reviewed-on: https://code.wireshark.org/review/36097
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jason Cohen <kryojenik2@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 9a5bb0705c292987db10c7872c379835ec7b5145)
    Reviewed-on: https://code.wireshark.org/review/36139

commit 7d228600a0
Author: Jason Cohen <j.cohen@f5.com>
Date:   Thu Feb 13 15:25:33 2020 -0600

    packet-lacp: Report only the consumed octets
    
    Allow unconsumed octets to be passed back to the caller so that possible
    trailer dissctors can be ran.
    
    Bug: 16388
    Change-Id: I022fb2e714a687390259037ac2885751d24619f7
    Reviewed-on: https://code.wireshark.org/review/36096
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jason Cohen <kryojenik2@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit a64d926ebf4c558d389355204945e1c0f0e8b02a)
    Reviewed-on: https://code.wireshark.org/review/36141

commit dc3c604cbc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 23 08:33:21 2020 +0000

    [Automatic update for 2020-02-23]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ie630e060901008d523d905fc5f82f9a546e1e017
    Reviewed-on: https://code.wireshark.org/review/36161
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 7f53d94e7c
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Feb 22 20:35:43 2020 -0800

    Use "must" instead of "should" to avoid ambiguity.
    
    As I said in
    
        https://ask.wireshark.org/question/10361/how-to-properly-use-heuristic-dissector-for-tcp/?answer=10363#post-id-10363
    
      "Should" has multiple meanings; there's "Used to indicate obligation,
      duty, or correctness, typically when criticizing someone's actions.", as
      in "I think we should trust our people more", and there's "Used to
      indicate what is probable.", as in "the bus should arrive in a few
      minutes". You're reading it in the latter sense; it was intended in the
      former sense.
    
      That sentence should probably be changed to "Wireshark must be then set
      up..." to avoid the ambiguity.
    
    Make it so (over half a year later, sigh), and change another case where
    "should" is meant in the first sense while we're at it.
    
    Change-Id: I90198d1616619c75802deeeb703ceee0c8bac1bf
    Reviewed-on: https://code.wireshark.org/review/36155
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 05c1983ee85e760b8b38ee6da477d10ce95dba6c)
    Reviewed-on: https://code.wireshark.org/review/36156

commit 9df1f61d30
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Feb 18 10:05:09 2020 -0800

    Test: Bump the WireGuard Gcrypt version requirement.
    
    WireGuard decryption requires Gcrypt 1.8 or later.
    
    Change-Id: I4a9e910df61a2d8f375e3f90b22511fe59be922c
    Reviewed-on: https://code.wireshark.org/review/36128
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit b3efeb25731e123c415ca788b9853e9b3c1811b8)
    Reviewed-on: https://code.wireshark.org/review/36133

commit 8e8ba83b01
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Feb 13 15:18:14 2020 -0800

    Test+Qt: Add an automatic update check.
    
    Add software_update_info() to the software update module, which returns
    the name of our update library if we have one. Use it to add automatic
    update information to the compiled information in `wireshark --version`.
    
    Add a "release" test suite, which contains a test for automatic updates.
    
    Ping-Bug: 16381
    Change-Id: I867a96bdcfde8be541eca2dc0e84b5000276e7dd
    Reviewed-on: https://code.wireshark.org/review/36107
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit d7bbe384f51b99b03694db811f48cf5a098ad65c)
    Reviewed-on: https://code.wireshark.org/review/36130

commit 7d6291dc3d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 16 08:33:38 2020 +0000

    [Automatic update for 2020-02-16]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I77ddecc1ea93b94156c86103dc6a0a1c64fd1698
    Reviewed-on: https://code.wireshark.org/review/36117
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 2125c8ae2e
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Fri Feb 14 22:13:12 2020 +0000

    QUIC: explicitly report verified Retry Integrity Tag values
    
    When verification fails, it is reported, but when verification
    succeeded, it was not entirely sure whether this happened. Change it:
    
        ...
        Retry Token: a1146aad02d817fec13d6cb95e48b0e3a4d8bd7eb1029588ac9dc55434381cea9c5cec6b…
        Retry Integrity Tag: 0b299146c79957dff224ecec33d8b2fc [verified]
    
    Change-Id: I7b99e74d091c28677be91cc6544a0e2cdc1d9ae1
    Ping-Bug: 13881
    Reviewed-on: https://code.wireshark.org/review/36111
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 273ec3ffef76db2441392c7f4f919747443a4a7e)
    Reviewed-on: https://code.wireshark.org/review/36112
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit acf9162225
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Jan 28 23:31:53 2020 +0000

    QUIC: add verification of Retry Integrity Tag (draft -25)
    
    This could help diagnosing early implementation errors using
    https://github.com/marten-seemann/quic-interop-runner
    
    Tested with capture files based on sample provided by Marten Seemann:
    1. Valid Retry packet should not add the "quic.bad_retry" field.
    2. Mutated, invalid tag: "Retry Integrity Tag verification failure"
    3. A missing Initial: "Cannot verify Retry Packet due to unknown ODCID"
    
    As side-effect, the connection tracking code can now distinguish between
    a connection where the server sent an empty SCID and a connection where
    the server did not send an Initial.
    
    Bug: 13881
    Change-Id: I972acd680b1becc9fb7b9e002b400886a06bc828
    Reviewed-on: https://code.wireshark.org/review/35978
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit d24fbbc5a0cdfbeb0cb8d45d7e15f3139bbcb647)
    Reviewed-on: https://code.wireshark.org/review/36109
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 29995b501c
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat Feb 1 16:21:26 2020 +0000

    QUIC: ignore invalid short header packet to fix decryption
    
    The unencrypted padding after the client Initial Packet was interpreted
    as a short header packet. At that point, the TLS dissector has not
    encountered the Server Hello yet and was not able to provide decryption
    secrets. The QUIC dissector wrongly assumed that decryption would never
    be possible from that point on.
    
    Add a comment to clarify why decryption was skipped, and avoid treating
    the zero padding as Short Header (SH) packets to fix decryption.
    
    Alternatively, the short header dissector could try to validate the DCID
    in SH packets, but that might result in failure to dissect legitimate SH
    packets when the handshake packets are missing.
    
    Ping-Bug: 13881
    Change-Id: Id20eb23c976226cb3ef78ac91f25a291f94dc805
    Reviewed-on: https://code.wireshark.org/review/36000
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit a2368cd1243f49f9fe3376f09572bb747307c93b)
    Reviewed-on: https://code.wireshark.org/review/36103
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 26d9a5e9fc
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Fri Jan 31 15:15:21 2020 +0000

    QUIC: recognize Connection ID between 1 and 3 bytes
    
    Since draft 22 the CID length ranges from 1 - 20 instead of 4 * 18.
    Firefox 74.0a1 happened to send a SCID of 3 bytes which resulted in
    failure to find the connection for short header packets.
    
    Ping-Bug: 13881
    Change-Id: Iacff6ea215fd27861d196bc831991be7e4450419
    Reviewed-on: https://code.wireshark.org/review/35993
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 9e894cfbd8a9252c3bcc34abf36ff200b70b4262)
    Reviewed-on: https://code.wireshark.org/review/36102
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit c27c54eff1
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Jan 28 07:28:36 2020 +0100

    QUIC: Need to remove Retry Integry Tag to Retry Token Length
    
    Issue found by Marten Seemann (on QUIC Slack)
    
    Change-Id: I4b50bae48373758253f21b371025d87d901c0a1d
    Ping-Bug: 13881
    Reviewed-on: https://code.wireshark.org/review/35973
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ddc03b8c87b6b8c7438b43596a388a19910aad85)
    Reviewed-on: https://code.wireshark.org/review/36101

commit 8bbfc1795a
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Jan 27 21:36:57 2020 +0000

    QUIC: update Retry Packet and comments, rename idle_timeout (draft -25)
    
    Final changes for draft -25:
    * Update Retry Packet dissection.
    * Rename idle_timeout to max_idle_timeout and remove the
      TransportParameterId enum that was removed in the spec. Originally the
      spec changed it into a varint, but this was reverted to uint16 before
      the draft was released. To keep the description short, the original
      TLS-style formatting was maintained instead of using ASCII art.
    
    Change-Id: Id72df59de128ab5028727abbbb01c585ec284809
    Bug: 13881
    Reviewed-on: https://code.wireshark.org/review/35963
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 6e6831fbd38dce74da378d8d62aeb4216a891c30)
    Reviewed-on: https://code.wireshark.org/review/36100
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 63aae818d8
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Wed Jan 22 23:43:03 2020 +0000

    QUIC: add new frame type and transport code (draft -25)
    
    Bug: 13881
    Change-Id: Ia62917a9d37f8d47a19288f6aacd78cd6748035e
    Reviewed-on: https://code.wireshark.org/review/35917
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit d7d14f230f6582f052d8b930df860e87786c133d)
    Reviewed-on: https://code.wireshark.org/review/36099

commit 5a13c2316f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Feb 12 12:07:52 2020 -0800

    WiMax DLMAP: Fix a large loop.
    
    Make sure we advance our offset.
    
    Bug: 16383
    Ping-Bug: 16368
    Change-Id: I4949cb0988601dbe545d0bc22de4d654b4e61204
    Reviewed-on: https://code.wireshark.org/review/36085
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 6dad599a8a1bda8b8e999cc4a7e460140e4ecc0a)
    Reviewed-on: https://code.wireshark.org/review/36092

commit 0b2675b8e8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Feb 11 09:53:49 2020 -0800

    CMake: Fix WinSparkle discovery.
    
    g46b3753d53 changed "ws_find_package(WINSPARKLE ..." to
    "ws_find_package(WinSparkle ..." in CMakeLists.txt in order to
    fix an issue with case-sensitive folders.
    
    This exposed a different issue in FindWinSparkle.cmake, where we
    were passing "WINSPARKLE" to find_package_handle_standard_args. When
    successful this would set WINSPARKLE_FOUND, which would in turn *not*
    match WinSparkle_FOUND in ws_find_package, which means that we wouldn't
    enable automatic updates.
    
    Pass "WinSparkle" to find_package_handle_standard_args instead. Using
    a mixed-case package name results in setting both PackageName_FOUND and
    PACKAGENAME_FOUND, which fixes our various checks.
    
    Bug: 16381
    Change-Id: I46ef98194dc060ad37d9a30bff4d9e905713759e
    Reviewed-on: https://code.wireshark.org/review/36079
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit acaba5ee7ea04c64d20f974909a0bada5c0caedb)
    Reviewed-on: https://code.wireshark.org/review/36083

commit 5e7d3df3ff
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 9 08:33:20 2020 +0000

    [Automatic update for 2020-02-09]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ifeb28ae958e7a5854bb0eaab0d83916c718ca3b8
    Reviewed-on: https://code.wireshark.org/review/36061
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 49c6720028
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Feb 7 11:17:35 2020 -0800

    WiMax DLMAP: Add a length check.
    
    Make sure we have enough data for a CRC.
    
    Bug: 16368
    Change-Id: I03a2532061a5cf5e28cb65c83dd4ab90654d1679
    Reviewed-on: https://code.wireshark.org/review/36049
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 4d6b179e2d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Feb 5 14:52:07 2020 -0800

    macOS: Remove a version check from osx-app.sh.
    
    In osx-app.sh, $VERSION used to hold the minor version of the OS. We no
    longer set it and it's probably safe to assume that we're building on
    Lion or later, so remove it.
    
    Change-Id: I8e85cd7c2fe2162019c7c436b7865be95d4a33e2
    Reviewed-on: https://code.wireshark.org/review/36039
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit 9266a2726438d79ad3163a063d6b4afc3ce827ee)
    Reviewed-on: https://code.wireshark.org/review/36040

commit 1b6c8a29ca
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Sun Feb 2 14:33:48 2020 +0100

    ISAKMP: Critical flag should not be in proposals and transforms
    
    IKEv2 added the critical flag to all payloads except payloads and
    transforms. The dissection code just checked that it was looking at
    IKEv1 but missed a check for proposals and transforms.
    
    Bug: 16364
    Change-Id: Ia9297af039fddf2da81f9712fdf7ac165fb2d86d
    Signed-off-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>
    Reviewed-on: https://code.wireshark.org/review/36009
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 8c9efa5f1bc1f57b4293ea39b76c91548dc45121)
    Reviewed-on: https://code.wireshark.org/review/36013
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit fd0e8bca3b
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Feb 4 02:07:10 2020 +0000

    Qt: simplify decode_as_ action in the packet details view
    
    Use the "create_new" property convention similar to PacketList. Fix a
    "QWidget::insertAction: Attempt to insert null action" warning in the
    packet dialog while at it.
    
    Change-Id: I29b3b113aba92634b1b9a3427e2313fca30633eb
    Reviewed-on: https://code.wireshark.org/review/36023
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 55f83324ef48f79f7e0471a26213b9c901d089ad)
    Reviewed-on: https://code.wireshark.org/review/36034

commit 83c66f51f9
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Feb 3 19:05:51 2020 +0100

    Qt: make Decode As from packet list functional again
    
    The "create_new" property was never set which prevented a new row from
    being created once the dialog is opened.
    
    Change-Id: I19c793ebd219bb58cb34f4d67451660ace51aa32
    Fixes: v3.1.1rc0-254-gf402b4cdaa72 ("Qt: PacketList call DecodeAsDialog directly")
    Reviewed-on: https://code.wireshark.org/review/36020
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 6bbd61860bfee8dd6b122dd7d51294d9323d7369)
    Reviewed-on: https://code.wireshark.org/review/36033

commit ae128ce446
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Jan 14 13:23:35 2020 -0800

    macOS: Force-sign Sparkle's AutoUpdate.app.
    
    Sparkle's AutoUpdate.app has its own signature, which fails Apple's
    notarization requirements.
    
    Change-Id: I5fc5490a3e7ef63dd84fe59369ddd8cf42ddeff6
    Reviewed-on: https://code.wireshark.org/review/35813
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit 9a5eb26b28a5c3b46e61905c5d2879b8f5cf1cc5)
    Reviewed-on: https://code.wireshark.org/review/36030

commit c87e76bdec
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Mon Feb 3 21:28:48 2020 +0100

    CFDP: Fix off-by-one offset
    
    Reference: https://public.ccsds.org/Pubs/727x0b4.pdf (page 5-1).
    
    Bug: 16361
    Change-Id: I4544dc1c968c4c42dad82e11b00459cdbc85045f
    Reviewed-on: https://code.wireshark.org/review/36021
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit f5f435305bb9551b6429648a4923aaaf3fff06bb)
    Reviewed-on: https://code.wireshark.org/review/36025
    Petri-Dish: Anders Broman <a.broman58@gmail.com>

commit 021208b29b
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Feb 4 13:51:51 2020 +0000

    Qt: allow Resolved Addresses search filter to be cleared
    
    Allow the filter in the Resolved Address dialog to be cleared to disable
    filtering without requiring the dialog to be reopened.
    
    Change-Id: I8164d42ac763f8b7faf23821633e129feba69790
    Fixes: v3.1.1rc0-244-g743f8598cd0b ("Qt: Rework Resolved Addresses dialog")
    Reviewed-on: https://code.wireshark.org/review/36027
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 995672e8b6902cd3382ee2af8c36be1ca34ba126)
    Reviewed-on: https://code.wireshark.org/review/36029
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit a8243b37d0
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Feb 4 01:55:12 2020 +0000

    Qt: fix missing IP hosts in Resolved Addresses dialog
    
    Fix several issues in the Resolved Addresses dialog:
     - Missing IP hosts because the list was populated with one
       tab-separated item while the caller expected space-separated items.
     - Fix duplicate entries due to the "values" list not being cleared.
     - Remove IPv4/IPv6 Hash Tables since these are a superset of IPv4/IPv6
       Hosts, except that the former also includes mappings without a known
       name (e.g. 8.8.8.8 -> 8.8.8.8).
     - Fold both IPv4 and IPv6 hosts into one as before. Users like me
       usually look for any IP match, regardless of the address family.
     - Minor optimizations: do not construct the label every time.
     - Rename "Mac Address" [sic] to simply "Address", that covers both IP
       addresses and MAC addresses.
    
    Bug: 16366
    Change-Id: I6253fc01da7b6429ce093e7db9fe58e235b7c137
    Fixes: v3.1.1rc0-244-g743f8598cd0b ("Qt: Rework Resolved Addresses dialog")
    Reviewed-on: https://code.wireshark.org/review/36022
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 0596047e3fde7ebcd09f5daa4782e423795783c1)
    Reviewed-on: https://code.wireshark.org/review/36024

commit 8e4d1984d3
Author: Darien Spencer <cusneud@mail.com>
Date:   Mon Feb 3 14:46:39 2020 +0200

    NBAP: Actually set max mac-d pdu size flag
    
    This completes the commit at: 2bd79c82088f92311bb67f58e8d54ff1d471a7d6
    
    Change-Id: I439ba64a248a66094c575a2629a5344c716f0f5c
    Reviewed-on: https://code.wireshark.org/review/36015
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit e4094aeac650592e7d8a15b29f1f9012274fa5ec)
    Reviewed-on: https://code.wireshark.org/review/36016

commit f8e55c7d7f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 2 08:33:55 2020 +0000

    [Automatic update for 2020-02-02]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Iec23b9fd1d033f8d594876c29ceb3a5d923177fd
    Reviewed-on: https://code.wireshark.org/review/36006
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 33d0da9f6f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Jan 31 16:39:37 2020 -0800

    Check for liblua-{version} as well as liblua{version}.
    
    FreeBSD packages install liblua-{version}.
    
    Change-Id: Ib28d2032a13baff9da42d61e3054a8b8e64b5cc9
    Reviewed-on: https://code.wireshark.org/review/35994
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 555279facbb2d154845a57069f56d1e9b0de44d6)
    Reviewed-on: https://code.wireshark.org/review/35995

commit 71f8b97193
Author: Orgad Shaneh <orgad.shaneh@audiocodes.com>
Date:   Wed Jan 29 09:05:45 2020 +0200

    RTP: Fix rtpdump export
    
    Broke by 87973bf516432756f6948e969dbe9d6aa8a27017.
    
    RtpStreamDialog allocates its own rtpstream_info_t, and copies the original stream's info.
    
    Then RtpStreamDialog::on_actionExportAsRtpDump_triggered calls
    rtpstream_save with this copy.
    
    On save, reset_tap_listeners is called, and it clears all the tree items,
    destroying the allocated copy *before* it is used for the actual export.
    
    Trace:
    1   rtpstream_info_free_all                             tap-rtp-common.c       104
    2   RtpStreamTreeWidgetItem::~RtpStreamTreeWidgetItem   rtp_stream_dialog.cpp  85
    3   RtpStreamTreeWidgetItem::~RtpStreamTreeWidgetItem   rtp_stream_dialog.cpp  86
    4   QTreeModel::clear()
    5   RtpStreamDialog::tapReset                           rtp_stream_dialog.cpp  309
    6   rtpstream_reset_cb                                  tap-rtp-common.c       172
    7   reset_tap_listeners                                 tap.c                  418
    8   cf_retap_packets                                    file.c                 2243
    9   rtpstream_save                                      rtp_stream.c           97
    10  RtpStreamDialog::on_actionExportAsRtpDump_triggered rtp_stream_dialog.cpp  515
    
    Bug: 16351
    Change-Id: I54d37a2c97997395936df94ee5481b0d6d198aed
    Reviewed-on: https://code.wireshark.org/review/35979
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit eb0dcc984f49e58bad3312290b1ee965097bc222)
    Reviewed-on: https://code.wireshark.org/review/35987

commit 744afc9525
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon Jan 27 15:46:24 2020 -0800

    Fix indentation.
    
    Change-Id: Ib80213ecb5c02d64f107706971c646decc601e8d
    Reviewed-on: https://code.wireshark.org/review/35967
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 5ee99dde915c818323e9c964ead0abfffd632917)
    Reviewed-on: https://code.wireshark.org/review/35968

commit 625ac38d79
Author: Dario Lombardo <lomato@gmail.com>
Date:   Fri Jan 10 15:42:58 2020 +0100

    Fix compilation with gcc-9.
    
    gcc-9 spotted some NULL pointer usages.
    
    Bug: 16319
    Change-Id: I3e4ac57705f1852c43299f5e924fc642a2c56a3a
    Reviewed-on: https://code.wireshark.org/review/35733
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 084a887a30b78a3f4f42aa35a15049c251adfcfa)
    Reviewed-on: https://code.wireshark.org/review/35964
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit c2f1429c32
Author: Dario Lombardo <lomato@gmail.com>
Date:   Fri Jan 17 23:06:34 2020 +0100

    Qt: replace QRegExp with QRegularExpression in FilterListModel.
    
    The new class has a more powerful support for non-greedy regexps
    (required in this case).
    
    See: https://doc.qt.io/qt-5/qregularexpression.html#notes-for-qregexp-users
    
    Bug: 16336
    Change-Id: I4684fbf6aeeb55707d325775de487246ac398c2d
    Reviewed-on: https://code.wireshark.org/review/35858
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 59108b16835707dee35680d5951ffa1b4fd49b9e)
    Reviewed-on: https://code.wireshark.org/review/35958
    Petri-Dish: Dario Lombardo <lomato@gmail.com>

commit d5699ab154
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 26 08:33:25 2020 +0000

    [Automatic update for 2020-01-26]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ia8513252ae83961071b43f49165d030e24a513b1
    Reviewed-on: https://code.wireshark.org/review/35950
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 908ed20a9c
Author: Erwin Rol <erwin@erwinrol.com>
Date:   Tue Dec 24 10:52:37 2019 +0100

    artnet: Fix ArtPollReply universe calculation
    
    The SubSwitch field holds bit 7-4 of the 15bit port address, but
    it holds it in bit 3-0 so we have to shift it 4 bits instead of
    taking bit 7-4 of the SubSwitch field.
    
    Change-Id: I7841d64749e8a561e4ee928a23a3c46cb5be34cb
    Signed-off-by: Erwin Rol <erwin@erwinrol.com>
    Reviewed-on: https://code.wireshark.org/review/35910
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 824fef51aa3efc7a146ea57de90b1a6135614496)
    Reviewed-on: https://code.wireshark.org/review/35946
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit 05939ebb7c
Author: Erwin Rol <erwin@erwinrol.com>
Date:   Sat Jan 11 17:14:44 2020 +0100

    rdm: Remove incorrect dissection of ack overflow data
    
    Ack overflow data was incorrectly dissected causing checksum errors. For now
    just display raw data.
    
    Change-Id: Icdd858bdbeeb4dd40e48c45fc46e5e188d53be69
    Signed-off-by: Erwin Rol <erwin@erwinrol.com>
    Reviewed-on: https://code.wireshark.org/review/35915
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 4f462bb6e3470ccb09b8da1efd4f133169aef03d)
    Reviewed-on: https://code.wireshark.org/review/35943
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>

commit aa3be879c4
Author: Volodymyr Khomenko <volodymyr@vastdata.com>
Date:   Sat Dec 7 11:16:53 2019 +0200

    Bugfix SMB IOCTL response with BUFFER_OVERFLOW
    
    In case if SMB IOCTL response packet (seen to happen for FSCTL_PIPE_TRANSCEIVE but applicable for others)
    has STATUS_BUFFER_OVERFLOW status code, dissection is done improperly
    (wrong offset to IOCTL response body is calculated so content is corrupted).
    Packet body with STATUS_BUFFER_OVERFLOW status should be handled in the same way as STATUS_SUCCESS packet.
    
    Bug: 16261
    Change-Id: I05d05ed9fa16f8b128590cd505fe9b0270dd74ab
    Reviewed-on: https://code.wireshark.org/review/35341
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 718837ac45ef3b74d6e1444ec36055ff55443767)
    Reviewed-on: https://code.wireshark.org/review/35941
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>

commit a8d3c1bc29
Author: João Valverde <joao.valverde@tecnico.ulisboa.pt>
Date:   Thu Jan 23 02:13:40 2020 +0000

    IPv4: Fix display of Fragment Offset field
    
    Bug: 16344
    Change-Id: I0fe0bec606a103e0cb96c6b6da0f98f9b12097b7
    Fixes: v3.1.0rc0-916-g237ec1349f ("IP: Make dissection of ip.frag_offset RFC 791 compliant")
    Reviewed-on: https://code.wireshark.org/review/35918
    Petri-Dish: João Valverde <j@v6e.pt>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/35926
    Reviewed-by: João Valverde <j@v6e.pt>

commit ebdcb37e93
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jan 22 08:25:39 2020 +0100

    someip: Fix guint64 printf formats
    
    Use G_GUINT64_FORMAT and remove the format character when printing
    unsigned value. Use G_GINT64_MODIFIER when also giving the format
    character ('x').
    
    Change-Id: I7c02ec3ebd058c392f8fb21a0e20e242a06e8888
    Reviewed-on: https://code.wireshark.org/review/35896
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 919b4ca1cf16de65f99b95004efc63ea69dec17b)
    Reviewed-on: https://code.wireshark.org/review/35920
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 030f62840c
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Jan 23 09:30:41 2020 +0100

    RTCP: fix packet length check when having unhandled application data
    
    The offset variable was not incremented in that case
    
    Bug: 16345
    Change-Id: Ifb73a2ef9371ef5e4567013056fc77ca83a89e37
    Reviewed-on: https://code.wireshark.org/review/35919
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 6686ffcf6ba61a23287735ba3eb78f7708a0dfb6)
    Reviewed-on: https://code.wireshark.org/review/35921

commit 4386a1d94f
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Tue Jan 21 22:06:16 2020 +0100

    NVME-TCP: Fix ICReq fields:
    
    Fix handling of ICReq fields as documented at
    https://nvmexpress.org/wp-content/uploads/NVMe-over-Fabrics-1.1-2019.10.22-Ratified.pdf
    Section 7.4.10.2   Initialize Connection Request PDU (ICReq)
    
    Bug: 16333
    Change-Id: I96d9f05dd7c2c7b0c5a2a70df494cf0b163d10d1
    Reviewed-on: https://code.wireshark.org/review/35892
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit b0d959eef80bf311a59f1949f8fc11ac64a97178)
    Reviewed-on: https://code.wireshark.org/review/35909

commit 0ce952b724
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Jan 22 11:38:02 2020 +0100

    LTE RRC: fix a memory leak in composite TVB handling
    
    Bug: 16341
    Change-Id: Ib6c020ea3df8b39a02f742f0684fca7db96f1fc3
    Reviewed-on: https://code.wireshark.org/review/35899
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit adeeb7f2da801303768ce96e2cacf6a703a69c6f)
    Reviewed-on: https://code.wireshark.org/review/35901

commit 884ca058f3
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Jan 22 10:35:24 2020 +0100

    GTP: fix a leak in UAT
    
    Change-Id: Ibe4224cf1ac924be88e2352524dd4618976b683d
    Reviewed-on: https://code.wireshark.org/review/35898
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 7bc9cd620b16ccc0ea88be794293c3a25958e4a6)
    Reviewed-on: https://code.wireshark.org/review/35900

commit 67161b509b
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Jan 20 22:23:43 2020 +0100

    CoAP: change detection logic for CoAP over TCP or TLS
    
    Do not assume that having a TCP port means that CoAP is running directly
    over TCP: this is not the case with MQTT for example (see bug 14591 for
    a capture). Instead explicitly check that the parent dissector is TCP or
    TLS.
    
    Bug: 15910
    Change-Id: Ib4880623b8525fe6be52a685397005eac86da135
    Reviewed-on: https://code.wireshark.org/review/35879
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 75e1b69e88bb6856bbae443aa64efdceb3e39117)
    Reviewed-on: https://code.wireshark.org/review/35894
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit 218620a925
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Jan 20 21:38:44 2020 +0100

    ICMP/ICMPv6: fix request/response tracking for checksum 0x0000
    
    Apply the change proposed by Chris Maynard in
    https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=16334
    
    Bug: 16334
    Change-Id: I91d79d992c107ca4ddaa17c25c3629424cc240f6
    Reviewed-on: https://code.wireshark.org/review/35878
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/35882
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit 3e28006070
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jan 3 08:18:32 2020 -0800

    macOS: Add a disk volume icon.
    
    Add a badge icon (custom removable disk icon) for our disk image volume.
    
    Change-Id: If2a88efb76061bbf72ddc9844435429d20da6183
    Reviewed-on: https://code.wireshark.org/review/35867
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit dd4b562df20f720c96c8f005ee8170ccf2265dd6)
    Reviewed-on: https://code.wireshark.org/review/35880
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit edf5e20780
Author: Jeroen Roovers <jer@gentoo.org>
Date:   Fri Jan 17 14:43:27 2020 +0100

    ui: Define plugins_add_description() unconditionally
    
    Since commit 5dfde7ff ("Print extcap plugins with "tshark -G
    plugins"."), compiling with -DENABLE_LUA=no -DENABLE_PLUGINS=no fails.
    The definition of plugins_add_description() is guarded by HAVE_PLUGINS
    || HAVE_LUA, but that definition is used without such guards for extcap
    right below, resulting in:
    
    ui/qt/about_dialog.cpp:137:29: error: 'plugins_add_description' was not
    declared in this scope
    
    Fix this by removing the guards around plugins_add_description().
    
    Change-Id: Ieaddfed923ae3782ade28b2f5004b6a34220659a
    Fixes: 5dfde7ff83a35bb7186cd05ce61f4b139ab01203
    Reviewed-on: https://code.wireshark.org/review/35852
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit f605e9466b60c996d88ace1469ec19ecc44b46dd)
    Reviewed-on: https://code.wireshark.org/review/35870

commit 6e4ceebd93
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 19 08:33:01 2020 +0000

    [Automatic update for 2020-01-19]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Icc62ad842a3edccd00cdfeb8b4a8d3f47754c852
    Reviewed-on: https://code.wireshark.org/review/35864
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 1508fc1c29
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Fri Jan 17 14:08:38 2020 +0100

    Qt: Support ampersand in profile name
    
    An ampersand in the menu item text is used as shortcut, so use "&&" to
    get a real ampersand.
    
    Change-Id: I333c65bb55cfa01ab60d41df20f443701067e42d
    Reviewed-on: https://code.wireshark.org/review/35851
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit 07812b00975a2efad5d0369b206665bc7ae7e920)
    Reviewed-on: https://code.wireshark.org/review/35860

commit 21c3d2f403
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jan 16 22:21:37 2020 +0100

    DOC: Remove lingering references to autotools
    
    In the README.plugins file there is still mention of autotools related items.
    This change removes those lingering references.
    
    Change-Id: I1fc7c6d478a6fc8bbe9481178d9f673aaebcad9f
    Reviewed-on: https://code.wireshark.org/review/35843
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 597ca8aa384ab471f44708c4d34bb1bf06831625)
    Reviewed-on: https://code.wireshark.org/review/35847

commit 79562c8907
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Jan 15 22:14:16 2020 +0100

    lapdm(.h): fix duplicate include guard (found by lgtm.com)
    
    Change-Id: I3cf4d30f5e91b6182c64b7f016e03d63aa1066d0
    Reviewed-on: https://code.wireshark.org/review/35829
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d1021c2324b1233337ac5a5e25862cc4f1ed5975)
    Reviewed-on: https://code.wireshark.org/review/35832

commit 3e29d04fba
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jan 15 12:31:14 2020 -0800

    3.2.1 → 3.2.2.
    
    Change-Id: I6eee09e456e4676d43c1889a3892226d16c6816a
    Reviewed-on: https://code.wireshark.org/review/35825
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
