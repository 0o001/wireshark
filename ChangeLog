commit 9d5f0411bd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 21 10:41:41 2019 -0700

    Add dissection recursion checks.
    
    Enforce a maximum layer limit in call_dissector_work and
    dissector_try_heuristic.
    
    Bug: 15778
    Change-Id: I691868e980384b76a64f88de4db5bb7340a7c4aa
    Reviewed-on: https://code.wireshark.org/review/33301
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Dario Lombardo <lomato@gmail.com>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit be9bdfda02a2498c6f65122d80e3a8b4235dc7f5)
    Reviewed-on: https://code.wireshark.org/review/33309

commit a361bb98d0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 21 15:45:49 2019 -0700

    Prep for 2.6.9.
    
    Change-Id: I6e698d5ef5757d3801d7971feba1dbff86ff0b6e
    Reviewed-on: https://code.wireshark.org/review/33304
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 83f20db0b1
Author: Dario Lombardo <lomato@gmail.com>
Date:   Mon May 20 15:31:59 2019 +0200

    pcapng: fix the magic when bytes are swapped.
    
    This value is used when checking if the file was generated on a
    machine with different endianess. The error message changes from
    
    "Unrecognized pcapng format or not pcapng data."
    
    to
    
    "dumpcap: Interface 0 is big endian but we're little endian."
    
    Fix dumpcap.c and pcapio.c.
    
    Ping-Bug: 15754
    Change-Id: I3a31f873f01bcb3f1324410e70f29f285e56c715
    Reviewed-on: https://code.wireshark.org/review/33274
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 3e53ec5e11e141c37aa26b3472cc45bd4cdbfb0d)
    Reviewed-on: https://code.wireshark.org/review/33290
    Petri-Dish: Dario Lombardo <lomato@gmail.com>

commit 427ceece10
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 20 23:02:39 2019 -0700

    Fix format_uri().
    
    It was using the same index into the input and output strings, which
    means that if it escaped any character, it would skip the next two
    characters in the input sring.
    
    It was also not clearing is_reserved before testing whether a character
    was reserved, so once it saw a character that neede dto be escaped, it
    would escape all subsequent characters.
    
    It was only used in get_key_string(), which was never used, so it was
    dead code, but let's at least fix it, even if we end up removing that
    code, so that if we bring it back, we bring back a non-broken version,
    and so that if anybody *else* uses it, it's not broken.
    
    Change-Id: I36588efad36908e012023bcfbd813c749a6a254f
    Reviewed-on: https://code.wireshark.org/review/33287
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit a409987eeaded5d7f6c7379530fbe856e9a97c7b)
    Reviewed-on: https://code.wireshark.org/review/33293

commit a266bf0a3a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 19 08:52:57 2019 +0000

    [Automatic update for 2019-05-19]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Icb24c425cf5edb575b48865620dcc2b8f0119a7a
    Reviewed-on: https://code.wireshark.org/review/33258
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 5504228ad7
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu May 16 10:50:03 2019 -0700

    In pcapng_open(), don't use the local pcapng_t once we know it's a pcapng file.
    
    Use the local one *only* while we're trying to determine whether we have
    a pcapng file or not; once we know we have a pcapng file, and have
    allocated a pcapng_t and attached it to the wtap structure, pass *that*
    one to pcapng_read_block(), so if it changes anything in the pcapng_t,
    it changes the one we're using.
    
    Change-Id: I53b32595276be97957a0b6056171471878fa40c4
    Reviewed-on: https://code.wireshark.org/review/33226
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 576f33fffd4384d869ae516aa3f346d2ce0b4c6b)
    Reviewed-on: https://code.wireshark.org/review/33228

commit 38a48c3d5c
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed May 15 18:25:42 2019 -0700

    Keep and use per-interface, not per-file, FCS length information.
    
    There is no FCS length information for a pcapng file; there's FCS length
    information for each interface.
    
    Change-Id: I3abb1a35b28475aa3ad6f126060140d0a524bbca
    Reviewed-on: https://code.wireshark.org/review/33215
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit f8ac57a2c4d3b0bab160dc5da925c1bb83e39444)
    Reviewed-on: https://code.wireshark.org/review/33218

commit 371fcaf019
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat May 11 15:04:41 2019 +0100

    Qt: do not expose a UAT record if the update callback fails
    
    The default chk callbacks for individual fields only catches basic
    errors such as invalid, too large numbers. Many dissectors perform
    additional validation in the update_cb which is invoked for a record as
    a whole. If this check fails, then the UAT must not be marked as valid
    or else invalid records (like NULL pointers) could be exposed.
    
    Thanks to Uli Heilmeier for noticing this.
    
    Bug: 15709
    Change-Id: I1cc4c6925322011a561ad6df840fbac67796e5b2
    Fixes: v2.3.0rc0-1002-g1cd22559a8 ("Qt: convert UatDialog to model/view pattern, improve UX")
    Reviewed-on: https://code.wireshark.org/review/33157
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Uli Heilmeier <openid@heilmeier.eu>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 7b43c480f6c2914e7d5fa69d78e69b0a50fed7c7)
    Reviewed-on: https://code.wireshark.org/review/33210
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 536eae4822
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 13 15:36:17 2019 -0700

    mmdbresolve: Improve our main loop check.
    
    Check the return value of fscanf() instead of relying on feof(). This
    should help ensure that we exit correctly.
    
    Bug: 15777
    Change-Id: I8b5985f6015cb6a85378db5135b29bb2c3de1e90
    Reviewed-on: https://code.wireshark.org/review/33196
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 276d62b639c2dbbe8ada823c2ca714daccbd0ce7)
    Reviewed-on: https://code.wireshark.org/review/33207

commit 2ae17b88bc
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 13 15:55:17 2019 -0700

    Fix SMB2 decryption on big-endian machines.
    
    Convert the host-endian session ID passed to seskey_find_sid_key()
    before comparing it with the little-endian session IDs in the UAT.
    
    While we're at it, tag session ID fields in various structures with the
    byte order.
    
    Bug: 15772
    Change-Id: Ib1e7323bad1dfdb1ac24a08998205650f2744097
    Reviewed-on: https://code.wireshark.org/review/33188
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 3234152bec1d1245cc0a8288c9be90242e2a11ed)
    Reviewed-on: https://code.wireshark.org/review/33190

commit c8b70ca98d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 12 11:20:30 2019 -0700

    Fix the length of the item added for the value field of undissected CLVs.
    
    The length variable is the length of the value, not the length of the
    entire CLV, so there's no need to subtract the length of the C and the
    L from the length - it covers just the V.
    
    Change-Id: I711657e4e0b76e2aac9d58efd88f45201b9c2c5b
    Reviewed-on: https://code.wireshark.org/review/33174
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit beed21b038683377efb7b5c13b36a3a35fa720a2)
    Reviewed-on: https://code.wireshark.org/review/33176

commit e9e42f7469
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 12 09:07:16 2019 +0000

    [Automatic update for 2019-05-12]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I9e9d7e64cd0a55fc5778c1d95a1403442e5ebfe0
    Reviewed-on: https://code.wireshark.org/review/33164
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 7204343d7a
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Thu May 9 13:10:20 2019 +0000

    bacapp: fix wrong value for id 183
    
    logging-device => logging-object
    
    Issue reported by kitagaki
    
    Bug: 15767
    Change-Id: Ic4534a004057fe3f9915b7a2d258ae2a87884a0e
    Reviewed-on: https://code.wireshark.org/review/33133
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ff7f584e265c0d774b037c2a9ca8dbb0fdab1ed6)
    Reviewed-on: https://code.wireshark.org/review/33136

commit ff4b8613ff
Author: Dario Lombardo <lomato@gmail.com>
Date:   Thu May 2 18:43:25 2019 +0200

    frame: increase EXCEPTION_TREE_ITEMS.
    
    Thanks to Peter Wu for the deep analysis of the issue:
    
    Reproduce this issue with master v3.1.0rc0-662-gfd30adca44 and the reproducer from
    the oss-fuzz issue tracker:
    
    HOME=/x FUZZSHARK_TABLE=ip.proto FUZZSHARK_TARGET=ospf fuzzshark
        clusterfuzz-testcase-minimized-fuzzshark_ip_proto-ospf-5128657784799232
    
    Attached are the traces for watchpoints on changes to parent_tree.tree_data.count,
    this revealed 7 nodes that were added from the catch block in epan/expert.c:759
    
    show_reported_bounds_error adds a proto node and calls expert_add_info:
    1. _ws.malformed - protocol node via epan/show_exception.c:177
    
    expert_create_tree adds two items:
    2. _ws.malformed - expert tree via epan/expert.c:480
    3. _ws.malformed - protocol filter because group==PI_MALFORMED via epan/expert.c:488
    
    Because an explicit ei field was given: "add_expert_info(..., &ei_malformed)", two
    fields are added instead of one:
    4. _ws.malformed.expert - none node via epan/expert.c:543
    5. _ws.expert.message - string node via epan/expert.c:545
    
    Two more fields are added for the severity and group:
    6. _ws.expert.severity - uint node via epan/expert.c:549
    7. _ws.expert.group - uint node via epan/expert.c:552
    
    So this problem would never occur when an exception is triggered via DISSECTOR_ASSERT,
    but only for ReportedBoundsError exceptions (which occur when trying to use proto_tree_add_item
    with invalid bounds for a tvb).
    
    In conclusion, increasing EXCEPTION_TREE_ITEMS by 2 would suffice, but bump it to 10
    (double the current value) to prevent similar crashes to happen if few more items
    will be added in the future.
    
    Bug: 14978
    Change-Id: Ib9f5e254aeb4d756da5bab8f2e7ccf2572764aa4
    Reviewed-on: https://code.wireshark.org/review/33060
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Dario Lombardo <lomato@gmail.com>
    (cherry picked from commit f3a86c02dd8bda54cc23d0cc5fdd07702fbaa211)
    Reviewed-on: https://code.wireshark.org/review/33123

commit 245b8fe61f
Author: Dario Lombardo <lomato@gmail.com>
Date:   Tue May 7 10:59:16 2019 +0200

    print: remove leak in ek_check_protocolfilter().
    
    Small rework while here to prevent the creation of str_escaped if
    the input string is enough for the check.
    
    Bug: 15758
    Change-Id: I5facf0307d1e0fed882bbe3ef91463164cf3440c
    Reviewed-on: https://code.wireshark.org/review/33100
    Petri-Dish: Dario Lombardo <lomato@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit bc4ffefdadea3724993a30fa58901720bc7a9ff8)
    Reviewed-on: https://code.wireshark.org/review/33105

commit cd33b10c80
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 6 20:31:49 2019 -0700

    Fix dissection of DDP length and checksum fields.
    
    The DDP length is 10 bits long, not 2 bits long; it includes the bottom
    2 bits of the first octet *and* all 8 bits of the second octet.
    
    The checksum is at an offset of 2, not 0, from the beginning of the header.
    
    Change-Id: I7e2b8eff4d023f80a894f1e1eec7b71d08510f7e
    Reviewed-on: https://code.wireshark.org/review/33094
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 9f9e69411b02c1a7e669b39928798403e2dc8fff)
    Reviewed-on: https://code.wireshark.org/review/33096

commit 00faf5e96e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 5 09:02:31 2019 +0000

    [Automatic update for 2019-05-05]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I53ef24d12e3df7be69a4d0d5eb557f6a79ea42a5
    Reviewed-on: https://code.wireshark.org/review/33083
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 35589e6f26
Author: Tomasz Moń <desowin@gmail.com>
Date:   Mon Apr 29 14:52:17 2019 +0200

    caputils: Fix endless recursive loop on Windows
    
    The functions loaded from dll are prefixed with "p_".
    Use the dll functions where appropriate.
    
    Change-Id: I7cf2c7dc0d04502fa7f922ca2822808bdc02f324
    Reviewed-on: https://code.wireshark.org/review/33010
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 7a6b6631c853412f5405fe6ca571790e23a4025c)
    Reviewed-on: https://code.wireshark.org/review/33012

commit 212488232e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 28 09:01:57 2019 +0000

    [Automatic update for 2019-04-28]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I53700a9b1a0f0d38c12f49f26893931948ddfcb0
    Reviewed-on: https://code.wireshark.org/review/33004
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 07e9965d51
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Thu Apr 25 00:46:43 2019 +0100

    Qt: do not fail Conversations -> Follow Stream based on packet list
    
    When a stream index is explicitly given (as is done for items from the
    Conversations statistics dialog), it does not have to query the stream
    index from the packet list. Skip checking the packet list then.
    
    Bug: 15672
    Change-Id: I3f79e6a0997726535c38f9766b894b042ffbf916
    Reviewed-on: https://code.wireshark.org/review/32972
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 8a112f219a2284b6becedfb0bf0970b2ef3f853a)
    Reviewed-on: https://code.wireshark.org/review/33001
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 63fcb64f2a
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 24 19:19:12 2019 -0700

    Do FIND_PACKAGE_HANDLE_STANDARD_ARGS() before checking ZLIB_FOUND.
    
    It's what sets {package}_FOUND.
    
    Combine two "do this if zlib was found" blocks.
    
    Change-Id: I55062a11c7ae7e6f32886615a0201df55f700d1e
    Reviewed-on: https://code.wireshark.org/review/32974
    Petri-Dish: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 5ae6a9bea6ba943e6c674799a7b906b3dffed157)
    Reviewed-on: https://code.wireshark.org/review/32981

commit cfeadc69ff
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 24 18:33:26 2019 -0700

    Don't look for zlib stuff if we didn't find zlib.
    
    If we didn't find zlib, don't look for its version number in zlib.h, and
    don't look for inflate() or inflatePrime() in the library.
    
    Trim off some trailing blank lines while we're at it.
    
    Change-Id: I834a9a76928a00cf5e182bd4224ebc91d36d69a4
    Reviewed-on: https://code.wireshark.org/review/32973
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit c66994215b4f0344d7ec6f9340ed79e647053018)
    Reviewed-on: https://code.wireshark.org/review/32977

commit c13930aee4
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sun Apr 21 03:16:12 2019 +0100

    packet: ensure pinfo->curr_layer_num does not depend on tree
    
    The TLS dissector relies on a stable value for pinfo->curr_layer_num
    between passes to enable handshake reassembly and decryption. A mismatch
    could occur if the subdissector accepted the data (len is non-zero), but
    did not add any tree items (tree->tree_data->count remains unchanged).
    
    The original change added the check for tree->tree_data->count in order
    to remove protocol names that are not visible in the tree. This could
    for example occur when the HTTP dissector accepts the data but requests
    more data for reassembly.
    
    This desire to hide protocols is understandable, so simply reverting the
    change would not be ok. Checking pinfo->desegment_offset is also not
    stable. So that leaves the current approach.
    
    Change-Id: I247adafbaa6d23ab9397eadacabaed9e1bfde997
    Ping-Bug: 15625
    Fixes: v2.5.0rc0-1206-gcd90f732a1 ("Improve frame.protocols accuracy.")
    Reviewed-on: https://code.wireshark.org/review/32919
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 5076e53ffb2b39d5d9ac2dcf6f2fd626bf2cafd7)
    Reviewed-on: https://code.wireshark.org/review/32950
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 22c1a4e25f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 21 08:56:41 2019 +0000

    [Automatic update for 2019-04-21]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I9a50832397d23bb71018af41187dcda0cb718ab4
    Reviewed-on: https://code.wireshark.org/review/32928
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 5c3e61eed9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 14 09:04:24 2019 +0000

    [Automatic update for 2019-04-14]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I64b20bae7b8630f0579cdf88c464fe328adad147
    Reviewed-on: https://code.wireshark.org/review/32846
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 4f9a9a659c
Author: Aymeric Moizard <amoizard@gmail.com>
Date:   Wed Apr 10 11:21:15 2019 +0200

    RTCP XR RR: fix dissection of timestamp field.
    
    The current dissector doesn't display correctly the
    hf_rtcp_xr_timestamp field. ENC_TIME_NTP seems to be
    missing.
    
    Bug: 15687
    Change-Id: Ie417e8a11e05e5fb842a4fb0ad5437da1f916130
    Reviewed-on: https://code.wireshark.org/review/32809
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 4bebe9807a1761171204ad01f9d0726018cfdfb9)
    Reviewed-on: https://code.wireshark.org/review/32829
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit f9ac3614c3
Author: Tomasz Moń <desowin@gmail.com>
Date:   Wed Apr 10 18:19:18 2019 +0200

    wsutil: Fix pipe handle leaks on Windows
    
    If the PATHEXT environment variable contains .py and extcap is enabled,
    then Wireshark did leak 2 pipes for every .py file present in the extcap
    directory (regardless if there was .bat wrapper for it or not).
    
    Bug: 15689
    Change-Id: Iae402c0075ee8155a7205a59711bbae734da7e9e
    Reviewed-on: https://code.wireshark.org/review/32812
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit b95933a031cbf7b76aa6cf8d3531473eb204d333)
    Reviewed-on: https://code.wireshark.org/review/32815

commit fa2ed52bff
Author: Dario Lombardo <lomato@gmail.com>
Date:   Sun Apr 7 19:11:55 2019 +0200

    Qt: use toLocalFile() instead of path() to check for existence.
    
    path() incorrectly gives paths as /C:/Program Files/Wireshark/udpdump.html
    under windows. The leading slash gives a wrong test on the file. Instead
    toLocalFile() handles it correctly. isLocalFile() has been used to get if
    we have a local file or a network URL. The reported bug occurred under Windows
    only, but the change is compatible with Linux paths as well.
    
    Accidentally when the test on the file was successful, nothing got called.
    The routine has been reworked to open an existing local file.
    
    Bug: 15592
    Change-Id: Id6e3a91dfb4c9d20ae8cb0735eabab64caeff47f
    Reviewed-on: https://code.wireshark.org/review/32772
    Petri-Dish: Dario Lombardo <lomato@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 4dda4bac178debe04eac081aa23a951e807f6d31)
    Reviewed-on: https://code.wireshark.org/review/32806

commit 771a51f1cb
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Mon Apr 8 21:02:06 2019 +0200

    ieee80211: fix wrong offset for mesh configuration capability bitmask
    
    Issue reported by Helge Magnus Keck
    Change-Id: Ide5c4d78f536e55a2eb318506633a4b6273f8014
    Reviewed-on: https://code.wireshark.org/review/32789
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit f3ef8575d4620a62f1c4609bf14961c3e78993f3)
    Reviewed-on: https://code.wireshark.org/review/32795

commit f0f8d74d49
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Apr 8 13:40:53 2019 -0700

    2.6.8 → 2.6.9.
    
    Change-Id: Id162b1d05d17b3133c01a2d091fe0628fbb00912
    Reviewed-on: https://code.wireshark.org/review/32792
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
