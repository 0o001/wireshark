commit 3c66fe6179
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 24 10:15:45 2023 -0700

    Build: 3.6.14

    [skip ci]

commit fc3cfd37a7
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed May 24 07:46:21 2023 -0400

    QUIC: Don't include data from other streams in Follow tap

    If the stream length flag is set, use that to bound the tvb that
    is sent to the follow tap.

    Also fix the QUIC follow multistream test expected results, since
    we shouldn't be including the padding that isn't part of the stream.

    Fix #19102

    (cherry picked from commit 6e7d1995827aa06604f13282f5974d5545ab08e7)

commit 461a1736d2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 23 13:52:03 2023 -0700

    XRA: Fix an infinite loop

    C compilers don't care what size a value was on the wire. Use
    naturally-sized ints, including in dissect_message_channel_mb where we
    would otherwise overflow and loop infinitely.

    Fixes #19100

    (cherry picked from commit ce87eac0325581b600b3093fcd75080df14ccfda)

    Conflicts:
            epan/dissectors/packet-xra.c

commit 297d3b0b67
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 22 16:42:24 2023 -0700

    Prep for 3.6.14

commit b73d73df88
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 22 11:03:40 2023 -0700

    batadv: Initialize a variable before using it

    Make sure iv_ogm_packeth->tvlv_len is initialized before we use it.

    Blind attempt at fixing #19047

    (cherry picked from commit de593771de351220fa1422856f8f272faee4989c)

commit b0c11a4829
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Mon May 22 10:41:03 2023 +0000

    usb-hid: fix typo for 0x33 (Rx), 0x40 (Vx), or 0x43 (Vbrx)

    use wrong labels/name: (Rz, Vz, Vbrz)

    Issue reported by Daniel Höpfl

    Closed: #19095

    (cherry picked from commit 7b2db3d6617fbc8d8d1cb81dacc561b65afc19ec)

commit 850e4c6710
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 21 16:18:40 2023 +0000

    [Automatic update for 2023-05-21]

    Update manuf, services enterprise numbers, translations, and other items.

commit c23343d221
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat May 20 23:08:08 2023 -0400

    synphasor: Use val_to_str_const

    Don't use a value from packet data to directly index a value_string,
    particularly when the value string doesn't cover all possible values.

    Fix #19087

    (cherry picked from commit c4f37d77b29ec6a9754795d0efb6f68d633728d9)

commit e6819ef6cf
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun May 21 07:49:43 2023 -0400

    Decode As: Don't crash on a (none) configuration entry

    Our current code doesn't allow truly disabling decoding via
    Decode As for something with a default handle through the GUI,
    but if the decode_as_entries configuration file has such an
    entry (which it could if edited manually), don't crash from
    attempting to lookup information about the NULL protocol handle
    to set a nonexistent preference.

    (cherry picked from commit de347765f57067fbd768d9faa6b5e5d13af2873e)

commit f73be9a1cd
Author: Eugène Adell <eugene.adell@gmail.com>
Date:   Sun May 21 10:38:16 2023 +0000

    TCP: don't mark Ports Reused when it is only a Retransmission

    (backported from commit 8101d02c5e52d849c6b7ad43e2a04b985d1cf0ff)

commit a0403c4b39
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 16:29:45 2023 -0700

    netscaler: add more checks to make sure the record is within the page.

    Whie we're at it, restructure some other checks to test-before-casting -
    it's OK to test afterwards, but testing before makes it follow the
    pattern used elsewhere.

    Fixes #19081.

    (cherry picked from commit cb190d6839ddcd4596b0205844f45553f1e77105)

commit 3498ad648d
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed May 17 19:19:02 2023 -0400

    dumpcap: Don't write fake IDBs for pcapng interfaces

    When we have multiple capture sources, for each one that is a pcapng
    source and supplies its own IDBs, don't create a fake IDB with invalid
    linktype WTAP_ENCAP_UNKNOWN and write it to the output file.

    Instead, use the IDBs from the source, remapping them as necessary.
    For non-pcapng sources, store the output IDB interface ID and write
    EPBs using that, since now the input interface ID and the output
    interface ID are not necessarily the same, if some of the other
    sources are not pcapng.

    Update the capture tests that use multiple FIFO sources, because now we
    don't add two extra IDBs, one for each FIFO. Instead there are
    3 * 11 == 33 total IDBs.

    This prevents some various incompatibilites in Wireshark and other
    tools when a file has interfaces of more than one link type, and also
    has IDBs with an illegal WTAP_ENCAP_UNKNOWN link type.

    Fix #19080

    (cherry picked from commit 563307ff6bc8798e46725f22932220e5bfa33be1)

commit 55585b8d46
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 02:38:14 2023 -0700

    blf: don't ws_debug the value of *data_offset on an error.

    *data_offset has whatever value happens to be there, and it's not
    guaranteed to have been set to any useful value, especially when the
    first packet is being read.

    (packported from commit 472fdc16458ac3108f9b3c5519391b2b02318fe3)

commit c130d5bf12
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 01:52:25 2023 -0700

    blf: plug another leak-on-error.

    If inflate() fails, call inflateEnd() on the stream we initialized, to
    free up any dynamically-allocated data structures attached to it.

    (cherry picked from commit 9eee508103759859aeac47d646baaea022c4c46c)

commit ea56d5276c
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 00:53:36 2023 -0700

    blf: plug some leaks on read errors.

    If we've allocated a buffer of compressed data or a buffer into which
    we're uncompressing that data, and we get an error, free those buffers.

    If we've allocated a buffer of compressed data, and we *don't* get an
    error reading or uncompressing that data, free it once we're finished
    uncompressing it.

    (cherry picked from commit e6a2976af6fcc01b236b785e96d123bad9333821)

commit 03ff0b712f
Author: Guy Harris <gharris@sonic.net>
Date:   Thu May 18 23:57:43 2023 -0700

    blf: fix a case where an error wasn't being reported.

    If blf_pull_logcontainer_into_memory() gets a short read when reading co
    pressed data, report it as Yet Another Internal Error, so it doesn't get
    treated as an EOF by callers.

    Before the recent fixes, blf_pull_logcontainer_into_memory() just
    returned either "success" or "failure", and the latter was always turned
    into an internal error; the recent fixes let
    blf_pull_logcontainer_into_memory() return more information about the
    error, including returning whatever the error was from
    wtap_read_bytes_or_eof(), which could be WTAP_ERR_SHORT_READ, which, as
    per the above, got treated a an EOF.

    This all needs much reworking, with the help of something approximating
    a detailed description of the file format.

    (backported from commit f10a66999bf10f76e1171c4d4c9e218592e6647b)

commit 85fbca8adb
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu May 18 18:06:36 2023 -0400

    MS-MMS: Use format_text_string()

    The length of a string transcoded from UTF-16 to UTF-8 can be
    shorter (or longer) than the original length in bytes in the packet.
    Use the new string length, not the original length.

    Use format_text_string, which is a convenience function that
    calls strlen.

    Fix #19086

    (cherry picked from commit 1c45a899f83fa88e60ab69936bea3c4754e7808b)

commit 1c264ced57
Author: Guy Harris <gharris@sonic.net>
Date:   Thu May 18 15:03:23 2023 -0700

    vms: fix the search for the packet length field.

    The packet length field is of the form

        Total Length = DDD = ^xXXX

    where "DDD" is the length in decimal and "XXX" is the length in
    hexadecimal.

    Search for "length ". not just "Length", as we skip past "Length ", not
    just "Length", so if we assume we found "Length " but only found
    "Length", we'd skip past the end of the string.

    While we're at it, fail if we don't find a length field, rather than
    just blithely acting as if the packet length were zero.

    Fixes #19083.

    (backported from commit db5135826de3a5fdb3618225c2ff02f4207012ca)

commit 2f6e9c902e
Author: Guy Harris <gharris@sonic.net>
Date:   Wed May 17 19:10:39 2023 -0700

    dumpcap(1): update some old "pcap as default format" text.

    Speak of dumpcap writing a "capture file" rather than a "pcap file".

    Use .pcapng rather than .pcap as the extension in sample capture file
    names.

    In the description of the -i option, explicitly mention the -P option as
    being overridden if more than one -i option is specified.

    (cherry picked from commit 9ef9fbeddfcba584e4623a65d77af7f2b3023e89)

commit 7e522626da
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 17 10:55:27 2023 -0700

    blf: Include errno.h

    This should hopefully fix the build failures on older Linux
    distributions.

    (cherry picked from commit cd9f8da44b8227d4eca43e053c144ca83ec9c485)

commit 076382ff4e
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed May 17 13:58:36 2023 +0200

    UDS: fix some data identifier items length

    Fixes #19078

    (cherry picked from commit 0633858a472f023471e383cfa285e8854f66e3fb)

commit c7286ca797
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue May 16 18:30:33 2023 -0400

    Qt: Redissect packets when applying a time shift

    Packet fields like tcp.time_relative, smb2.time, and SRT tables depend
    on file-scoped data from other frames often computed in the first pass.
    Thus redissection is necessary after applying a time shift.

    Fix #18999

    (cherry picked from commit 8cab0daed1e2db63ce939d2e3afb7a636e39bf5b)

commit 6c7199da0c
Author: Guy Harris <gharris@sonic.net>
Date:   Tue May 16 18:09:41 2023 -0700

    blf: add some sanity checks.

    Have blf_pull_logcontainer_into_memory() return a libwiretap error code
    and additional information string, including various values being
    inconsistent.

    (If any of those correspond to identifiable file problems, they should
    be reported with WTAP_ERR_BAD_FILE and with a description more relevant
    to somebody writing code to write those files.)

    Fixes #19063.

    (backported from commit c899be35a94440b6c46cf5715c5f24eda597f4c1)

commit 9ce7445be0
Author: Guy Harris <gharris@sonic.net>
Date:   Tue May 16 12:05:07 2023 -0700

    candump: check for a too-long frame length.

    If the frame length is longer than the maximum, report an error in the
    file.

    Fixes #19062, preventing the overflow on a buffer on the stack (assuming
    your compiler doesn't call a bounds-checknig version of memcpy() if the
    size of the target space is known).

    (backported from commit 0181fafb2134a177328443a60b5e29c4ee1041cb)

commit 3412780abd
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat May 13 21:45:16 2023 -0400

    GDSDB: Make sure our offset advances.

    add_uint_string() returns the next offset to use, not the number
    of bytes consumed. So to consume all the bytes and make sure the
    offset advances, return the entire reported tvb length, not the
    number of bytes remaining.

    Fixup 8d3c2177793e900cfc7cfaac776a2807e4ea289f

    Fixes #19068

    (cherry picked from commit 118815ca7c9f82c1f83f8f64d9e0e54673f31677)

commit 64fb9132b5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 14 16:38:07 2023 +0000

    [Automatic update for 2023-05-14]

    Update manuf, services enterprise numbers, translations, and other items.

commit dbe61921c4
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Dec 28 00:14:35 2022 -0500

    tests: Get tests working with Python 3.11 (except with pytest)

    We use a common idiom ( https://stackoverflow.com/a/39606065
    https://gist.github.com/hynekcer/1b0a260ef72dae05fe9611904d7b9675 )
    for getting the results of our unittest.TestCases in the tearDown
    method. This method accesses a private property, and that private
    property was removed in Python 3.11

    The StackOverflow answer has been updated with a new approach for
    Python 3.11, which also uses a private property. This fixes things
    for CTest (and the test target when building), but it still doesn't
    work when using pytest's unittest support.

    Ping #18740

    (cherry picked from commit fdc335e68654db8c47f98ab46598d8d4e5a655b9)
    (cherry picked from commit 613889eeaeb1ea38f4bb3e510fdfe50089d7121b)

commit 96d53d7d86
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 7 16:35:07 2023 +0000

    [Automatic update for 2023-05-07]

    Update manuf, services enterprise numbers, translations, and other items.

commit e326821269
Author: Clément Notin <clement@notin.org>
Date:   Sun Apr 30 00:11:45 2023 +0200

    ntlmssp: fix decrypt error by decrypting verifier after payload

    (cherry picked from commit c73e2d4be05b8147cebf8277fb1a2d321c8483d8)

commit 352f51062e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 30 16:39:56 2023 +0000

    [Automatic update for 2023-04-30]

    Update manuf, services enterprise numbers, translations, and other items.

commit eb0dc9b449
Author: hidd3ncod3s <hidd3ncod3s@gmail.com>
Date:   Sun Apr 23 13:02:36 2023 -0700

    Bug 19015: Fix Community ID generation logic

    (cherry picked from commit 3ce3bd7d604ad2c5fa71b3f6f1ed8220b85dc7ba)

commit 46e8af53b3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 23 16:42:22 2023 +0000

    [Automatic update for 2023-04-23]

    Update manuf, services enterprise numbers, translations, and other items.

commit addec1a8ba
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Apr 19 13:38:39 2023 -0700

    ilp, ulp: don't use the over-TCP dissector for media types.

    "Over TCP" dissectors are usable only over byte-stream protocols, as
    they have to carve individual PDUs out of a byte stream, doing
    reassembly if necessary; dissectors registered in the media_type
    dissector table get a reassembled PDU handed to them, and all the
    special reassembly stuff they do isn't necessary and may cause
    dissection not to work.

    (cherry picked from commit 6b763b3951080b4fba99b373af47d7c9b581beb1)

commit 48423cf14a
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Apr 19 00:03:51 2023 -0700

    cose: have separate dissectors for the media_type dissector table.

    Dissectors called from that dissector table are *not* passed a pointer
    to a wscbor_tag_t as their data argument, so they should not interpret
    it as pointing to such a structure.  Add new dissectors for that table
    that call the dissector for the cose.msgtag dissector table and pass it
    a null pointer as its data; that will cause them to assume no
    wscbor_tag_t is available.

    (cherry picked from commit 474a87df9c9251e587ae059393ad134d7ce8b683)

commit 790f420b28
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Apr 17 23:22:48 2023 -0700

    Fix ASN.1 source as well for 2a5434973f17b0ba1ca3513025f4cdff71ae687a.

    For

        commit 2a5434973f17b0ba1ca3513025f4cdff71ae687a
        Author: João Valverde <j@v6e.pt>
        Date:   Sun Apr 16 14:40:24 2023 +0100

            SPNEGO: Fix Krb5 offset

            The dissect_kerberos_main() offset starts at zero so the offset
            result must be added to the current SPNEGO offset.

            Fixes #18991.

    apply that change to the ASN.1-generator source.

    Further fixes #18991.

    (cherry picked from commit e9af2e52880e866236803a55b6c8293300b76ff2)

commit c6a5d10e52
Author: João Valverde <j@v6e.pt>
Date:   Sun Apr 16 14:40:24 2023 +0100

    SPNEGO: Fix Krb5 offset

    The dissect_kerberos_main() offset starts at zero so the offset
    result must be added to the current SPNEGO offset.

    Fixes #18991.

    (cherry picked from commit 2a5434973f17b0ba1ca3513025f4cdff71ae687a)

commit 1fc1cbf6a4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Apr 13 11:57:22 2023 -0700

    GitLab CI: Force the installation of llvm-15

    A bug fix for the jammy-updates LLVM packages broke compatibility with
    the LLVM upstream packages:

    https://bugs.launchpad.net/ubuntu/+source/llvm-toolchain-15/+bug/2008755

    Try to work around the issue by installing llvm-15 with the
    --force-overwrite option.

    (cherry picked from commit fe4498281f55a6133b765796cc422cb1d621e725)

commit 7b30d9fd92
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Wed Apr 12 22:16:19 2023 +0200

    BFCP: Fix length for some attributes

    Type and length field are 1 byte each. Length value includes type anf length field
    but excludes the padding bytes for non grouped attributes.

    Fixes: #18890

commit cc3da70102
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Apr 13 09:51:15 2023 +0200

    ISAKMP: fix dissection of DEVIVE_IDENTITY identity type

    The encoding is in big endian and not little endian (the type is in the
    2 LSB).

    (cherry picked from commit 589445bffb5287e6e9acd8c9d27e168928e5f417)

commit 769050a29c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 12 12:45:17 2023 -0700

    Version: 3.6.13 → 3.6.14

    [skip ci]
