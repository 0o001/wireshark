commit 98866fe672
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Aug 28 14:25:52 2018 -0700

    Update the release notes for 2.6.3.
    
    Change-Id: If4ac63b99b28270b941eebcb97f6214d937a0024
    Reviewed-on: https://code.wireshark.org/review/29323
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 8f1048b911
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 20 15:39:08 2018 -0700

    Fuzz: Reduce the Valgrind packet limit to 10,000.
    
    Limit Valgrind to the first 10,000 packets in each file.
    
    Conflicts:
            tools/fuzz-test.sh
    
    Change-Id: I27be212ddb437c643ffb413bb9d1c809dbe98a55
    Reviewed-on: https://code.wireshark.org/review/29210
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit 6ee559efd1af6a02ebde42318ec41c50457b3fca)
    Reviewed-on: https://code.wireshark.org/review/29312

commit 5a1afc50ee
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Mon Aug 27 09:47:58 2018 +0200

    SSL: use col_append_sep_str() to add heartbeat to info column
    
    Bug: 15079
    Change-Id: I97e5179f1385d24b38a0537a91bc73a9eb3a241b
    Reviewed-on: https://code.wireshark.org/review/29299
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 9b04385f764ada26cedf183c1deede375ae83ca2)
    Reviewed-on: https://code.wireshark.org/review/29301

commit 72836bbba2
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Apr 20 07:42:37 2018 +0000

    steam-ihs-discovery.c : fix typo Reponse => Response
    
    Change-Id: I20157ce72b33b8b957d47fe6abcffb754ce4e5a2
    Reviewed-on: https://code.wireshark.org/review/27043
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 7124fe671583dd94367c83c4f74e3f2858cbcde0)
    Reviewed-on: https://code.wireshark.org/review/29297
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 3e4815a27b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Aug 26 14:53:26 2018 -0700

    A timestamp has seconds and nanoseconds; you must set both.
    
    Bug: 15075
    Change-Id: Ie18c1a04adac1d42d78fa86d289c659566a81891
    Reviewed-on: https://code.wireshark.org/review/29295
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 0fa2b0bfa369714f8e5100921be4cedb8b78f396)
    Reviewed-on: https://code.wireshark.org/review/29296

commit b07a4d2f9a
Author: Gerald Combs <gerald.combs@riverbed.com>
Date:   Sun Aug 26 08:39:34 2018 +0000

    [Automatic update for 2018-08-26]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Idd72b034f62dd762dbb1ee43766b3450cea34d5e
    Reviewed-on: https://code.wireshark.org/review/29287
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 637e90ede8
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Thu Aug 23 10:26:58 2018 +0200

    Qt: Enable select hint text in Show Packet Bytes
    
    The hint label in Show Packet Bytes shows information about the selected
    field, and the user should be able to select this text using the mouse.
    
    Change-Id: Ic969dbd07cb1fcd61d0e8f777692523a0fc5850b
    Reviewed-on: https://code.wireshark.org/review/29259
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit c79ba26dafa685d36398858842a31a7680c9a071)
    Reviewed-on: https://code.wireshark.org/review/29264

commit adf00f571b
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat May 26 16:40:02 2018 +0200

    SCTPAllAssocsDialog: fix memleak of "sctp_assocs"
    
    "fillTable()" overwrites "sctp_assocs" with an external address.
    
    Change-Id: I415d424f16a2306b1b79fde7b5f836458da14b16
    Reviewed-on: https://code.wireshark.org/review/27833
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 2ef7e8cf42f43fbdcf23b3bd7eff671703b91f61)
    Reviewed-on: https://code.wireshark.org/review/29250
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 7c438d8ba2
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Wed Aug 15 22:46:39 2018 +0300

    Qt: fix several crashes in the SCTP Dialogs
    
    Store the association id instead of a pointer to the volatile
    "sctp_assoc_info_t" structure because it gets freed after a rescan.
    
    Bug: 14970
    Change-Id: Id8fe2dfe3549bd711fc8ddef0770b217e83c2088
    Fixes: v1.11.3-rc1-604-g796bf409b0 ("Add dialogs and graphs to analyse SCTP behavior similar to the GTK version.")
    Reviewed-on: https://code.wireshark.org/review/28711
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit b7a6a11376c75f02b827a3dbd7598ecf419f6151)
    Reviewed-on: https://code.wireshark.org/review/29244
    Tested-by: Petri Dish Buildbot

commit 29c86f3119
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Aug 21 16:08:00 2018 +0200

    Qt: Enable "Resolve Names" for boolean without TFS
    
    Boolean field types will default to tfs_true_false if not having
    a TFS set, so this should always be enabled for resolve.
    
    Remove FT_FRAMENUM from this check because they will probably never
    have a TFS or VALS setting.
    
    Change-Id: I6295f8b7c9db7295eab1750e9c2cf0ee7382d43d
    Reviewed-on: https://code.wireshark.org/review/29218
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit a6a915abcc01b05c177da39edc8aca260e43c16d)
    Reviewed-on: https://code.wireshark.org/review/29242
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 502f55f3e5
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Aug 21 14:35:03 2018 +0200

    Qt: Pop field status when closing a file
    
    Ensure we remove the info status for a selected field when closing
    a capture file to bring the text back to "Ready to load or capture".
    
    Change-Id: I2946675b2c0bc47cb8c05c1d391ff8a0875e8c7f
    Reviewed-on: https://code.wireshark.org/review/29216
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 04dbbb15c61f167309216a99fff48746b327a25e)
    Reviewed-on: https://code.wireshark.org/review/29241
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit ccdf7bfbbf
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat May 26 13:32:06 2018 +0200

    Qt: fix memleak from cf_get_display_name
    
    Free the memory as documented.
    
    Change-Id: I8a8842160be676bb08f5b93e795b9ed8edef2ede
    Reviewed-on: https://code.wireshark.org/review/27829
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ac041b9d0b3915253731e520e179480dfa2d030b)
    Reviewed-on: https://code.wireshark.org/review/29227
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 559ec51981
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Aug 21 16:00:57 2018 +0200

    nordic_ble: Set PHY display type to BASE_DEC
    
    Change-Id: I4a2e2142bbaf08e11a735d125a201c8651cdc857
    Reviewed-on: https://code.wireshark.org/review/29217
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit 428b5a28827cce96f754b407da8576890b1dff40)
    Reviewed-on: https://code.wireshark.org/review/29220

commit fb69823e13
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Mon Aug 20 15:54:31 2018 +0200

    E.212: fix 255 04 and 255 06 PLMN names
    
    This fixes commit g2c89e6c448
    
    Bug: 15068
    Change-Id: Ieec7ffb039af48903f9ee3f91800f603203f811e
    Reviewed-on: https://code.wireshark.org/review/29201
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 99df34848e6aa2c63f17fe5fb3ee954e1f07bdeb)
    Reviewed-on: https://code.wireshark.org/review/29202

commit c50d805a9c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 19 16:55:13 2018 +0000

    [Automatic update for 2018-08-19]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I3796dc77161070f5a6c7bf3978264b875ffffd05
    Reviewed-on: https://code.wireshark.org/review/29192
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 65395cc80d
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Fri Aug 17 00:36:07 2018 +0200

    TLS13: properly skip over failed decryption of early data
    
    When early data is present but undecryptable (due to lack of keys), it
    should not result in incrementing the sequence number or the following
    application data from the client will fail to decrypt.
    
    Change-Id: I8016a30508d96c14cbd6a3b9c4af1591a6c437c3
    Ping-Bug: 12779
    Reviewed-on: https://code.wireshark.org/review/29169
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit fd7ec355ec4bf1f7c8129ff01135bb1387959a7e)
    Reviewed-on: https://code.wireshark.org/review/29172
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 81504de50f
Author: Tomasz Moń <desowin@gmail.com>
Date:   Thu Aug 16 21:06:41 2018 +0200

    Do not pass pipe handle to WaitForMultipleObjects
    
    The Remarks section in WaitForMultipleObjects describes what kind of
    handles the function can wait for. Pipe handles are not listed there.
    
    The problem was introduced in c18459e66e8e71a8765bb9b8e2b3d2ba61855a3f
    
    While it might be possible to setup overlapped reads on the pipe handles
    and then wait on overlapped events, it would result in quite complex
    code. As a tradeoff, simply keep peeking at the pipes every 100 ms.
    
    Change-Id: I6ba4f4bf4c1d2af856027cca36ffd6d4f7f49f36
    Bug: 14657
    Reviewed-on: https://code.wireshark.org/review/29163
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 9ecc7906ef6a7c32217a2a8780d5374b0b5398de)
    Reviewed-on: https://code.wireshark.org/review/29167

commit 6c4545c3f0
Author: Tomasz Moń <desowin@gmail.com>
Date:   Thu Aug 16 18:04:07 2018 +0200

    Fix extcap initialization deadlock
    
    On Windows the code calling extcap worked as follows:
    1. Create stdout and stderr pipes with default buffer size
    2. Execute extcap redirecting output to the pipes
    3. Wait for extcap process to exit
    4. Read the data from stdout pipe
    
    This resulted in deadlock when the extcap wrote more data than the pipe
    could buffer. This was especially seen with USBPcap as it is quite
    normal to have plenty of USB devices connected.
    
    Fix the issue by contantly reading the stdout data and storing it in
    GString. To prevent similar deadlock on the stderr, the stderr data is
    being constantly monitored as well (and discarded).
    
    Change-Id: I0f93e6d79617cef0e828aef2b96fad2757227923
    Bug: 14657
    Reviewed-on: https://code.wireshark.org/review/29159
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit c18459e66e8e71a8765bb9b8e2b3d2ba61855a3f)
    Reviewed-on: https://code.wireshark.org/review/29161
    Petri-Dish: Roland Knall <rknall@gmail.com>

commit 0a3f5bc411
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Thu Aug 16 21:00:12 2018 +0200

    Windows: upgrade USBPcap to 1.2.0.4
    
    Change-Id: Id22f75c609197131517ff2ac4a3daec6624a9701
    Reviewed-on: https://code.wireshark.org/review/29162
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 0ebd0c9695
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Aug 14 19:55:27 2018 +0200

    bluetooth: Update Assigned Numbers
    
    Change-Id: Ib97a2b762873ed8cdb1960d103e9513cca53492b
    Reviewed-on: https://code.wireshark.org/review/29145
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 03b0464be44a8d3c8f79fa1c160870d1e7af056a)
    Reviewed-on: https://code.wireshark.org/review/29149
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit dd2df3085a
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Aug 14 14:59:26 2018 +0200

    btatt: Fix Temperature Measurement Value unit
    
    Display correct temperature unit for the Temperature Measurement Value.
    
    Bug: 15058
    Change-Id: I310c2fabfb1a824cb84f6f4182e881d7a22495cb
    Reviewed-on: https://code.wireshark.org/review/29139
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 4236185275b90eaca495055c4cd4a07482c1e919)
    Reviewed-on: https://code.wireshark.org/review/29143
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 24200230a4
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Tue Aug 14 11:03:09 2018 +0200

    BT A2DP: fully initialize sep_entry_t structure
    
    Bug: 14884
    Change-Id: Id409563d5e8869596db7b479132045bf8cf88f16
    Reviewed-on: https://code.wireshark.org/review/29128
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit c48d6a6d60c5c9111838a945966b6cb8750777be)
    Reviewed-on: https://code.wireshark.org/review/29134
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 3ccb60a40d
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Mon Aug 13 21:48:06 2018 +0300

    export_pdu.c: Fix a memory leak
    
    Allocate the exp_pdu_data using the wmem_packet_scope allocator so the
    epan_dissect_run_with_taps will free it after calling all registered tap
    listeners.
    
    valgrind --tool=memcheck --leak-check=full ./run/tshark -r sctp.pcap -U "OSI layer 3" -w exported.pcap
    
    32 bytes in 1 blocks are definitely lost in loss record 48 of 76
       at 0x4C2EBAB: malloc (vg_replace_malloc.c:299)
       by 0xB3FC3C5: g_malloc (gmem.c:99)
       by 0x68C2BE1: export_pdu_create_tags (exported_pdu.c:251)
       by 0x68C2D5E: export_pdu_create_common_tags (exported_pdu.c:231)
       by 0x70AA54E: create_exp_pdu_proto_name (packet-sctp.c:3240)
       by 0x70AA54E: export_sctp_data_chunk.part.23 (packet-sctp.c:3268)
       by 0x70AB76B: export_sctp_data_chunk (packet-sctp.c:3256)
       by 0x70AB76B: dissect_data_chunk (packet-sctp.c:3509)
    
    Change-Id: I6e247ab2861bbb053f0958faf253913b28dbcbeb
    Reviewed-on: https://code.wireshark.org/review/29126
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 88dd7e734acdc48ebdf61ffcf3f93db9fb7c81dd)
    Reviewed-on: https://code.wireshark.org/review/29131

commit d7d3cc9baf
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Aug 13 10:21:14 2018 +0200

    ssl: Remove SSL_VER_UNKNOWN from ssl_version_short_names
    
    This will let val_to_str_const() choose the given 'unknown_str'
    instead of always showing 'SSL' when the version is unknown.
    
    This is relevant for DTLS when only having a 'Client Hello' packet.
    
    Change-Id: I3931460e70278241aee0b7782025bc7bfd9bf93d
    Reviewed-on: https://code.wireshark.org/review/29118
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit e83e70c03814cb02c7fa5580e200d3f13f84ca99)
    Reviewed-on: https://code.wireshark.org/review/29122

commit 7cb745f67a
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sun Aug 12 17:23:28 2018 +0200

    HTTP: really choose the correct server port for tunnels
    
    The very first message after a 200 OK response to a CONNECT request
    likely originates from the client. So assume that this destination is
    actually the server.
    
    This reduces the probability of address and port collisions. Previously
    the proxy port (e.g. 3128) and server port (443) identified each
    conversation, now it will use the client and server port instead.
    
    Bug: 15043
    Change-Id: Ib73f370334873efd773ac6b49e2db57146bc20b0
    Fixes: v2.9.0rc0-1420-g2f126db3fe ("HTTP: set correct server port for tunnels")
    Reviewed-on: https://code.wireshark.org/review/29110
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 1d4bb22a225285a1fb088d0970499131d242d098)
    Reviewed-on: https://code.wireshark.org/review/29119
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 1aa86d7250
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Aug 12 19:02:22 2018 -0700

    Move get_iface_display_name() to ui/iface_lists.c.
    
    It's only used there, so move it there.
    
    Change-Id: I68472150e020ba94166782e3e4c08cba94c0f9ee
    Reviewed-on: https://code.wireshark.org/review/29114
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d0e90850c9b167e9cca229ecbc701ec592baea61)
    Reviewed-on: https://code.wireshark.org/review/29115

commit a18dcf01b5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 12 08:27:56 2018 +0000

    [Automatic update for 2018-08-12]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ic21b72868989e7c71ddcabddb535828d3fbcfeef
    Reviewed-on: https://code.wireshark.org/review/29106
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 64e50ecca0
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 21:12:45 2018 -0700

    More comment cleanup.
    
    Change-Id: I0fac7351d204eac1ca5f00fb2f19d275d4d5767c
    Reviewed-on: https://code.wireshark.org/review/29101
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 1bca52daa7acd599aef0ef79c1851d8d3aa89f45)
    Reviewed-on: https://code.wireshark.org/review/29102

commit 514f7abfcb
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 20:48:01 2018 -0700

    Improve comments.
    
    Change-Id: Icce916d6d465f80e06ed45e4d5bd98362d63a26a
    Reviewed-on: https://code.wireshark.org/review/29097
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 8f06bb13c06ec9e0fe3d34ce4420d8aa89241ea4)
    Reviewed-on: https://code.wireshark.org/review/29098

commit 5e26e129bf
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 20:43:00 2018 -0700

    Clean up temporary filename generation.
    
    Don't put identical code in both arms of a conditional - move it out of
    the conditional.
    
    Doing that with one line of code means that the conditional is now
    *itself* duplicated in both arms of a conditional, so move it out, too.
    
    Change-Id: I07c1d00e7d0053684aa2ef74b460eb008b145015
    Reviewed-on: https://code.wireshark.org/review/29093
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 885aaa4b98c54a1a1d4928e369f668695d12cc4b)
    Reviewed-on: https://code.wireshark.org/review/29094

commit 7a60b5c1b0
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 18:55:01 2018 -0700

    More interface view cleanups.
    
    Rename some of the columns - IFTREE_COL_NAME is the interface name,
    IFTREE_COL_DESCRIPTION is the description/friendly name, and a new
    IFTREE_COL_DISPLAY_NAME column is the display name (which may include
    both the description and the interface name).  Rename
    IFTREE_COL_INTERFACE_COMMENT to just IFTREE_COL_COMMENT - there's no
    *other* type of comment, and "IF" is short for "interface".
    
    In the interface frame, use IFTREE_COL_DISPLAY_NAME, as that's the only
    column that shows both and thus has something for all interfaces.
    
    In the "Manage interfaces" dialog, put the description before the
    interface name, as it was in earlier versions.
    
    Change-Id: If0d959dcd4ca99913c941df00621da3c478233f6
    Reviewed-on: https://code.wireshark.org/review/29090
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 232dbfd0aef3acd79292184f7fa0ca1e5d498017)
    Reviewed-on: https://code.wireshark.org/review/29091

commit 1d0c3bbf5c
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 17:45:19 2018 -0700

    Show just the description in the description column.
    
    Don't show the display name, as that may include either the interface
    name, which is already in another column, or the column comment, which
    is also already in another column.
    
    Change-Id: I12f81d9e4579b82267062bb5e4e745925ed382b7
    Reviewed-on: https://code.wireshark.org/review/29087
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 5c7c994cfe6eb02b438f50e432eee2f6045889c1)
    Reviewed-on: https://code.wireshark.org/review/29088

commit ecfea20165
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 15:26:41 2018 -0700

    Fix the "Manage interfaces" dialog columns.
    
    Windows is not the only OS with "friendly" names for interfaces; macOS
    has them as well, and some *BSDs let you tag interfaces with names as
    well.
    
    The column headings for the "Interface Name" and the "Friendly Name"
    were backwards.
    
    Change-Id: I72543505cec9d479d8ab8aab3850daab3667805f
    Reviewed-on: https://code.wireshark.org/review/29082
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit a1b3be58e1ad491ffe100fcf37607a1c1ccf7973)
    Reviewed-on: https://code.wireshark.org/review/29083

commit 01e0bba7b3
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 13:40:00 2018 -0700

    More comments.
    
    Change-Id: I1fc6df514983bb73b7e620d05223728496de7919
    Reviewed-on: https://code.wireshark.org/review/29078
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 07660f69e257fb443b16c29749070e4098371dac)
    Reviewed-on: https://code.wireshark.org/review/29079

commit 541fa17a34
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Wed Aug 1 11:05:05 2018 +0300

    tshark: Allow exporting of PDUs to stdout
    
    The following command will export the PDUs to stdout
    tshark -r ./test.pcapng -U "OSI layer 3" -w -
    
    Change-Id: Idddded6bfcac458d82cdc033babc7546b67f7327
    Reviewed-on: https://code.wireshark.org/review/28919
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ad145baeee9e43616b23539e8cdd90aaba0088eb)
    Reviewed-on: https://code.wireshark.org/review/29049
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 738792855b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Aug 11 12:01:21 2018 -0700

    Make a routine static that's not used outside its source file.
    
    Change-Id: I5121828c1fb95cbf89e7304dd748f8fcac63ad5a
    Reviewed-on: https://code.wireshark.org/review/29073
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit df1ca5e5565ca349f356b34f0f66ce6f7425d6b5)
    Reviewed-on: https://code.wireshark.org/review/29074

commit b1f0f00e3b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Aug 10 19:08:40 2018 -0700

    Add support for reading and writing the new if_hardware IDB option.
    
    Support for writing it in live captures will come later; this change,
    but not that one, will be backported so older versions of Wireshark
    won't remove it when writing a file out.
    
    Change-Id: I9fd4067991acfd2d18c03d0a373ce8337a9f3a76
    Reviewed-on: https://code.wireshark.org/review/29064
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 77d52897f9746dcfeff837f81065bb2f1f51b649)
    Reviewed-on: https://code.wireshark.org/review/29065

commit e51e537d6a
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Wed Aug 8 20:00:48 2018 +0200

    prefs: fix range preferences-related crash after switching profiles
    
    The HTTP dissector could crash (use-after-free) after switching
    profiles. In reinit_http, it would assign the return value from
    prefs_get_range_value to a global variable which is consulted during
    dissection. This value is invalidated while switching profiles (via the
    "prefs_reset" function), but is not reinitialized (because the
    reinit_http function was not called).
    
    A similar issue exists in the Kafka, UAUDP, VNC, TFTP, Gopher and TDS
    dissectors. To reproduce using a capture from the SampleCaptures wiki,
    start "wireshark -r vnc-sample.pcap -ovnc.tcp.port:1" and switch
    profiles. For the HTTP crash, load any HTTP pcap and switch profiles.
    
    Change-Id: I8725615504a8a82ae46255625a41e2188c07320a
    Fixes: v2.3.0rc0-2097-g21a3b8cc71 ("Internalize struct preference")
    Reviewed-on: https://code.wireshark.org/review/29030
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 0be9d149d0feaac8697b993926ffa87e156d7fa4)
    Reviewed-on: https://code.wireshark.org/review/29057
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 02c6742ae7
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Thu Aug 9 16:51:55 2018 +0200

    HTTP: set correct server port for tunnels
    
    The server port must be set or else http_payload_subdissector will
    assume two independent flows originating from the client. For example,
    client 50813 connects through proxy server 3128 to server 443.
    Previously it would result in three conversations: 50813<->3128 (proxy),
    50813->443, 3128->443. Now it will see 50813<->3128 and 3128<->443 and
    TLS decryption will work again.
    
    Bug: 15042
    Change-Id: I50bcef568be320b6512ee6fc5a09d2838d2f7a9a
    Reviewed-on: https://code.wireshark.org/review/29046
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 2f126db3fea715428b43c346d98cad1a8b3a88d6)
    Reviewed-on: https://code.wireshark.org/review/29054
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit f9e8b0fa42
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Wed Aug 8 23:21:00 2018 +0200

    Qt: fix crash on switching profiles
    
    Switching from the Default profile to the Bluetooth one increases the
    number of columns. While "prefs.num_cols" is incremented in
    column_format_set_cb, the actual column definition is only defined in
    build_column_format_array (via WiresharkApplication::columnsChanged).
    Do not call packet_list_enable_color in between as that will make the
    packet list model access the column information.
    
    2.4 is unaffected, master is already fixed via commit 5e7cd2dfc6 (which
    cannot directly be backported due to missing GTK+ changes).
    
    Change-Id: I9fd14ed2f56123d881334e373101df816e144b52
    Reviewed-on: https://code.wireshark.org/review/29032
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 1576ae10e7
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Wed Aug 8 16:45:21 2018 +0200

    802.11 Radiotap: add more bound checks in ieee80211_radiotap_iterator_next()
    
    Bug: 15022
    Change-Id: Ife413312c88b8d78926c78bdb6707903257e7964
    Reviewed-on: https://code.wireshark.org/review/29017
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Richard Sharpe <realrichardsharpe@gmail.com>
    (cherry picked from commit 82447697e1f2337ef65e88c13d5cb4c0b76bd683)
    Reviewed-on: https://code.wireshark.org/review/29026
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 6fcdabdb57
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Aug 8 13:07:17 2018 -0700

    The radiotap header length must be >= 8.
    
    Report an error and quit dissecting if it's less than 8.
    
    Change-Id: I297fcb0ca754641a9e197037df1140361000fd25
    Reviewed-on: https://code.wireshark.org/review/29022
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit dda50a5f50ed71fe64dc44ceef0c289d4db1c4d9)
    Reviewed-on: https://code.wireshark.org/review/29023

commit d6d5d4dddc
Author: Jaap Keuter <jkeuter@aimvalley.nl>
Date:   Mon Aug 6 16:52:34 2018 +0200

    WLAN: State type of key when reporting format error
    
    Change-Id: I2ff1d0567b9e63ccef0c4dc92691ebb124d6a042
    Reviewed-on: https://code.wireshark.org/review/28995
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ae8d0676ec8f38e88afbaf724ffe2aedfced0783)
    Reviewed-on: https://code.wireshark.org/review/29010

commit 6e12afd8cb
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Aug 6 12:22:53 2018 +0200

    ssl-utils: fix key log read after EOF
    
    C99 requires fgets to fail once the EOF bit is set, glibc 2.28 started
    implementing this behavior. Clear the EOF bit to avoid all future reads
    from failing. Add another error check while at it.
    
    Change-Id: I1c5f7e190426d29e3bf437c443b09092ed8d2d35
    Fixes: v1.99.0-rc1-1080-ga69a63f5d1 ("ssl: fix SSL keylog file live-capture use case")
    Reviewed-on: https://code.wireshark.org/review/28984
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 4d87743c234c202e810e727d946b578ab38f4e2f)
    Reviewed-on: https://code.wireshark.org/review/29011
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit b8f8759b35
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon Aug 6 12:03:56 2018 -0700

    Another dictionary fix.
    
    RFC 5447 says MIP6-Feature-Vector is a 64-bit integer, not an octet
    string.
    
    Change-Id: I676cb4de09424259a9020680d11b92b783100482
    Reviewed-on: https://code.wireshark.org/review/28999
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 1dc6d54d8d6b794549473ced4435c2d749b72076)
    Reviewed-on: https://code.wireshark.org/review/29000

commit 3bd9687d3b
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Tue Jul 31 20:11:24 2018 +0300

    print.c: Print FT_CHAR fields as FT_UINT8
    
    This fixes the following asserts
    
     #2  0x00007ffff0d270f3 in g_assertion_message (domain=0x0, file=0x7ffff4e11f90 "/home/vasko/sources/wireshark/epan/print.c", line=598, func=0x7ffff4e12e20 <__func__.18585> "proto_tree_write_node_pdml",
         message=0x555555aaab70 "code should not be reached") at gtestutils.c:2532
     #3  0x00007ffff0d8015e in g_assertion_message_expr () at gtestutils.c:2555
    
     #2  0x00007ffff0d270f3 in g_assertion_message (domain=0x0, file=0x7ffff4e11f90 "/home/vasko/sources/wireshark/epan/print.c", line=983,
         func=0x7ffff4e12e40 <__func__.18697> "write_json_proto_node_hex_dump", message=0x555555aac9d0 "code should not be reached") at gtestutils.c:2532
     #3  0x00007ffff0d8015e in g_assertion_message_expr () at gtestutils.c:2555
     #4  0x00007ffff39a8f87 in write_json_proto_node_hex_dump (node=0x7fffdc86e550, data=0x7fffffffce60) at /home/vasko/sources/wireshark/epan/print.c:983
    
     #2  0x00007ffff0d270f3 in g_assertion_message (domain=0x0, file=0x7ffff4e12010 "/home/vasko/sources/wireshark/epan/print.c", line=1299,
         func=0x7ffff4e12ef0 <__func__.18804> "ek_write_hex", message=0x555555aac290 "code should not be reached") at gtestutils.c:2532
     #3  0x00007ffff0d8015e in g_assertion_message_expr () at gtestutils.c:2555
     #4  0x00007ffff39a9a32 in ek_write_hex (fi=0x7fffdc86e4e0, pdata=0x7fffffffce90) at /home/vasko/sources/wireshark/epan/print.c:1299
    
    Change-Id: I48a7e87863fb6708cd668582a240e5ba71d1b5a0
    Reviewed-on: https://code.wireshark.org/review/28891
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28975

commit 25927d9514
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 5 08:29:59 2018 +0000

    [Automatic update for 2018-08-05]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I3ccee476c12bf0c5b342789f4751dd76e779f4da
    Reviewed-on: https://code.wireshark.org/review/28969
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 5b50d40cf0
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sat Aug 4 21:21:45 2018 +0200

    ASTERIX: Fix cat068/135 altitude value
    
    The altitude value presented is the value converted into feet.
    Instead, as the label suggests, the value should be presented
    as a flight level. Change the conversion as such.
    
    Bug: 15030
    Change-Id: I131f6b586c6b1f59090f93862ea13b117403c502
    Signed-off-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Reviewed-on: https://code.wireshark.org/review/28961
    Reviewed-by: Marko Hrastovec <marko.hrastovec@gmail.com>
    Tested-by: Petri Dish Buildbot
    (cherry picked from commit aa8ebb94e5d5db58eae56af64cdc5d8968b60b0b)
    Reviewed-on: https://code.wireshark.org/review/28963

commit 090ed6ed6b
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Sat Aug 4 07:01:05 2018 +0700

    [GSM A RR]: fix: properly dissect APDU Flags for Application Info
    
    According to 3GPP TS 04.08, section 10.5.2.49, the APDU Flags field
    is coded together with APDU ID, and occupies bits 1-3 (mask 0x70):
    
    0 1 2 3
    S T F L
    . . . *  Last Segment
    . . * .  First Segment
    . * . .  C/R, if L=0 only, otherwise spare and set to 0
    * . . .  Spare (0)
    
    Instead of parsing all bits together as a set of integer values,
    let's parse each flag individually. Moreover, the previous
    definition was missing some possible bit combinations, so
    this change also fixes that problem.
    
    Change-Id: Id71fae9ef06572c1ad17aafe0be3dfb66e081b7d
    Reviewed-on: https://code.wireshark.org/review/28948
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28957

commit 5a22432db6
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Sat Aug 4 06:04:41 2018 +0700

    [GSM A RR]: fix APDU ID/Flags parsing for Application Info
    
    According to 3GPP TS 04.08, table 9.1.53.1, Application Information
    message has two mandatory fields encoded in a single octet:
    
      - APDU ID (section 10.5.2.48) M V 1/2,
      - APDU Flags (section 10.5.2.49) M V 1/2.
    
    For some reason, they were dissected incorrectly:
    
    GSM A-I/F DTAP - Application Information
      Protocol Discriminator: Radio Resources Management messages (6)
        .... 0110 = Protocol discriminator: Radio Resources Management messages (0x6)
        0000 .... = Skip Indicator: No indication of selected PLMN (0)
      DTAP Radio Resources Management Message Type: Application Information (0x38)
      APDU ID
        .... 0000 = APDU ID: RRLP (GSM 04.31) LCS (0x0)
      Missing Mandatory element APDU ID, rest of dissection is suspect
        [Expert Info (Error/Protocol): Missing Mandatory element APDU ID,
                                       rest of dissection is suspect]
        [Missing Mandatory element APDU ID, rest of dissection is suspect]
          [Severity level: Error]
          [Group: Protocol]
      APDU Flags
        0000 .... = APDU Flags: Unknown (0x0)
      APDU Data
        [...]
    
    Change-Id: Ibb248104289da8e602ac15da15ae9e8eadb42c42
    Reviewed-on: https://code.wireshark.org/review/28947
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28949

commit 656562357b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Aug 2 21:27:00 2018 -0700

    Fix bug in RFC 5447 dictionary.
    
    Pick up the current version ("current" as in "picked up from a recent
    checkout of the FreeRADIUS/freeradius-server repository on GitHub") of
    dictionary.rfc5447.
    
    See
    
        https://github.com/FreeRADIUS/freeradius-server/issues/2269
    
    and some of the discussion in
    
        https://github.com/the-tcpdump-group/tcpdump/pull/636
    
    Change-Id: Ib21838684ac250ff1f02fcea6c1e5ca865b4b6ff
    Reviewed-on: https://code.wireshark.org/review/28935
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 7b6181ae6bf0acf7dc376058b71cc310dd5f60fd)
    Reviewed-on: https://code.wireshark.org/review/28936

commit feab15ef9e
Author: Michal Slavka <slavka.michal@gmail.com>
Date:   Thu Aug 2 17:10:22 2018 +0200

    PFCP: fix DL Buffering Duration time
    
    Variable units is shifted two times,in proto_tree_add_item_ret_unit and
    again in the dissector.
    
    Change-Id: Ia93bfe59730a7634201de26b37dcc8111515eea5
    Reviewed-on: https://code.wireshark.org/review/28931
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28932

commit d994321c91
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Aug 1 02:56:49 2018 +0000

    Revert "Have find_or_create_conversation() use pinfo->conv_endpoint if present."
    
    This reverts commit 420938f905b93c8fdc9e8a4f30a79c35348d7927.
    
    Creating endpoints, and corresponding conversations, for protocols atop which TCP or UDP runs can potentially cause attempts to look up the conversation to find the conversation for that protocol rather than for TCP/UDP, which can confuse protocols running atop TCP or UDP.
    
    Change-Id: I096d2de9727d52b05f1cb39325681665b496ccd0
    Reviewed-on: https://code.wireshark.org/review/28913
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit aff924314a
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 19:02:08 2018 -0700

    Get rid of a no-longer-used dissector handle.
    
    Change-Id: I3e5bdc0339a0f229f40a6538f93c699106941e28
    Reviewed-on: https://code.wireshark.org/review/28910
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit b28345b8a46e30986e61d4b837db72bfcd710fcf)
    Reviewed-on: https://code.wireshark.org/review/28911

commit 420938f905
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 15:52:46 2018 -0700

    Have find_or_create_conversation() use pinfo->conv_endpoint if present.
    
    Add conversation_new_pinfo(), which uses the endpoint if present, and
    have find_or_create_conversation() use it rather than
    conversation_new().
    
    Remove find_or_create_conversation_by_id() - it's no longer needed.
    
    Bug: 15018
    Change-Id: Ib13e539751af0f071aede4ee0ed751d0cb72ba3f
    Reviewed-on: https://code.wireshark.org/review/28908
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit ba202ef36225b59eb797c5a48b8d4a4665b479c7)
    Reviewed-on: https://code.wireshark.org/review/28909

commit c39ce68444
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 14:44:49 2018 -0700

    Export some more conversation functions.
    
    They're used by built-in dissectors; I see no reason whatsoever to
    forbid plugins from using them.
    
    See
    
        https://ask.wireshark.org/question/4366/compile-plugin-with-call-to-conversation_set_port2/
    
    Change-Id: I6a04df961c164a09b88abd8f46a1fe3420a21661
    Reviewed-on: https://code.wireshark.org/review/28906
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 137bbb2d146a89b42c8173c2b7e9a867df14ecae)
    Reviewed-on: https://code.wireshark.org/review/28907

commit 04f125559f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 14:14:04 2018 -0700

    For ISDN, don't create an endpoint by ID and then use it.
    
    That isn't working, because it depends on the notion that for every
    "endpoint type" there's a "port type" for the packet_info structure;
    that's not true for ISDN channels.
    
    The whole point of "use the packet_info structure when trying to find a
    conversation and create it if it doesn't exist" is to use address
    information *already filled in by somebody for use by other dissectors*;
    we don't do that with the ISDN channel number, because there's no *need*
    to do so.
    
    So just add a new find_or_create_conversation_by_id() routine, which
    passes the packet_info structure to get the frame number, and explicitly
    passes the endpoint type and ID.  Use that in the ISDN dissector.
    
    Bug: 15018
    Change-Id: Id0e997254b0eaf7cbc9261a2adff639ecbf083c0
    Reviewed-on: https://code.wireshark.org/review/28904
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d950b14f26432dae1e805853ca90dd35ef4984cf)
    Reviewed-on: https://code.wireshark.org/review/28905

commit 5501026464
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 13:15:36 2018 -0700

    Improve debugging messages.
    
    For various attempted matches, print what we're matching against.
    
    Change-Id: Ib915aa9bc6e6e1ea6cc7a273f261db2a4952c0c4
    Reviewed-on: https://code.wireshark.org/review/28900
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 83715db4a99b58f4314242be5de0865d4ec5993b)
    Reviewed-on: https://code.wireshark.org/review/28901

commit 76e3e38ce7
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 12:13:08 2018 -0700

    Frame numbers are unsigned.
    
    Change-Id: I07641b0a759058fe5111e10c3ccd4c8f69eeccef
    Reviewed-on: https://code.wireshark.org/review/28894
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 20a3248ebb8648928c456e8c0da138dfe966a411)
    Reviewed-on: https://code.wireshark.org/review/28895

commit f2a693e55d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Jul 31 11:24:04 2018 -0700

    Clean up white space.
    
    Change-Id: Id1eb5ec743581a0d05b82e94c78f262e7dc33f7b
    Reviewed-on: https://code.wireshark.org/review/28892
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit a9dcc80f1ba9b3407ac3591940b1bbcefb865f39)
    Reviewed-on: https://code.wireshark.org/review/28893

commit d9f7262482
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 29 08:31:00 2018 +0000

    [Automatic update for 2018-07-29]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I204092349b8daf6f8fd5c439a69004c672544350
    Reviewed-on: https://code.wireshark.org/review/28878
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 7438db7fa0
Author: Graham Bloice <graham.bloice@trihedral.com>
Date:   Thu Jul 26 18:28:55 2018 +0100

    bootp: Add support for non-standard MS option 77
    
    MS DHCP Clients configured for the RRAS role make DHCP requests for
    RAS pool IP's using a non-standard user class (option 77).
    
    Add support for this, along with an expert info to indicate the
    item is non-standard.
    
    Change-Id: I2f18061c8635fde69cbf4c5d6d0548fadecc28cb
    Reviewed-on: https://code.wireshark.org/review/28863
    Petri-Dish: Graham Bloice <graham.bloice@trihedral.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Graham Bloice <graham.bloice@trihedral.com>
    (cherry picked from commit da774fbc61a029e31481b0cc2bd10ce428e70446)
    Reviewed-on: https://code.wireshark.org/review/28872

commit 3e7ba5358f
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Jul 20 13:13:12 2018 +0000

    nfapi: fix dissection of CONFIG.request
    
    There is no Error Code field
    
    Bug: 14988
    Change-Id: If6e8cf37d508c014b585bdb0cb4830ce7eb45588
    Reviewed-on: https://code.wireshark.org/review/28797
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 532e8c8011ac47fdcfa578caa5cb3b404b645f6a)
    Reviewed-on: https://code.wireshark.org/review/28856
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 5f05888440
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Jul 22 20:17:50 2018 +0200

    Remove executable file permission from lua test files
    
    Change-Id: I18b3f145bb48a78edabed3cca03691d15cd06842
    Reviewed-on: https://code.wireshark.org/review/28809
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit d7c4e482b754b7802e3efb5a56acac1f4aa57268)
    Reviewed-on: https://code.wireshark.org/review/28824

commit 402c7ea6af
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 12:19:33 2018 -0700

    If the dissector isn't registered, you shouldn't be calling it.
    
    Report a dissector bug, rather than calling the data dissector.
    
    Change-Id: I7bde1001a48d2443acf2dc7caa83434e0972aab7
    Reviewed-on: https://code.wireshark.org/review/28814
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 954fe24e418723df7bac6be146528947ca11d060)
    Reviewed-on: https://code.wireshark.org/review/28815

commit 424d2d23a1
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 11:53:15 2018 -0700

    Clean up whitespace.
    
    Change-Id: Ib9c6e5fbb5cf94c56f5a3a81bad02c6f735f8211
    Reviewed-on: https://code.wireshark.org/review/28812
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 94466d0b1afd0b044cdc889b1fec6ee94d852986)
    Reviewed-on: https://code.wireshark.org/review/28813

commit aafca47bd3
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 11:51:06 2018 -0700

    Do some more checks.
    
    Don't assume that the amount of data remaining in the packet is greater
    than or equal to the amount of padding; it might not be.  Throw an
    exception if it isn't.
    
    Make sure data eists before allocating a buffer for it and copying with
    tvb_memcpy(), in case the length is too big.
    
    Change-Id: Icde8b8cc687b7b9229756aabddb246f9b98c3a22
    Ping-Bug: 14999
    Reviewed-on: https://code.wireshark.org/review/28810
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit f99d2d2afe4b92a00f3789de572a4183f226fed1)
    Reviewed-on: https://code.wireshark.org/review/28811

commit 10db757c35
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 10:18:19 2018 -0700

    Don't assume a given btgatt.uuid0xXXXX dissector exists.
    
    They're not guaranteed to have been registered.
    
    Bug: 14994
    Change-Id: I11c2b2d4d8a7dd020a0ef3d700b29b0859bc68ca
    Reviewed-on: https://code.wireshark.org/review/28805
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit f98fbce64cb230e94a2cafc410a3cedad657b485)
    Reviewed-on: https://code.wireshark.org/review/28806

commit 1db1086154
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 16:43:34 2018 +0000

    Revert "Remove false claims."
    
    This reverts commit e3ae93f7726a78698177fba333a2f43ee4aa3e1b.
    
    They're true in 2.6, even though they're not true in the master branch.
    
    Change-Id: I812ec8061e67df3d31f4c30e535ac49aeaa24279
    Reviewed-on: https://code.wireshark.org/review/28804
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit e3ae93f772
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Jul 22 09:38:44 2018 -0700

    Remove false claims.
    
    dissect_zbee_nwk_gp_cmd_commissioning_reply() *does* use the packet
    argument.
    
    Change-Id: Ife78d8090822474977ddf1ed6ce1a34611d06080
    Reviewed-on: https://code.wireshark.org/review/28802
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit fbd682ed2867775c17feb1693f076dcf80555305)
    Reviewed-on: https://code.wireshark.org/review/28803

commit dc9539775d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 20 16:30:51 2018 -0700

    CMake: Add tools help checks.
    
    Generate help for dumpcap and rawshark only if PCAP_FOUND is true. Note
    that we should generate all of the tools help conditionally.
    
    Change-Id: I2145717dee8d8a1ac3d4fd328240f58dbdd07e6c
    Reviewed-on: https://code.wireshark.org/review/28785
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit 66935d8baadfe7dd62b4e8d4412a47f311ead7f5)
    Reviewed-on: https://code.wireshark.org/review/28801

commit 0de5ef226d
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Sun Jul 22 11:37:46 2018 +0300

    ssl: dtls: Fix small memory leaks
    
    Use g_strsplit/g_strfreev instead of wmem_strsplit/wmem_free because in
    wmem_strutil.h the wmem_strsplit is documented not to be used with a
    NULL allocator.
    
    The wmem_free does not free the string elements in contrast to g_strfreev.
    
    Change-Id: Ia207d5df5b8b7edd4ba77071292761ae4819fb12
    Reviewed-on: https://code.wireshark.org/review/28796
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Reviewed-on: https://code.wireshark.org/review/28798
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit c8e423a496
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 22 08:26:47 2018 +0000

    [Automatic update for 2018-07-22]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ie9af809bdffb07c7c6f3e696bf695f96d24798c6
    Reviewed-on: https://code.wireshark.org/review/28793
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit dd2a9d484d
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Wed Jul 18 19:05:18 2018 +0300

    packet.c: fix compilation with gcc 8
    
    error: cast between incompatible function types from ‘void (*)(void *)’ to ‘void (*)(void *, void *)’ [-Werror=cast-function-type]
      g_slist_foreach(*list, (GFunc)g_free, NULL);
                             ^
    
    Change-Id: Iff833bf5c197959c8decb62d6ce794c6d0415fb7
    Reviewed-on: https://code.wireshark.org/review/28750
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 33e0cedcf7
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Jul 18 05:40:12 2018 +0000

    ISAKMP: Incorrect presentation of NETMASK for INTERNAL_IP4_SUBNET Config Attribute
    
    Bug: 14987
    Change-Id: I03c29026ec5c2d4b172bb49aff3f6877a9b9ab10
    Reviewed-on: https://code.wireshark.org/review/28747
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ade0bbd9c34fd3b5be16b367a7a089ea775a0e07)
    Reviewed-on: https://code.wireshark.org/review/28770

commit 5f6aea3214
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 20 13:55:40 2018 -0700

    CMake: Fixup our tools help dependencies.
    
    Make sure each tools help target is generated by and depends on its
    generating executable.
    
    Change-Id: I716c0db23b297e2d2692b72a47259c40aa0c52fa
    Reviewed-on: https://code.wireshark.org/review/28780
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit ffbd3151b533800ec3c637007a430a93554bc471)
    Reviewed-on: https://code.wireshark.org/review/28784
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit f89ee82424
Author: Darien Spencer <cusneud@mail.com>
Date:   Sat Jul 21 19:39:49 2018 +0300

    FP: Fix wrong indexer
    
    Change-Id: Iba74c38336ba06d207444fda32376a8c3851b61d
    Reviewed-on: https://code.wireshark.org/review/28787
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28791

commit d59b2267fd
Author: Vasil Velichkov <vvvelichkov@gmail.com>
Date:   Fri Jul 20 21:12:06 2018 +0300

    packet-k12: Fix small memory leak
    
    Use g_strsplit/g_strfreev instead of wmem_strsplit/wmem_free because in
    wmem_strutil.h the wmem_strsplit is documented not to be used with a
    NULL alocator.
    
    5 bytes in 1 blocks are definitely lost in loss record 63 of 9,354
       at 0x4C2EBAB: malloc (vg_replace_malloc.c:299)
       by 0x4E8D3C5: g_malloc (gmem.c:99)
       by 0x8214317: wmem_alloc (wmem_core.c:37)
       by 0x8219227: wmem_strdup (wmem_strutl.c:41)
       by 0x8219AC1: wmem_strsplit (wmem_strutl.c:272)
       by 0x749E3C9: protos_chk_cb (packet-k12.c:363)
    
    5 bytes in 1 blocks are definitely lost in loss record 64 of 9,354
       at 0x4C2EBAB: malloc (vg_replace_malloc.c:299)
       by 0x4E8D3C5: g_malloc (gmem.c:99)
       by 0x8214317: wmem_alloc (wmem_core.c:37)
       by 0x8219227: wmem_strdup (wmem_strutl.c:41)
       by 0x8219AC1: wmem_strsplit (wmem_strutl.c:272)
       by 0x749E24A: k12_copy_cb (packet-k12.c:327)
    
    Change-Id: I994769d17c87ed1d4f620379a2502452f48d80a5
    Reviewed-on: https://code.wireshark.org/review/28779
    Reviewed-by: Dario Lombardo <lomato@gmail.com>
    Petri-Dish: Dario Lombardo <lomato@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/28788

commit 35ac0ba354
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jun 15 10:52:53 2018 -0700

    Remove code specific to older versions of Visual Studio.
    
    Remove -DBUILD_WINDOWS and sections of code that we no longer use.
    
    Bug: 14715
    Change-Id: Iae1a950e2f52f4ce45fcf0ae5dea06c1172c3a28
    Reviewed-on: https://code.wireshark.org/review/28466
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Graham Bloice <graham.bloice@trihedral.com>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit fe94133f0d06935bb5f2afe21f59bbb078d3d9d3)
    Reviewed-on: https://code.wireshark.org/review/28777

commit f4c57ef8b3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jun 25 17:38:19 2018 -0700

    Windows: Fetch our version using RtlGetVersion.
    
    GetVersionEx is deprecated. Use RtlGetVersion instead. Remove
    get_windows_major_version since it's no longer needed.
    
    Change-Id: I02f6458608c2328a96a0ac71c6b1f9187babd049
    Reviewed-on: https://code.wireshark.org/review/28443
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit c74dba69fc4118e1d81c2bdcbc6ba52fd5a465d5)
    Reviewed-on: https://code.wireshark.org/review/28775

commit 0bc642e777
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jul 19 02:27:02 2018 -0700

    Extcap programs must write to the packet pipe in binary mode.
    
    It doesn't matter on UN*X, but it definitely matters on Windows; we're
    writing a pcap file, not a text file, so every byte we write should go
    down the pipe as is.
    
    Bug: 14989
    Change-Id: I26c067b8ff5dba644a579846dd97b568a81c7053
    Reviewed-on: https://code.wireshark.org/review/28764
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 065a76257935e0699b6cf4aa2352d2f7de914a87)
    Reviewed-on: https://code.wireshark.org/review/28765

commit fd1d379fff
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 18 14:19:51 2018 -0700

    2.6.2 → 2.6.3.
    
    Change-Id: I79f8647dc388e7308aa2e6c28d335b5cb14c48a5
    Reviewed-on: https://code.wireshark.org/review/28758
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
