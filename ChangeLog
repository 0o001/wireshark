commit 644ab31906
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jul 10 19:57:56 2023 -0500

    Prep for 3.6.15

    [skip ci]

commit b9e5603334
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 9 23:04:39 2023 +0000

    [Automatic update for 2023-07-09]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit 012c3c9d07
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 6 21:54:32 2023 -0400

    AMQP: Set the length size for NULL to zero in value formatter

    Some functions that call get_amqp_1_0_value_formatter explicitly
    set the length size to 0 before calling it, but not all do (e.g. map).

    All other types besides NULL set the length size explicitly. Set
    the length for a NULL value to zero, the same way that true and
    false (0x41 and 0x42) set to zero via dissect_amqp_1_0_[true|false].
    (dissect_amqp_1_0_skip isn't actually called so that null values
    can be displayed for lists and maps.)

    Fix #19191

    (cherry picked from commit b5cecf0c7888f31b918115d6d290f390548d79af)

commit c8ecd326d8
Author: João Valverde <j@v6e.pt>
Date:   Fri Dec 16 16:13:17 2022 +0000

    epan: Add a bounds check to tvb_uncompress_lz7huff()

    (cherry picked from commit 2de92a94df7f35fa04b6dd36fe557c9853aabb6b)

commit f73546d65f
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Jul 3 16:33:13 2023 +0200

    RTCP: fix dissection of Slice Loss Indication

    Closes #19182

    (cherry picked from commit 9b95e0df2c4f9af160ff835a752f9f5050f29e52)

commit a096b72068
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 2 16:18:54 2023 +0000

    [Automatic update for 2023-07-02]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit a4495de50f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Jun 29 10:49:25 2023 -0700

    GitLab CI: Don't retry our fuzz jobs

    (cherry picked from commit ed35e3a4e99c8178bfd44ced1ed575d51faba4f7)

commit 6a3d45ed6b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jun 28 09:45:58 2023 -0700

    Qt: Really show our context menu shortcuts this time

    Call setAttribute(Qt::AA_DontShowShortcutsInContextMenus, false) in
    order to work around QTBUG-109590.

    (cherry picked from commit b330bdb06d2f978ff3e8facee73eb76537d6df41)

     Conflicts:
            ui/qt/main_application.cpp

commit e7a79b7f0d
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Jun 28 10:25:09 2023 +0200

    Openflow(v1): fix datapath_id on Features Reply

    2 fields need to be swap (datapath_mac and dataph_impl)

    Fix: #19172

    (cherry picked from commit 8dfe582330995b72eebefd952d7bae45161ef6dc)

commit 84ad96fb9a
Author: Guy Harris <gharris@sonic.net>
Date:   Sun Jun 25 23:03:13 2023 -0700

    glusterfs: use a value_string, not g_strerror(), to decode status values.

    GlusterFS status values aren't errno values; they may mostly correspond
    to errno values, but, because not only are some errno values different
    on different platforms, some errno values on some Linux platforms differ
    from the equivalent values on most Linux platforms, using errno values
    in an over-the-wire protocol is a bad idea unless you *know for certain*
    that call clients and servers will run the same operating system - and,
    if that operating system is Linux, the client and server either are on
    the same platform or are on platforms with compatible errno values.

    Therefore, we shouldn't use g_strerror() to decode them, we should have
    a value_string table based on the GF_ERROR_CODE_ values.

    This also means that a status value of 0, which means "success", is
    reported as such, rather thn as something such as "Undefined error 0".

    (cherry picked from commit b494a22780df96e42ab64b8cdc24ea2209245082)

commit b6105b91d9
Author: Guy Harris <gharris@sonic.net>
Date:   Sun Jun 25 19:09:39 2023 -0700

    9p: don't use g_strerror() to map 9P2000.L error codes to strings.

    errno values are *not* platform-independent; most platforms probably use
    the same numeric values for errnos that V7 UNIX returned, but, after
    that, it's a bit of a free-for-all.  ENAMETOOLONG ("File name too
    long"), for example, is 36 on most platforms on Linux, but is 63 on *BSD
    and Darwin and 78 on Solaris.

    The "L" stands for "Linux"; use a value_string that maps the errno
    values used on Linux for most instruction sets to the corresponding
    error message.  (On some instruction sets, Linux uses different values;
    I think this was for backwards compatibility with vendor UNIXes for
    those platforms.  For now, we just ignore this issue.)

    (cherry picked from commit 932a4ead49f4fd58241ffebe307e7bbeffb3521d)

commit e10e88a70f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 25 16:18:15 2023 +0000

    [Automatic update for 2023-06-25]

    Update manuf, services enterprise numbers, translations, and other items.

commit 4998c22f2e
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jun 21 22:13:08 2023 -0400

    capture: Use win32strerror on windows

    This code block where we send a quit message to the capture child
    in another thread is only on Windows, so use win32strerror to get
    a little more informative error about what's going on when it fails
    unexpectedly.

    Related to #18014

    (cherry picked from commit 60203c3db30594d74c566d9d2d12b8e544c9e994)

commit 8d4878b526
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 18 13:58:29 2023 -0700

    Debian: Fix our PCRE dependency

    We migrated to PCRE2 in 2021 and made it a required dependency
    9df5279af7. Update the Debian packaging assets to reflect that.

    (cherry picked from commit 6649f96725fcb647a8f6a86e67176578be945c7c)

commit 93a450a167
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Jun 19 11:19:04 2023 +0200

    PPPoE: do not display a payload length error message for IPv6CP

    Similar to what is done for IPCP.

    Closes #19149

    (cherry picked from commit a02c60b7aabbed823cb51950f8b98052a683eb89)

commit d4c36f1bd2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 18 16:18:03 2023 +0000

    [Automatic update for 2023-06-18]

    Update manuf, services enterprise numbers, translations, and other items.

commit 606631c71d
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon May 22 21:46:57 2023 -0400

    XMPP: Cleanup xmpp element even if there's an exception

    Fix some leaks seen in fuzzed data by using an exception
    cleanup routine

    (cherry picked from commit bde79e1992769bf2ad8cdbedf557d79edc5db8ec)

commit 45e4dca6fc
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Fri Jun 16 16:15:32 2023 +0200

    BLF: Last LIN-Message parameter is not mandatory (BUGFIX)

    The blf code assumes that the last parameter of the LIN-Message format
    is mandatory, which it is not. If present, blf stops opening the file.

    Fixes: #19147

    (cherry picked from commit 2956aac65cf6260894fe994c88aee8de963590b7)

commit f5d473cb97
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jun 16 22:21:22 2023 -0400

    Qt: Don't look for word boundaries in FollowStreamText

    On long lines without whitespace, FollowStreamText (and its
    QPlainTextEdit) spends most of its time when adding text looking
    for word boundaries to wrap at.

    For the C Array, Hex Dump, and YAML options, we insert line
    endings after fixed widths, so the default wrap behavior is fine.

    In other case, we don't control whether there's line breaks or white
    space (and with Raw, we ensure that there *isn't* white space or
    line breaks in the middle of long lines), so it's not worth an
    O(N^2) performance hit looking for word boundaries. Text with words
    separated by whitespace in very long lines will word wrap worse now,
    but that's acceptable in exchange for the dramatic performance
    improvement.

    Fix #17313.

    Related to #15963 ("There should be a preference for the initial
    selection, so you can default to Raw, etc. instead of always having
    to wait for ASCII to finish") and #15211 ("We should probably replace
    FollowStreamText's QTextEdit with our own widget.")

    (cherry picked from commit e834377f78b5cbacdc9ad4e8f7846c65793b08f8)

commit d57a87cb72
Author: João Valverde <j@v6e.pt>
Date:   Sat Jun 17 11:46:27 2023 +0100

    CMake: Fix config package without installed plugins or extcaps

    (cherry picked from commit 60dedef3f18932f685ff2abd9f2bb7f7c8de9ffe)

commit 64dea797f3
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Fri Jun 16 15:18:58 2023 +0200

    BLF: Bugfix CAN-FD Message format

    The CAN-FD Message (not CAN-FD Message64) format was missing a field,
    which lead to wrong dissections from time to time.

    Fixes: #19146

    (cherry picked from commit 7785452149bfa54c1089a9bb46acd9e456123f08)

commit 4fe31b794e
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jun 14 20:40:42 2023 -0400

    capture_opts: On Windows, check for combined interface names

    In preferences, we store interface names as: "friendlyname (name)".
    Check for that formatting as well as for exact matches on just
    the name or the friendly name on Windows.

    Fix #16593.

    (cherry picked from commit c88b6b43e37036cd467f3736b851218cbc10a6de)

commit e33afa6979
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Jun 15 19:58:13 2023 +0200

    address_types.c: fix one character resolved name display

    Closes #19137

    (cherry picked from commit 0af1dfd8d0b1b7eb063d699bcdb7121b6e4c42d3)

commit 81763b133d
Author: Jones Syue <jonessyue@qnap.com>
Date:   Thu Jun 15 15:25:44 2023 +0800

    wsdg backporting a patch: fix typo

    When reading developer's guide about backporting,
    it looks like the commit hash in this example is '1ab2c3d4',
    and it is more consistent if we use 'backport-1ab2c3d4' instead of
    'backport-g1ab2c3d4'.

    This closes #19140

    Signed-off-by: Jones Syue <jonessyue@qnap.com>

    (cherry picked from commit 79ec9b4e12dabe710023afdefe8003d00912ff40)

commit 0129091e7d
Author: Ben Cartwright-Cox <ben@benjojo.co.uk>
Date:   Thu Jun 15 18:19:56 2023 +0100

    Fix typo/error in the BGP ATTR_SET error message

    While doing some testing, I found that the wireshark error for "Attribute set (invalid)"
    was showing "0 bytess", when it should ideally be "0 bytes"

    Current output:

    ```
    Path Attribute - ATTR_SET
        Flags: 0xe0, Optional, Transitive, Partial
        Type Code: ATTR_SET (128)
        Length: 0
        Attribute set (invalid): 0 bytess
            [Expert Info (Error/Malformed): Attribute set (invalid): 0 bytess]
    ```

    (cherry picked from commit 0facfec6df301b1d580fb4836f53b27881d3b27e)

commit d6893913bd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 11 16:19:26 2023 +0000

    [Automatic update for 2023-06-11]

    Update manuf, services enterprise numbers, translations, and other items.

commit de905b5211
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Jun 9 08:09:43 2023 +0200

    wifi-nan: fix wrong offset for NAN availability

    Fix 19129

    (cherry picked from commit c251ec9989c284069d2673e408cdd9ce923e1e24)

commit 1fa3daadd0
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jun 8 21:38:06 2023 -0400

    Qt: Fix crash when changing dfilter macro

    The comments claim that UAT_AFFECTS_FIELDS also triggers a redissection,
    but it does not. Fortunately, all UATs whose flags have UAT_AFFECTS_FIELDS
    also have UAT_AFFECTS_DISSECTION.

    dfilter macro expressions are a rare case of a UAT that should trigger
    FieldsChanged but not PacketDissectionChanged. (It's slightly
    unnecessary to invalidate the custom columns, but perhaps in the
    future macros will be possible in custom columns.)

    So resolve things by changing the comments to reflect current reality
    and making the dfilter macro UAT flags UAT_AFFECTS_FIELDS.

    This prevents a crash when removing a dfilter macro thus invalidating
    the current filter, and then opening a file (including reloading the
    current one.)

    Fix #13753

    (backported from commit a3806fc69b9ee53ac6e4a52f679ef536219520ea)

commit 6f5563ad40
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jun 9 08:31:29 2023 -0400

    Qt: Remove now unnecessary, crash-prone ByteViewTab tvb_memeql

    This code path is no longer necessary because in the PacketDialog
    case a separate fixed epan_dissect_t is now passed in
    and save (9198448f9db7b77af8d19f8265d6785fb005dc58)

    Removing the tvb memory comparision is faster and reduces the number
    of ways that the PacketDialog can crash after the capture file is
    closed, for tvbs with data that was allocated at file scope, or
    freed when the file is closed like reassembly.

    Related to #14363

    (cherry picked from commit 81c3ade8a344dce8081ef56725fb48e5d02a5589)

commit 7932ae8609
Author: Huang Qiangxiong <qiangxiong.huang@qq.com>
Date:   Tue Jun 6 21:10:25 2023 +0800

    HTTP2: fix a bug of streaming reassembly

    Set the value of last_frame field of an uncompleted msp to
    the max uint64 to prevent mis-reporting error of "[Dissector
    bug, protocol HTTP2: ...]".

    close #19121

    (cherry picked from commit 5ad49ee6979697eb3d0c8076f441c4cf6f94a41f)

commit 4c601527ab
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jun 2 21:09:08 2023 -0400

    tls: Enable additional TLS 1.3 Key Updates after the first

    When doing a TLS 1.3 Key Update, save the application traffic secret
    to the new decoder so that it can be used if there is a second
    Key Update.

    Fix #19120

    (cherry picked from commit 0309175407330faee16ae9a624af039086511517)

commit e228c8e3f4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jun 5 11:43:35 2023 -0700

    GitLab CI: Fix 32-bit .msi signing

commit 476cc3b130
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jun 5 09:38:44 2023 -0700

    GitLab CI: Sign our Windows packages explicitly

    (cherry picked from commit d04259560c9be204104450b931238799408f0dae)

     Conflicts:
            .gitlab-ci.yml

commit 62495bb42e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 4 16:19:32 2023 +0000

    [Automatic update for 2023-06-04]

    Update manuf, services enterprise numbers, translations, and other items.

commit 52a2561540
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Jun 2 12:05:39 2023 +0000

    CQL: No global table spec if no metadata flag is set

    Fixes #19119

    (cherry picked from commit fa5497b19e831553424ea99217208aa6a792406f)

commit 1ef627b137
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Fri Jun 2 17:43:49 2023 +0100

    Only subtract 4 bytes from payload before passing to RRC if maci_present

    (cherry picked from commit 4d33f48e6f5625d8913c5787e8903257c809035c)

commit 2f86ff4b03
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Tue May 30 12:28:51 2023 +0200

    NAS-5GS: typo corrections

    (cherry picked from commit 7c772428085e9fed9fed82314268593e407cfc95)

commit 6887ea8c1f
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sun May 28 10:13:02 2023 +0200

    Qt: Scroll to selected packet after column move

    Restore current index after moving a column to fix scroll back
    to the selected packet.

    Fixes #16251

    (cherry picked from commit 07350c6b387cf7f73c5e1af52e53c1cea9a62357)

commit 146721324b
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun May 28 07:14:52 2023 -0400

    kafka: Don't use after free

    Neither tvb_new_child_real_data() nor tvb_composite_append() copy
    the real data buffer that they're given. So we can't free a
    decompressed buffer after making it a tvb.

    We can realloc if the output size is smaller.

    Fix #19105

    (cherry picked from commit b673bc022aa28c2c381cb96cae09357bd27eb0df)

commit b307504e35
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 28 16:21:18 2023 +0000

    [Automatic update for 2023-05-28]

    Update manuf, services enterprise numbers, translations, and other items.

commit a45ec9b4d0
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Sun May 28 15:05:21 2023 +0200

    NAS 5GS: fix dissection of Operator-defined access category definitions

    Fixes #18941

    (cherry picked from commit 4131824bee1929159554d8fcccd28926cb33b73a)

    Conflicts:
            epan/dissectors/packet-nas_5gs.c

    (cherry picked from commit 6686354d21aa62584f5ecf4d844d2183911b5c3f)

commit bfcd0a3cf4
Author: Vadim Yanitskiy <vyanitskiy@sysmocom.de>
Date:   Fri May 26 20:54:51 2023 +0700

    RSL: correct wrong value in rsl_data_rte_vals[]

    In change 795db5c60e I fixed a wrong string in rsl_data_rte_vals[],
    but I did not notice that the corresponding value was wrong too.

    From 3GPP TS 48.058 (V16.0.0), section 9.3.6:

      For the transparent service, bits 6-1 indicate the data rate:

        65 4321
        -------
        11 1000  32 kbit/s
        11 1001  29 kbit/s
        01 1000  14.4 kbit/s
        ...

    Related: 795db5c60e "RSL: correct wrong string in rsl_data_rte_vals[]"

    (cherry picked from commit 47167eda1b203e6a1dba84d07c59bda69f3003b2)

commit 8499bff3be
Author: Vadim Yanitskiy <vyanitskiy@sysmocom.de>
Date:   Wed Mar 22 05:38:47 2023 +0700

    RSL: correct wrong string in rsl_data_rte_vals[]

    Section 9.3.6 in 3GPP TS 48.058 contains no encoding variant for
    data rate of 39 kbit/s, the value 0x22 is actually for 29 kbit/s.

    (cherry picked from commit 795db5c60ebece2026a34b1e60032a7bc9b141ce)

commit 20404b9681
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 24 13:42:17 2023 -0700

    GitLab CI: Allow API pipeline builds

commit 395040cba1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 24 13:35:21 2023 -0700

    Version: 3.6.14 → 3.6.15

    [skip ci]
