commit d97b596
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jan 7 12:05:03 2015 -0800

    Release 1.10.12.
    
    Change-Id: I77b1027c83f4fd673cd2d2489d3f63b4d2fd6993

commit a3362be
Author: Anish Bhatt <anish@chelsio.com>
Date:   Mon Jan 5 22:26:46 2015 -0800

    Revert "[PROFINET] Fix swapped MaintenanceRequired & MaintenanceDemanded bits"
    
    This reverts commit 0452f763fb0dd2cf7e38f0a127c306199a814c3e. Changes should
    have been made in ChannelProperties instead of Submodule state. Current
    implementation merely *appears* to be correct as we are reading it as a two bit
    value but instead should be addressing it as individual bits, little endian
    Bug: 10753
    
    Change-Id: Ia3bd088aeb376b8511d64352f62c4304e4129ba6
    Reviewed-on: https://code.wireshark.org/review/6334
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit eb98b04ac12efe01d1abddf866b18f31101533ee)
    Reviewed-on: https://code.wireshark.org/review/6340
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 7fc3a06
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jan 2 14:06:42 2015 -0800

    Make sure we don't underrun a buffer when decrypting SSL.
    
    Discovered by Noam Rathaus.
    
    Change-Id: Ia0275601b2a825ba616656064d9a6eca109e34fa
    Reviewed-on: https://code.wireshark.org/review/6256
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Evan Huus <eapache@gmail.com>
    (cherry picked from commit d3581aecda62d2a51ea7088fd46975415b03ec57)
    Conflicts:
    	epan/dissectors/packet-ssl-utils.c
    Reviewed-on: https://code.wireshark.org/review/6325

commit d09456c
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sun Jan 4 18:47:40 2015 +0100

    ACSE: get rid of an evil global variable
    
    Bug: 10787
    Change-Id: I225dab439e195bbd308bcafd4658e77ef9023c0f
    Reviewed-on: https://code.wireshark.org/review/6263
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Evan Huus <eapache@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 9aeb24994364c9a3a983b4aa8db4725b1213d64d)
    Conflicts:
    	asn1/acse/acse.cnf
    	asn1/acse/packet-acse-template.c
    	epan/dissectors/packet-acse.c
    Reviewed-on: https://code.wireshark.org/review/6310

commit d9de68d
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sun Jan 4 19:22:05 2015 +0100

    PKIX1Explicit: get rid of an evil global variable
    
    Bug: 10744
    Change-Id: I9fbd7c881ab6b17fa9febb55a4f33dbb229c900b
    Reviewed-on: https://code.wireshark.org/review/6264
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Evan Huus <eapache@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit d9b480dd5809b76f5ed6a06eda9f9663087af6aa)
    Conflicts:
    	asn1/pkix1explicit/pkix1explicit.cnf
    	epan/dissectors/packet-pkix1explicit.c
    Reviewed-on: https://code.wireshark.org/review/6308

commit ba644ad
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 4 08:09:57 2015 -0800

    [Automatic manuf, services and enterprise-numbers update for 2015-01-04]
    
    Change-Id: I2ccb07445b9150e160dc974ac57db1f974d7433a
    Reviewed-on: https://code.wireshark.org/review/6303
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 31f3669
Author: Hadriel Kaplan <hadrielk@yahoo.com>
Date:   Wed Dec 31 15:24:18 2014 -0500

    Lua: FieldInfo '==' check isn't really equality
    
    The FieldInfo metamethod for equality (letting you use the '==' operator)
    doesn't check for equality, but rather if the left-hand side is within
    the right-hand side. It should be equality instead. Also, all of the
    FieldInfo operate overloads should push a boolean even if they're false
    result.
    
    Ping-Bug: 10820
    Change-Id: Ibddaab29713f26d22ddb4d5804b9edb15e93fd79
    Reviewed-on: https://code.wireshark.org/review/6186
    Petri-Dish: Hadriel Kaplan <hadrielk@yahoo.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit 445ddc833669e8cff7e66b268d4b4b77faa504cc)
    Reviewed-on: https://code.wireshark.org/review/6295
    Reviewed-by: Hadriel Kaplan <hadrielk@yahoo.com>

commit 17268c4
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sat Jan 3 22:13:18 2015 +0100

    IPv6: fix compilation when building with GeoIP support
    
    Change-Id: I2aed82284bdc261c5565c9b66eb32bf393b3f2e2
    Reviewed-on: https://code.wireshark.org/review/6283
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit adb08fa
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sat Jan 3 20:40:16 2015 +0100

    IPv6: do not allocate tap data on stack
    
    Bug: 10780
    Change-Id: I2526fb9a5a2dfd61b19dff5ba1b7902f77927f4a
    Reviewed-on: https://code.wireshark.org/review/6276
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 17dcd95f2bd329982a96cad012334eea4e81c31c)
    Conflicts:
    	epan/dissectors/packet-ipv6.c
    Reviewed-on: https://code.wireshark.org/review/6281

commit 25a7dd1
Author: Anish Bhatt <anish@chelsio.com>
Date:   Fri Jan 2 20:00:08 2015 -0800

    [PROFINET] Fix swapped MaintenanceRequired & MaintenanceDemanded bits
    
    
    Bug: 10753
    
    Change-Id: Ib5522eba5c1d9107219ee2d70c96899ba6f22ca1
    Reviewed-on: https://code.wireshark.org/review/6258
    Petri-Dish: Michael Mann <mmann78@netscape.net>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit 0452f763fb0dd2cf7e38f0a127c306199a814c3e)
    Reviewed-on: https://code.wireshark.org/review/6271
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit b24463e
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Fri Jan 2 21:02:13 2015 +0100

    USB HID: fix report descriptor main items dissection
    
    true_false_string definitions were inverted
    While we are at it, use the exact same wording as in the spec
    
    Bug: 10825
    Change-Id: Ia391b310e92eb88a9a144a2fb0974701a460afc8
    Reviewed-on: https://code.wireshark.org/review/6251
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 42baa9d8483351bc77f61cb382a7163c4e8cf6ad)
    Reviewed-on: https://code.wireshark.org/review/6253

commit 00a234a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jan 2 12:02:44 2015 -0800

    Update the release notes for 1.10.12.
    
    Change-Id: I899254fa61e181f4fa4747efc1fc95f5b0ffdb53
    Reviewed-on: https://code.wireshark.org/review/6250
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 9a8d334
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Dec 31 08:53:39 2014 -0800

    Test suite: Make sure we have a usable locale before we run iconv.
    
    Change-Id: Ib1f3143dc48af4c556b9bcdfafbb477fd59b6359
    Reviewed-on: https://code.wireshark.org/review/6181
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit f485b2809061e68e3e2b1e7243060a744a2b1cf8)
    Reviewed-on: https://code.wireshark.org/review/6242

commit da8282d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jan 1 21:49:40 2015 -0800

    Always set decrypt_len when setting decrypt.
    
    This may not always be necessary, but....
    
    Change-Id: I7167ca98351318225a99d149f4aaa5309bac1bd6
    Reviewed-on: https://code.wireshark.org/review/6234
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 2d23bcd
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jan 1 17:53:24 2015 -0800

    When deccoding base-64, the result is the length of the *decoded* result.
    
    That way, for example, format_text() calls on the decoded result don't
    go past the end of the decoded result.
    
    Fix some more indentation while we're at it.
    
    Conflicts:
    	epan/dissectors/packet-smtp.c
    
    Bug: 10823
    Change-Id: Id42b1a5bce4d60e1b86cfc98179a8f14dd544b3f
    Reviewed-on: https://code.wireshark.org/review/6230
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 38b911d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jan 1 15:33:01 2015 -0800

    Fix tpyo.
    
    Change-Id: Ic486d95cf47d53ee8435cd2b4b2d6cbfae6d9d0f
    Reviewed-on: https://code.wireshark.org/review/6229
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 9c8897d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jan 1 15:27:53 2015 -0800

    More indentation cleanups.
    
    Change-Id: I4faa59c2afaf841bd91cf893e906dd8df4dfc29c
    Reviewed-on: https://code.wireshark.org/review/6228
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 2596de1
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jan 1 15:14:51 2015 -0800

    Clean up indentation.
    
    Change-Id: I77850e350b9413013c2a36f6507e1c56cc9884e3
    Reviewed-on: https://code.wireshark.org/review/6227
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit d4f7bbb
Author: Hadriel Kaplan <hadrielk@yahoo.com>
Date:   Tue Dec 30 17:39:56 2014 -0500

    Lua: getting fieldinfo.value for FT_NONE causes assert
    
    Retrieving an FT_NONE field's value through `fieldinfo.value` or
    `fieldinfo()` causes an assert.  It should retrieve the label instead.
    
    Conflicts:
    	epan/wslua/wslua_field.c
    
    Bug: 10815
    Change-Id: Ia80443f3dd046b2cc31d1dff70d599e96d6f6fe3
    Reviewed-on: https://code.wireshark.org/review/6150
    Petri-Dish: Hadriel Kaplan <hadrielk@yahoo.com>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    Reviewed-by: Hadriel Kaplan <hadrielk@yahoo.com>
    Tested-by: Hadriel Kaplan <hadrielk@yahoo.com>
    (cherry picked from commit 0bf38f7aec22a1a6e4acfbfec4a9a2201fd6f8de)
    Reviewed-on: https://code.wireshark.org/review/6188

commit d1559a1
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Thu Jan 1 14:16:20 2015 +0100

    Welcome in 2015
    
    Change-Id: I514bf4923009699102261761e2a62ab48d8c5beb
    Reviewed-on: https://code.wireshark.org/review/6206
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit db548c7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Dec 30 12:38:52 2014 -0800

    Test suite: Start testing our output for valid UTF-8.
    
    Feed the output of `tshark -G <glossary>` to `iconv -f UTF-8`. Adjust a
    couple of the Bluetooth dissectors and X11 keysyms accordingly.
    
    Change-Id: I5b04dc3fa4734c8f0a795daf44bd398fe5ebc1bd
    Reviewed-on: https://code.wireshark.org/review/6147
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit dfa49cdd1653493456d7188950c4c66917c66572)
    Conflicts:
    	epan/dissectors/packet-bthci_evt.c
    	test/suite-clopts.sh
    Reviewed-on: https://code.wireshark.org/review/6148

commit 62a149c
Author: Hadriel Kaplan <hadriel@128technology.com>
Date:   Mon Dec 22 19:14:49 2014 -0500

    Lua accessor for Protocol field type gets wrong data
    
    When a Lua dissector/tap accesses the value of a Field of FT_PROTOCOL ftype, the
    returned ByteArray contains the wrong data.  Also, calling such a field's
    tostring() method returns a string of "(unknown)" instead of the hex of the
    data.
    
    Conflicts:
    	epan/wslua/wslua_field.c
    
    Bug: 10801
    Change-Id: I8a0642dc0e41af444d211bbe4106cd21207084a6
    Reviewed-on: https://code.wireshark.org/review/6003
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Hadriel Kaplan <hadrielk@yahoo.com>
    Tested-by: Hadriel Kaplan <hadrielk@yahoo.com>
    (cherry picked from commit ceeeea089ac68366d520eaf332fed4231ce8831e)
    Reviewed-on: https://code.wireshark.org/review/6135
    Petri-Dish: Hadriel Kaplan <hadrielk@yahoo.com>
    Reviewed-by: Michael Mann <mmann78@netscape.net>

commit 1266276
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 28 08:10:09 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-12-28]
    
    Change-Id: Id4ff8f3d3f2cd29dd8ebe5c0b371b5472526bf2e
    Reviewed-on: https://code.wireshark.org/review/6094
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 0966d7d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Dec 28 02:18:05 2014 -0800

    Don't check the same character twice in a row, check it and the next character.
    
    Fixes Coverity CID 1260460.
    
    Change-Id: Ic9ed109a863bcf20a5e67e4f52d628011f5e9ba5
    Reviewed-on: https://code.wireshark.org/review/6087
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 120628e5f478a4ee767f87c2b408edb0ed5224ba)
    Reviewed-on: https://code.wireshark.org/review/6089

commit 677d667
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Sun Dec 21 16:15:10 2014 +0100

    RSVP: RECORD_ROUTE IPv4 Subobject Flags field incorrect decoding
    
    The Flags field within RSVP RECORD_ROUTE IPv4_Subobject is decoded incorrectly.
    Wireshark thinks that 0x10 bit represents Node-ID, but actually the Node-ID is encoded by bit 0x20 (per RFC 4561)
    
    Issue reported by  Alexander Okonnikov
    
    Bug:10799
    Change-Id: I48f6aa35c08945aacf8f2bb871a72b5927511948
    Reviewed-on: https://code.wireshark.org/review/5944
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit f1038652c63e86c84c19c07bd018fb56e5c985e9)
    Reviewed-on: https://code.wireshark.org/review/6017
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit 8827179
Author: Bill Meier <wmeier@newsguy.com>
Date:   Tue Dec 23 00:51:49 2014 -0500

    asn1/Makefile.nmake: packet-c1222.c not autogenerated using Windows nmake
    
    Change-Id: I571a654c21dfabaf1a539e713ab3039604ca4bfd
    Reviewed-on: https://code.wireshark.org/review/6010
    Reviewed-by: Bill Meier <wmeier@newsguy.com>

commit c783d41
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 21 08:09:45 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-12-21]
    
    Change-Id: I79154ad11a4b934a30b77191067088c3d24a0b31
    Reviewed-on: https://code.wireshark.org/review/5947
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 8fee8b7
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sat Dec 20 18:39:51 2014 +0100

    FCoIB / Infiniband SDP: prevent a crash when 'enable manual settings' is set without filling address field
    
    Bug: 10796
    Change-Id: Ifdb7804ec5e1146b08f00e54647d802a69d52113
    Reviewed-on: https://code.wireshark.org/review/5914
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 851909d2c8e54ba8d087d68cc977a90bea4e0fd0)
    Reviewed-on: https://code.wireshark.org/review/5921

commit e4b1a6f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Dec 20 09:47:01 2014 -0800

    Fix handling of 3-component OS version numbers.
    
    Get rid of doubled square brackets (what were those for?), and match
    dots in the version number with "\.", so we only match dots.
    
    This fixes the handling of version numbers such as 10.10.1.
    
    (A 2-component version number doesn't match, but that's OK - the sed
    command doesn't use -n, so that just means it's unchanged by the
    command.)
    
    Change-Id: Ia4af97f2f323b88569a1dda6fe9e008c2e408642
    Reviewed-on: https://code.wireshark.org/review/5917
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 68e832f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Dec 17 16:22:18 2014 -0800

    Don't use WTAP_ERR_UNSUPPORTED for unwritable records.
    
    WTAP_ERR_UNSUPPORTED is expected to include an err_info string;
    WTAP_ERR_UNSUPPORTED_ENCAP isn't.  In the trunk, we use a new error code
    for that, and supply and process the err_info string; here, we just use
    WTAP_ERR_UNSUPPORTED_ENCAP, so we don't have to make as extensive changes.
    
    Change-Id: Iaba47c409f9fd0d2edef3386d5d930dd2e370cab
    Reviewed-on: https://code.wireshark.org/review/5825
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 13227a0
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Dec 17 12:38:48 2014 -0800

    This code is used in Wireshark, not TShark; fix messages.
    
    Change-Id: I3c6b7686de478e42eeeb9c51c8bdb5b6843666af
    Reviewed-on: https://code.wireshark.org/review/5814
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit db4232a69a0196c7cafab1afae9b2f45f58e4ebe)
    Reviewed-on: https://code.wireshark.org/review/5816

commit 7849e6b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Dec 17 11:53:13 2014 -0800

    Fix another incorrect message for WTAP_ERR_UNSUPPORTED.
    
    WTAP_ERR_FILE_UNKNOWN_FORMAT is reported if the file is in a format that
    libwiretap doesn't know about (either because it's not a capture file at
    all or because it's a capture file in a format it doesn't support).
    WTAP_ERR_UNSUPPORTED is for files in a *known* format that are using
    features or file format elements (record type, link-layer header type,
    etc.) that libwireshark doesn't support.  Fix another copy-and-pasteo
    causing WTAP_ERR_UNSUPPORTED to be reported with a message appropriate
    for WTAP_ERR_FILE_UNKNOWN_FORMAT.
    
    Change-Id: Ib35e2a6b6c62517887e0386f0fed1795db335439
    Reviewed-on: https://code.wireshark.org/review/5810
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit e00f5852960163a1427487e3f0df7c7473b53a6d)
    Reviewed-on: https://code.wireshark.org/review/5812

commit 982393b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Dec 17 00:47:31 2014 -0800

    Report WTAP_ERR_UNSUPPORTED correctly.
    
    WTAP_ERR_FILE_UNKNOWN_FORMAT is reported if the file is in a format that
    libwiretap doesn't know about (either because it's not a capture file at
    all or because it's a capture file in a format it doesn't support).
    WTAP_ERR_UNSUPPORTED is for files in a *known* format that are using
    features or file format elements (record type, link-layer header type,
    etc.) that libwireshark doesn't support.  Fix some copy-and-pasteos
    causing WTAP_ERR_UNSUPPORTED to be reported with a message appropriate
    for WTAP_ERR_FILE_UNKNOWN_FORMAT.
    
    Change-Id: Ic675ffd501c52838d8944a6c61e1b01041b73098
    Reviewed-on: https://code.wireshark.org/review/5799
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d2eddde5bd84ceb39bea77052848930c024d356b)
    Reviewed-on: https://code.wireshark.org/review/5801

commit 5315b31
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Dec 16 22:22:29 2014 -0800

    Use WTAP_ERR_UNSUPPORTED for input file stuff we can't handle.
    
    WTAP_ERR_UNSUPPORTED_ENCAP means "I can't *write* that particular
    encapsulation type to a file of this format", which mainly means "that
    file format simply can't handle packets of that type";
    WTAP_ERR_UNSUPPORTED means "this file can't currently be supported by
    Wireshark, as there's some feature in the file - such as a file or
    per-packet encapsulation type - that we don't (yet) handle".
    
    Change-Id: I7977a9eceef9b72d2fd8d2ec7b0bb63a1b62be19
    Reviewed-on: https://code.wireshark.org/review/5796
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 12fd114
Author: zeuz <czingerl@gmail.com>
Date:   Tue Dec 16 15:34:29 2014 +0100

    RDM: Mode verbose decoding of parameter IDs.
        -> I don't see why they were uint8; ANSI E1.33 and ANSI E1.20 use uint16
    
    Change-Id: Ia2c024b503d6a4b8c18020699bdc676a8459dcbd
    Reviewed-on: https://code.wireshark.org/review/5783
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit db93414049b3094734e33a0da49f611c2a211410)
    Reviewed-on: https://code.wireshark.org/review/5785

commit be343af
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Aug 21 00:35:38 2014 -0700

    Don't assert out on tvb_memcpy() with a null data pointer if the length is 0.
    
    If the length is 0, there's nothing to copy, so it doesn't matter if
    there's no data to copy from.  This fixes problems caused by allocating
    a zero-length buffer and using that as the data for a tvbuff; the
    allocation returns null, so the data pointer is null.
    
    Bug: 9332
    Change-Id: I8037ae4b96d30e90a716852bb7e22d3980444f83
    Reviewed-on: https://code.wireshark.org/review/3761
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 66318ad5eb8235e73e66acee372df7c47cfea8bd)
    Conflicts:
    	epan/tvbuff.c
    Reviewed-on: https://code.wireshark.org/review/5773
    Reviewed-by: Michael Mann <mmann78@netscape.net>

commit fd7e355
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 14 08:09:44 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-12-14]
    
    Change-Id: I0cf0830ee4648b7d9bd7d14bd9ac6c0c662d0c0c
    Reviewed-on: https://code.wireshark.org/review/5760
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit f0929ec
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Wed Dec 10 21:48:22 2014 +0100

    LCSAP: fix dissection of negative longitude and latitude
    
    Bug: 10767
    Change-Id: I4ab0ffd3bd22f1884895f3118673b433d980de2f
    Reviewed-on: https://code.wireshark.org/review/5704
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry-picked from commit 2f8030f85a0bfc584deee00a88761355ddd7f941)
    Conflicts:
    	epan/dissectors/packet-lcsap.c
    Reviewed-on: https://code.wireshark.org/review/5710

commit 1b45990
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Dec 7 13:53:07 2014 -0800

    Fix cut-and-pasteo.
    
    Change-Id: I56e5dd7f0887aa1a796aa23b28b686b65517c5d2
    Reviewed-on: https://code.wireshark.org/review/5665
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 725540f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Dec 7 12:50:26 2014 -0800

    1.10 didn't have WTAP_OPEN_ERROR.
    
    Change-Id: Iabffe20c8a81946e06f46764ad8aa97d36a88d9d
    Reviewed-on: https://code.wireshark.org/review/5663
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit acb0402
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Dec 7 12:17:48 2014 -0800

    Add checks for non-null-terminated strings.
    
    Change-Id: Idac4fe3e8523bb868bb89d62a456fd360cde54c8
    Reviewed-on: https://code.wireshark.org/review/5662
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit 0ed5e1a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 7 08:10:03 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-12-07]
    
    Change-Id: I62934ef79f1e15366205c07cfed216ce77e381c5
    Reviewed-on: https://code.wireshark.org/review/5649
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 72bd999
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Sun Nov 30 20:29:34 2014 +0100

    win32: use target file format when checking if it supports comments
    
    Bug: 10656
    Change-Id: Ib74f213630d6d382118c09b3cbf998b28cbc045e
    Reviewed-on: https://code.wireshark.org/review/5544
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 35b1bc5ec61260bc1890a2c991cdb7218946ae1f)
    Reviewed-on: https://code.wireshark.org/review/5546

commit 9cee3d9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 30 08:09:51 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-11-30]
    
    Change-Id: I1bca489de73fbbdc47cd90a27c0d1bb0a0a2bf3b
    Reviewed-on: https://code.wireshark.org/review/5541
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 336ccc1
Author: Evan Huus <eapache@gmail.com>
Date:   Tue Nov 25 20:27:07 2014 -0500

    dec-dnart: use pinfo-scoped memory for addresses
    
    They may be accessed during the print phase, at which point packet-scope memory
    has already been freed.
    
    Bug: 10724
    Change-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7
    Reviewed-on: https://code.wireshark.org/review/5499
    Reviewed-by: Michael Mann <mmann78@netscape.net>

commit 4fc25f5
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Mon Nov 24 15:51:27 2014 +0100

    SMTP: escape ASCII strings printed to COL_INFO
    
    This is already done automatically for the hf entries thanks to hfinfo_format_text() function
    
    Bug: 10536
    Change-Id: I9ee56b795234a94f0e59c82a96e3e6cedf71c4e6
    Reviewed-on: https://code.wireshark.org/review/5459
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 78849d0e6b0dde760c8bea40ce99e7a05711f3bf)
    Conflicts:
    	epan/dissectors/packet-smtp.c
    Reviewed-on: https://code.wireshark.org/review/5470

commit a1244a6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 23 08:09:31 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-11-23]
    
    Change-Id: I32ce84e2070ce9aac18a49e47c3462185d06b101
    Reviewed-on: https://code.wireshark.org/review/5452
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit dea2fd7
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Wed Nov 19 20:10:15 2014 +0100

    IrDA: always initialize buffer before accessing it
    
    Bug: 10716
    Change-Id: I8e54f750b70076758d5fd0d7f35f9c782f5d0bf9
    Reviewed-on: https://code.wireshark.org/review/5398
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit f7f19f029190bedb9cea60d565b0d9c4261e154e)
    Reviewed-on: https://code.wireshark.org/review/5409

commit 462e7e2
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Mon Nov 17 23:22:08 2014 +0100

    MIPv6: display Experimental Mobility Message Data as such
    
    Bug: 10703
    Change-Id: I9b16f503418d7464234be3c772b5dae3fb5eb7a9
    Reviewed-on: https://code.wireshark.org/review/5378
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit 36837a2f5a340af6206dedf0245b4687fcc53254)
    Reviewed-on: https://code.wireshark.org/review/5382

commit 4ca697c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Nov 17 13:34:48 2014 -0800

    voip_calls: Fix MTP3 & SUA taps.
    
    Fix the registration of M3UA and remove SUA.
    
    Change-Id: I7431c980403730bf6e53fa5be84fe85f15c106de
    Reviewed-on: https://code.wireshark.org/review/5375
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit ae51d109bbf64d02c39a684228ec193f287f5110)
    Reviewed-on: https://code.wireshark.org/review/5376

commit 5deaeed
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Mon Nov 17 21:59:14 2014 +0100

    DECT: ensure that bfield_data buffer is always fully initiated
    
    Bug: 10710
    Change-Id: I444bc4ff7e542a8aa5ac8e20bac44a823ac74cfd
    Reviewed-on: https://code.wireshark.org/review/5371
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit da69b51c9e1c9e97860e8a48856acdd3ab381c07)
    Reviewed-on: https://code.wireshark.org/review/5374

commit 8061eaf
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 16 08:15:39 2014 -0800

    [Automatic manuf, services and enterprise-numbers update for 2014-11-16]
    
    Change-Id: Icc4dbff45fb2461a27642121f463b820ce400984
    Reviewed-on: https://code.wireshark.org/review/5348
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit e7b38d7
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Fri Nov 14 10:07:52 2014 +0100

    NAS EPS: fix dissection of APN AMBR IE when first byte is set to 0xFE
    
    Bug: 10699
    Change-Id: I0f359639d5836f557370ab6d6aad45faa4417b6e
    Reviewed-on: https://code.wireshark.org/review/5285
    Tested-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit e83c7f08f7b3b3be9f70012dff3d59beaecdd0f1)
    Reviewed-on: https://code.wireshark.org/review/5296

commit 6a9d923
Author: Michael Mann <mmann78@netscape.net>
Date:   Thu Nov 13 20:37:46 2014 -0500

    Multipath TCP checksum requires M flag set as well as enough option length.
    
    Bug: 10692
    Change-Id: I8d9874a2c0a6b98497d43804bcf27a8c7e152a9b
    Reviewed-on: https://code.wireshark.org/review/5275
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    Petri-Dish: Michael Mann <mmann78@netscape.net>
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    (cherry picked from commit 6e535a8b7143dd61f59fa0680692c94a0d22e916)
    Reviewed-on: https://code.wireshark.org/review/5280

commit 77f9f66
Author: Michael Mann <mmann78@netscape.net>
Date:   Thu Nov 13 22:38:54 2014 -0500

    Always create a subtree for Mobility options, even if it doesn't have a specific dissection function.
    
    Bug: 10618
    Change-Id: Ic4d52485a6bd96f906b4a0d61b75a31bfad4e8f8
    Reviewed-on: https://code.wireshark.org/review/5276
    Reviewed-by: Michael Mann <mmann78@netscape.net>
    (cherry picked from commit 4a7dd620125f1b8711c70f9dbfe78ba1145e31e3)
    Reviewed-on: https://code.wireshark.org/review/5278
