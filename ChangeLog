commit 387f5f1c57
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 17 08:39:35 2020 +0000

    [Automatic update for 2020-05-17]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Id7b7631eace09d34776ea1de6cdcbde73760bc5c
    Reviewed-on: https://code.wireshark.org/review/37240
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 8c87f17473
Author: Guy Harris <gharris@sonic.net>
Date:   Sat May 16 15:31:02 2020 -0700

    isobus-vt: update with information from the spec.
    
    It's ISO 11783-6, and the spec agrees with the previous change.
    
    Change-Id: Iac8dd83a7844c59bcc1b74cd0712bc5f38b3ae43
    Reviewed-on: https://code.wireshark.org/review/37218
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit e34f760f285b13d1267c721ae11882241a6a3f3b)
    Reviewed-on: https://code.wireshark.org/review/37230

commit 7def211934
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Mon Apr 13 23:28:26 2020 +0700

    GSM/SMS: clarify 'no error' values of TP-Status IE
    
    In case of successfull delivery, TP-Status IE looks as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: Short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    in particular, "Error: Short message transaction completed" looks
    confusing. Let's make it a bit cleaner:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: No error, short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    Change-Id: I95830877c1ff2f45e3c68a40febcf357abda597d
    Reviewed-on: https://code.wireshark.org/review/36829
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 514706b1f87c0a1a45eff4d91d31faec6a9d9323)
    Reviewed-on: https://code.wireshark.org/review/37229
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 9d86aa3128
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Mon Apr 13 22:47:10 2020 +0700

    GSM/SMS: decouple error and reason fields in TP-Status IE
    
    According to 3GPP TS 23.040, section 9.2.3.15, the TP-Status IE
    indicates the status of a previously submitted SMS-SUBMIT and
    certain SMS COMMANDS for which a Status-Report has been requested.
    
    Currently Wireshark dissects this IE as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .000 0000 = Error: Short message transaction completed (0)
          .000 0000 = Reason: Short message received by the SME (0)
    
    so it's not clear how exactly both Error and Reason are derived
    from 7 less-significant bits of the first (and the last) octet.
    
    As can be seen from the section 9.2.3.15, two less-significant
    bits of those 7 define the Error, while the remaining 5 bits
    define the Reason.
    
    With this change applied, dissected TP-Status IE looks as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: Short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    To achieve this, type of the 'dis_field_st_error_rvals' was changed
    from 'range_string' to 'value_string', and the range / string array
    'dis_field_st_reason_rvals' was split into 4 arrays corresponding
    to 4 possible Error values.
    
    Change-Id: I8418ae3532c5e4b0ad2c956c5cd8cd90767d2fd6
    Reviewed-on: https://code.wireshark.org/review/36828
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit fd19f39bf2b54ac61c1a8bf10fbb6b234e91091e)
    Reviewed-on: https://code.wireshark.org/review/37228
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 890eca6b83
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Apr 3 09:50:11 2020 +0200

    GSM SMS: fix gsm_sms_tp_failure_cause_values array definition
    
    Change-Id: I3622e824592b66144fe4e1be3c82bf5e207aaf43
    Reviewed-on: https://code.wireshark.org/review/36677
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 37831185f0f88b5dd1c7c9d33ef1a4f2563fecc3)
    Reviewed-on: https://code.wireshark.org/review/37227
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit bcd1a92b41
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Sat May 9 15:19:22 2020 +0100

    GSM-SMS: add missing increment of offset.
    
    Fixes bug introduced in
    https://code.wireshark.org/review/#/c/37160/
    
    Change-Id: I70620dcdf1e1354b9a377a8e755da3a7baa35f6c
    Reviewed-on: https://code.wireshark.org/review/37172
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit a32298b7f6dd0e411b4774334f32ede775e402b4)
    Reviewed-on: https://code.wireshark.org/review/37226
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit eb85bf5971
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Thu May 7 18:25:35 2020 +0100

    More PVS-Studio issues flagged by Valerii Zapodovnikov.
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-frame.c        818     warn    V547 Expression 'fi' is always true.
    /opt/SourceCode/wireshark/epan/dissectors/packet-gsm_sms.c      2692    warn    V547 Expression 'length <= (offset - saved_offset)' is always false.
    /opt/SourceCode/wireshark/epan/dissectors/packet-isup.c 4688    warn    V1037 Two or more case-branches perform the same actions. Check lines: 4688, 4697
    /opt/SourceCode/wireshark/extcap/androiddump.c  1237    warn    V560 A part of conditional expression is always true: data_str.
    /opt/SourceCode/wireshark/extcap/androiddump.c  1603    warn    V547 Expression is always true.
    /opt/SourceCode/wireshark/ui/qt/models/packet_list_model.cpp    497     warn    V560 A part of conditional expression is always true: ok_r1.
    
    For the voip_calls.c change, I preferred to initailize along with every other field, rather than set to actual value it gets set to later.
    
    For the isobus-vt change, I could not find a spec but followed the pattern from other error bit fields.
    
    Bug: 16335
    Change-Id: Ie55082222b582f6fff4e8c7a992d863acee6cf15
    Reviewed-on: https://code.wireshark.org/review/37160
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Reviewed-by: Martin Mathieson <martin.r.mathieson@googlemail.com>
    (cherry picked from commit 569f3bd6111cfebe2fcd62484d854a053b5c9636)
    Reviewed-on: https://code.wireshark.org/review/37225
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit b36232d585
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Thu May 14 23:16:05 2020 +0200

    Radius: Fix NULL pointer call
    
    Check length before calling tvb_bytes_to_str()
    
    Bug: 16564
    Change-Id: I3cfb91d5da5f6f620f8f48c55fb3837ebe70972c
    Reviewed-on: https://code.wireshark.org/review/37200
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit b5dc967c7924a3bd4326099c2939f3bb068a1c35)
    Reviewed-on: https://code.wireshark.org/review/37205
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit 71307c3f85
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 10 18:44:31 2020 +0000

    [Automatic update for 2020-05-10]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Idb21cf6cf0835066109cbffe836da424c044d6d6
    Reviewed-on: https://code.wireshark.org/review/37175
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 51260d32dc
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 21:23:36 2020 -0700

    Infiniband: skip past the undissected vendor header.
    
    In parse_VENDOR() get the length of the raw data (presumed to be
    vendor-specific data) by using proto_tree_add_item_ret_length(), and add
    that to the offset.
    
    Should addresses PVS-Studio complaint
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-infiniband.c   2782    warn
    V1048 The '* offset' variable was assigned the same value.
    
    Change-Id: Icac567e3ef2ad0484aaa111e5bc8a5cd83d9d8a5
    Reviewed-on: https://code.wireshark.org/review/37143
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c5215707d47082c1de2459dc9d1e4be7ad2d974e)
    Reviewed-on: https://code.wireshark.org/review/37145

commit c38d416101
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 18:03:26 2020 -0700

    pcapng (dissector): don't assume the endianness doesn't change.
    
    Keep the endianness (as an ENC_ value) in the info structure we use
    while dissecting.
    
    When dissecting an SPB, peek ahead at the byte-order magic before
    dissecting the block length, to determine the byte order of all fields
    in that block *and* all other blocks in that section.  Report an error
    and stop dissecting if the byte-order magic isn't valid.
    
    Change-Id: I6d94d4fad10d60f327f4a486e180cdcee2f6be2d
    Reviewed-on: https://code.wireshark.org/review/37138
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (backported from commit b99a0c95d8c3fec834da0b7be27b2fc385054646)
    Reviewed-on: https://code.wireshark.org/review/37140

commit 1c1f9b3cae
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 14:27:58 2020 -0700

    Fix calculation of fractional part of time stamps.
    
    Do it the same way that wiretap/pcapng.c does it.
    
    Bug: 16440
    Change-Id: Ied811e5d10d4219de718f4f74254440b324f0ed1
    Reviewed-on: https://code.wireshark.org/review/37132
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 432cb2070718cd5d3aa2e485a91d8a8d32485e10)
    Reviewed-on: https://code.wireshark.org/review/37134

commit 28281a7bd9
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 12:19:31 2020 -0700

    pcapng: fix build in older releases.
    
    The proto_item_set_generated() inline function wasn't in pre-3.2
    releases; use the PROTO_ITEM_SET_GENERATED() macro.
    
    Change-Id: I013ce7c50a5360802ffd81fbfbec4e559dbd0eb0
    Reviewed-on: https://code.wireshark.org/review/37127
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 2febe85b33
Author: David Perry <boolean263@protonmail.com>
Date:   Mon May 4 08:50:45 2020 -0400

    MIME/pcapng: use snap length to get SPB data length
    
    The "Original Packet Length" field of a Simple Packet Block can be
    greater than the amount of data actually captured; the Interface
    Description Block's snap length must be checked as well.
    
    To enable this in the MIME Files Format dissector, the
    `interface_description` needs to store the snap length. This allows the
    appropriate section of `dissect_block()` to access it via the `info`
    parameter.
    
    The "Captured Length" field from EPB/PB dissection is added to SPB
    dissection as a generated field to clarify the difference between it and
    the field labelled "Packet Length".
    
    Bug: 16526
    Change-Id: I27f2fccc9ed2f682377059931b18d7e42d7ff0a3
    Reviewed-on: https://code.wireshark.org/review/37095
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 5b238a6c76634712c09e355c7945721a3a0ae8f1)
    Reviewed-on: https://code.wireshark.org/review/37125

commit 8fa068d7fb
Author: David Perry <boolean263@protonmail.com>
Date:   Mon May 4 08:38:05 2020 -0400

    MIME/pcapng: reset interface array on new SHB
    
    When reading a new SHB in a pcapng file, reset the array of interface
    descriptions to empty. No blocks that follow will be referring to
    interfaces from the previous section.
    
    Ping-Bug: 16526
    Change-Id: Iaa4257e3392bb829445aab1f79b54334f5db0263
    Reviewed-on: https://code.wireshark.org/review/37092
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c143dfa5446a08fb5fe00202bb80a94bf0cb14a7)
    Reviewed-on: https://code.wireshark.org/review/37122

commit e898ee70ce
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 8 01:19:33 2020 -0700

    Add additional checks, clean up some stuff.
    
    Add checks for bad block lengths - either too short or not a multiple of
    4.  (Yes, the pcapng spec requires it to be a multiple of 4.  And there
    is at least one implementation that requires it.)
    
    For various structures with a length field, create the top-level tree
    field for the item with a "run to the end of the packet" length and,
    once we're finished dissecting it, set the length to its actual value.
    
    Fetch various field values using proto_tree_item_add_uint.  Fix some
    incorrect field types based on errors reported by that.
    
    If an end-of-options option has a non-zero length, 1) don't treat it as
    not an end-of-options option and 2) report an error on its length.
    
    Change-Id: I72b2c065f3e3c76d5b71a1cd2ef3c1f497623266
    Reviewed-on: https://code.wireshark.org/review/36746
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 0d2e6033ecad9c1e33239b5976a7c1b356fe4173)
    Reviewed-on: https://code.wireshark.org/review/37118

commit 250fc9f14b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Mar 27 19:40:32 2020 -0700

    Remove space that snuck in during editing.
    
    Change-Id: Iea196ecb3c236c5257ce57fcff1401a6386c95f9
    Reviewed-on: https://code.wireshark.org/review/36601
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 5e77ab8b9512519c7e975bbbac264a2241904bc6)
    Reviewed-on: https://code.wireshark.org/review/37115

commit 9cc26618b3
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Mar 27 19:34:18 2020 -0700

    Add support for IDB option 15 - if_hardware, for hardware description.
    
    While we're at it, use decimal, rather than hex, for option numbers;
    they're given in decimal in the pcapng spec.
    
    And fix a typo.
    
    Change-Id: I2a6e857a29d5bcb6533b8f5aef00711dd57e6df5
    Reviewed-on: https://code.wireshark.org/review/36600
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f9cf25f7df071fe4db4c648e84476d9eef48796c)
    Reviewed-on: https://code.wireshark.org/review/37112

commit 746a249380
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 15:28:11 2020 -0700

    pcapng: pull the interface ID handling into a single routine.
    
    Have a routine that takes an interface ID as an argument and:
    
            if it's within range, fetches the interface description and
            returns a pointer to it;
    
            if it's not within range, adds an expert info and returns NULL;
    
    and have the code to dissect blocks with interface IDs just call it.
    
    Change-Id: I705fe94a9a5fb5a27650465f3c55e0dc1b6fbd23
    Reviewed-on: https://code.wireshark.org/review/37090
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f3ddcb96a369472cde3c83f26ff747d5772b8e3a)
    Reviewed-on: https://code.wireshark.org/review/37110

commit e2d48d5209
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 11:16:58 2020 -0700

    pcapng: fix more interface ID checks.
    
    Fix the check for the Interface Statistics Block as well.
    
    Make the check for the Simple Packet BLock similar to the other checks -
    at the beginning, set interface_id to 0 and then check interface_id
    against the size of the array.
    
    Change-Id: Ib05255fe13eca6292447f365b62ff3094805bd4a
    Reviewed-on: https://code.wireshark.org/review/37071
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 60622e63fd561830e1de24e28ae4e5f7952ed130)
    Reviewed-on: https://code.wireshark.org/review/37107

commit 9a2f2d7b91
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 10:54:49 2020 -0700

    pcpang: fix test for missing IDB.
    
    *Any* packet block can have an invalid interface ID; that's not just an
    error in the first packet block.
    
    For Enhanced Packet Blocks and Packet Blocks, you can have an invalid
    interface ID even if you've already seen one or more Interface
    Description Blocks; you have to check whether the interface ID is >= the
    number of IDBs we've seen.
    
    Change-Id: I33268d224ef3ad928ad9c000027fb6783806b978
    Reviewed-on: https://code.wireshark.org/review/37070
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 29340f1b33db6f3abb4bdd80a949430d20020d7d)
    Reviewed-on: https://code.wireshark.org/review/37104

commit 37180ebc2f
Author: David Perry <boolean263@protonmail.com>
Date:   Thu Apr 30 08:32:44 2020 -0400

    pcapng: expert info when packet or ISB appear without interfaces
    
    A valid pcapng file must have an IDB before any EPB/SPB/PB/ISB. So check
    our interface count when we parse the first such block of a section, and
    add expert info if there are no interfaces.
    
    Discovered during work on Bug #16526.
    
    Ping-Bug: 16526
    Change-Id: I23ff452fd163a0e4472e0658a905f85ab85d5e9d
    Reviewed-on: https://code.wireshark.org/review/36986
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 1a9c5364d18b32c5fef72c0bcb3ea2095e60d8b0)
    Reviewed-on: https://code.wireshark.org/review/37101
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 245b626130
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 13:56:37 2020 -0700

    Generate a dummy description if we don't have an interface name.
    
    Just have a display name and description of "(Unknown)" if we have no
    display name, no description, *and* no interface name.
    
    Change-Id: I8403779c17c1e6d96d5ba29941081f560ad5339c
    Reviewed-on: https://code.wireshark.org/review/37086
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c9735a3da9f6bc715476bfd85941936ffebae414)
    Reviewed-on: https://code.wireshark.org/review/37088

commit 50a6a1cd81
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 13:04:49 2020 -0700

    Clean up some issues with get_iface_list_string().
    
    Remove an assignment of NULL to a variable when it's in a branch of code
    where the variable's already known to be NULL.  Found by PVS-Studio.
    
    Pull get_display_name_for_interface() into the one place it's used.
    That:
    
        allows us to eliminate a test as, inside the loop where it's called,
        the loop index is what's passed to it, and the loop tests whether
        it's in range, so the test will never fail;
    
        means we just set interface_opts once, for both of the places it's
        used.
    
    Then we fix that code so that it sets interface_opts->descr to a
    generated descriptive name if it *is* null, rather than if it's *not*
    null.
    
    That should clean up some issues found by 1) PVS-Studio and 2) me.
    
    Change-Id: I4188ca8f5c7306477ef11117016691d1c9f0267f
    Reviewed-on: https://code.wireshark.org/review/37082
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit bd963200cef84df076af8e8b169fc9af0edbd2d8)
    Reviewed-on: https://code.wireshark.org/review/37084

commit 49c7d78dba
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 11:56:44 2020 -0700

    pcapng: show some fields in decimal, not hexadecimal.
    
    The interface ID is just an ordinal; there's no reason to show it as hex
    (we don't show it as hex if we're treating a pcapng file as a capture
    rather than a file to be dissected).
    
    The packet drops count is just a count, so, again, there's no reason to
    show it as hex.
    
    The hash algorithms numbers are given in decimal in the pcapng spec, so
    display it as decimal.
    
    Change-Id: I93fd50e7243a5b012bd29324f7116e634aca62af
    Reviewed-on: https://code.wireshark.org/review/37072
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 90fdb71bf6cb22db6728a88f6a61ea44d9779f71)
    Reviewed-on: https://code.wireshark.org/review/37080

commit fa65578bfa
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat May 2 17:08:49 2020 +0100

    voip_calls: Fix leak of GString from unistim handling.
    
    /opt/SourceCode/wireshark/ui/voip_calls.c       3786    err     V773 The function was exited without releasing the 'g_tmp' pointer. A memory leak is possible.
    
    Tested with unistim_call.pcap from SampleCaptures.
    
    Bug: 16335
    Change-Id: I8518a3e277e8acec15e09ca5f36672b5bdd181fe
    Reviewed-on: https://code.wireshark.org/review/37028
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 0b1e27ec774b65c157dd2f5de387f73a25ae306e)
    Reviewed-on: https://code.wireshark.org/review/37077

commit 56ff9e5940
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sun May 3 13:15:52 2020 +0100

    Some more issues identified by PVS-Studio.
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-osc.c  367     err     V562 It's odd to compare 0 or 1 with a value of 0.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  960     note    V576 Incorrect format. Consider checking the eighth actual argument of the 'proto_tree_add_subtree_format' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  980     note    V576 Incorrect format. Consider checking the third actual argument of the 'proto_item_append_text' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2473    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_prepend_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2482    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_append_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2633    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_append_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2650    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_prepend_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-stun.c 565     warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/epan/dissectors/packet-umts_fp.c      4126    warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/epan/dissectors/packet-umts_fp.c      4942    warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/ui/voip_calls.c       1444    err     V773 The 'comment' pointer was assigned values twice without releasing the memory. A memory leak is possible.
    /opt/SourceCode/wireshark/wsutil/filesystem.c   1531    err     V773 The function was exited without releasing the 'files' pointer. A memory leak is possible.
    /opt/SourceCode/wireshark/wsutil/filesystem.c   1717    err     V773 The function was exited without releasing the 'files' pointer. A memory leak is possible.
    
    Bug: 16335
    Change-Id: I8df3ba6d070823dcb43c4152d9156358f701e8dc
    Reviewed-on: https://code.wireshark.org/review/37069
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 6ba8bd037f46b7dbb0e82ca79ad1d0cfbbe0eda9)
    Reviewed-on: https://code.wireshark.org/review/37074

commit 9733917d7f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 3 08:23:06 2020 +0000

    [Automatic update for 2020-05-03]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I6a40c6eaeee3edfadc7f9bf83ac022dec45390e8
    Reviewed-on: https://code.wireshark.org/review/37065
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit bfbbc3571f
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sun May 3 00:33:51 2020 +0100

    Fix some issues seen with a fresh run of PVS Studio
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-aoe.c  328     warn    V581 The conditional expressions of the 'if' statements situated alongside each other are identical. Check lines: 323, 328.
    /opt/SourceCode/wireshark/epan/dissectors/packet-aprs.c 1148    warn    V1037 Two or more case-branches perform the same actions. Check lines: 1148, 1161
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  3385    warn    V547 Expression 'conversation == NULL' is always true.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort-config.c 465     note    V576 Incorrect format. Consider checking the fourth actual argument of the 'g_snprintf' function. Under certain conditions the pointer can be null.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort.c        630     warn    V768 The variable 'condition' is of enum type. It is odd that it is used as a variable of a Boolean-type.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort.c        969     warn    V547 Expression '!attempt_match' is always false.
    
    Bug: 16335
    Change-Id: I93bbc40f0467ebaab74335f6edc7d60e1c600a94
    Reviewed-on: https://code.wireshark.org/review/37044
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (backported from commit b99dcf0593e105bf46603e714d295b04b72c28bd)
    Reviewed-on: https://code.wireshark.org/review/37060
    Petri-Dish: Guy Harris <gharris@sonic.net>

commit d3ea06cf4f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 17:35:31 2020 -0700

    stats_tree: plug a memory leak.
    
    Don't allocate the GString until we know we'll be using it.
    
    Change-Id: I97e2f897795ada864cbacc3822d39e7348a93ca2
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37048
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c22b2ccd94e4e0e5f71e2cb6bae5b9e2abe7ebf4)
    Reviewed-on: https://code.wireshark.org/review/37057

commit e6b1354d06
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat Feb 15 23:00:17 2020 +0000

    More issues spotted by PVS-Studio in bug 16335.
    
    Only the change to packet-imap.c really represents a bug.
    
    Change-Id: Ie270f97f3d94c338ea3c84a712f8f4d43ffd36f4
    Reviewed-on: https://code.wireshark.org/review/36115
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (backported from commit 7e02165453f78dc2196d66d6167d8fdeebdf2cb3)
    Reviewed-on: https://code.wireshark.org/review/37053
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 78ea376f42
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Fri Feb 14 21:13:56 2020 +0000

    Some issues spotted by PVS-Studio in bug 16335.  Many more remain
    
    Change-Id: If856e25af8e33eeef5b9e595f1f6820459892b17
    Reviewed-on: https://code.wireshark.org/review/36110
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (backported from commit e30f0d09208b01a7dd3d685b612110d16683f045)
    Reviewed-on: https://code.wireshark.org/review/37050
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 52d81a9979
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 16:11:04 2020 -0700

    prefs: plug a memory leak.
    
    Don't allocate the cols_hidden GString until we know we need it.
    
    Change-Id: I02966d2820efeb5d61d259a567bf9063d8b519f1
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37043
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit bab7b8d638ba0ac6901d4295586d1f9865cbbb76)
    Reviewed-on: https://code.wireshark.org/review/37046

commit 8d48b90ee8
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 15:25:02 2020 -0700

    epan/color filters: plug a memory leak.
    
    Change-Id: Ibda5266e6b6a612cf7add319dcb8e3da93b57da0
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37038
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 95073e299c652df8e8c48613bbb47d21d073b623)
    Reviewed-on: https://code.wireshark.org/review/37041

commit 3b063058ec
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 14:53:48 2020 -0700

    epan DTD parser: don't leak the full path string on error.
    
    While we're at it, fix a return - the return value is a pointer, with
    NULL meaning error, not a Boolean, with FALSE meaning error, so return
    NULL, not FALSE.
    
    Change-Id: Ie77fe2c6173293a2a202ad29a6c5033e2a401aa7
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37033
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 3618aa2cc68eeb7b9d0ab52a388f74eee382d09d)
    Reviewed-on: https://code.wireshark.org/review/37036

commit 5b62910e54
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat May 2 16:55:56 2020 +0100

    Fix memory leak in export_object.c
    
    /opt/SourceCode/wireshark/epan/export_object.c  106     err     V773 The function was exited without releasing the 'ext_str' pointer. A memory leak is possible.
    
    Bug: 16335
    Change-Id: Ic4811dabe2de9f9e7793f276336d2a87665e5791
    Reviewed-on: https://code.wireshark.org/review/37027
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 4067652c86aa84e13cc76785e03be2f1fc2615d8)
    Reviewed-on: https://code.wireshark.org/review/37031

commit ce2ce0953c
Author: João Valverde <joao.valverde@tecnico.ulisboa.pt>
Date:   Thu Apr 30 16:43:50 2020 +0100

    CMake: Fix FindGLIB2 for saner output
    
    Apparently FindPackageHandleStandardArgs uses if(DEFINED ...) to test
    VERSION_VAR, for somewhat obscure reasons. If we didn't find a suitable
    GLib package we must not define GLIB2_VERSION, otherwise the status
    output is confused and just generally wrong.
    
    Change-Id: Iad4012e69a7c641c50d1e399bbfdb51583cb3b40
    Reviewed-on: https://code.wireshark.org/review/36990
    Reviewed-by: João Valverde <j@v6e.pt>
    Petri-Dish: João Valverde <j@v6e.pt>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 3a32757313e85368e88fdd9dbb82f839514569f5)
    Reviewed-on: https://code.wireshark.org/review/37018

commit c367fbd5dd
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri May 1 14:24:05 2020 -0700

    mpeg: make sure the presence flags are set.
    
    The time stamps are calculated by sequential processing, not read from a
    value in the packet record, so we don't supply them when reading
    randomly.  Make sure the presence flags are 0 in that case (our callers
    currently don't look at time stamps when reading randomly, because
    some other file formats also don't supply time stamps for random reads,
    but we should make it clean).
    
    Change-Id: I494acc5bdf60e0a1de5cf002c3ea8403afce8a07
    Reviewed-on: https://code.wireshark.org/review/37008
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f35865428b3a14d8aac47db78e2f59c5b1f1df53)
    Reviewed-on: https://code.wireshark.org/review/37010

commit 5064830e42
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri May 1 14:19:14 2020 -0700

    camins: make sure the presence flags are set.
    
    The time stamps are calculated by sequential processing, not read from a
    value in the packet record, so we don't supply them when reading
    randomly.  Make sure the presence flags are 0 in that case (our callers
    currently don't look at time stamps when reading randomly, because
    some other file formats also don't supply time stamps for random reads,
    but we should make it clean).
    
    Change-Id: Ic035cc7d4eb36f76beefcfd98a389af09365d363
    Reviewed-on: https://code.wireshark.org/review/37004
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f0db07421f20b50f0630198cb249f37368b89186)
    Reviewed-on: https://code.wireshark.org/review/37006

commit 8c667d846c
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 29 18:20:12 2020 -0700

    pcapng: give a structure member an appropriate name.
    
    An entire pcapng file is dissected as a unit, so there's only one file;
    the "file_number" field counts Section Header Blocks, so it's a section
    number, not a file number.  Rename it to "section_number".
    
    Change-Id: I3ee477c9aa0ee4cdfa7496935b2be915c31a4644
    Reviewed-on: https://code.wireshark.org/review/36977
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit faa43991842ca770d7111fa4792863c99ac4dfa8)
    Reviewed-on: https://code.wireshark.org/review/36979

commit 49dace5ec9
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 29 11:24:45 2020 -0700

    capinfos: fix absolute and relative time display.
    
    Make the buffers big enough to handle the largest possible time values
    you can get with a 64-bit time_t.
    
    Don't cast the seconds value to unsigned long; it's probably signed, and
    may not fit in an unsigned long (64-bit on an ILP32 or LLP64 platform),
    so cast it to gint64 and print using G_GINT64_MODIFIER followed by "d".
    
    Bug: 16519
    Change-Id: I3ab79dfa086d2c4dfb6b93eba8cef3bdce731731
    Reviewed-on: https://code.wireshark.org/review/36971
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 928bbf5984ee8b81e960c3d53c1d8d2e1bc2bdbf)
    Reviewed-on: https://code.wireshark.org/review/36973

commit 06d9c48f93
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Apr 24 13:21:02 2020 -0700

    Docs+help: Remove "-m".
    
    Support for the -m (monospace font) flag was removed from Wireshark in
    2.3/2.4 in g37252634c4. Remove it from the man page and help output.
    
    Conflicts:
            doc/wireshark.pod.template
            ui/commandline.c
    
    Change-Id: Idaafeb6cd30d7deea6086a065168c91affd6f0ad
    Reviewed-on: https://code.wireshark.org/review/36926
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    (cherry picked from commit dddb086f58db0825b959e4e7b4c2ccea11dc4d0b)
    Reviewed-on: https://code.wireshark.org/review/36950
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 26df31a47b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 26 08:47:31 2020 +0000

    [Automatic update for 2020-04-26]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I2b1893bf531b3f14a1107c00ece88f4f01e5f8ee
    Reviewed-on: https://code.wireshark.org/review/36947
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 4d646e5f25
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 26 01:42:46 2020 -0700

    false isn't defined in this release; use FALSE instead.
    
    Change-Id: Ia3cb9968fde22b322a93ed46930b7f20c9149a9d
    Reviewed-on: https://code.wireshark.org/review/36946
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit dcb2760553
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 26 00:55:13 2020 -0700

    nfs: Initialize the fs_cycle element of an nfs_name_snoop_t.
    
    It has to be initialized to false, otherwise you get random misreported
    cycles.
    
    Change-Id: I1ffa1f8fae4883960ebf0522e44bc9e1378b2470
    Reviewed-on: https://code.wireshark.org/review/36939
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 3abdb967aefc550de92f2ab0b5d3a49207b2ac58)
    Reviewed-on: https://code.wireshark.org/review/36941

commit af1b4cc2e8
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Apr 23 23:10:48 2020 -0700

    Check the validator in ExtArgText::isValid().
    
    The validator doesn't prevent the input focus from being transferred out
    of the QLineEdit, and it merely prevents the user from entering a value
    that's considered "invalid" rather than "not valid but "intermediate"".
    
    For QIntValidator(), values that have more digits than the maximum value
    are "invalid", but values that have the same number of digits but that
    are larger are just "intermediate".
    
    This means the user will be able to send such a value to the extcap
    module.
    
    So we explicitly check the validator in ExtArgText::isValid(), so that
    1) we provide visual feedback (at least to people who can detect a red
    background) for out-of-range values that don't have too many digits and
    2) prevent them from being treated as valid and passed to the extcap
    module.
    
    Bug: 16510
    Change-Id: Ie5b90cf5dbb57c91744f6a28a71674b65ef21bb6
    Reviewed-on: https://code.wireshark.org/review/36914
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit ba50c5a5f6b0edb6b06496de9c3f9d5b18f6cd1e)
    Reviewed-on: https://code.wireshark.org/review/36919
    Petri-Dish: Roland Knall <rknall@gmail.com>

commit e51423cf36
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 19 08:48:57 2020 +0000

    [Automatic update for 2020-04-19]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ief9fbb67274eae1dbc2d98a0b9e33f4135467770
    Reviewed-on: https://code.wireshark.org/review/36883
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 6b2844bfb7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Apr 14 17:10:44 2020 -0700

    NFS: Add filesystem cycle detection.
    
    Detect cycles and large depths when snooping full names.
    
    Bug: 16476
    Change-Id: I4cddf3d6e6c58d1d382a3ea3b3ed09644562c352
    Reviewed-on: https://code.wireshark.org/review/36847
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit fc6763989c7a7c4e4b0522b12b955e5a285d388a)
    Reviewed-on: https://code.wireshark.org/review/36854

commit 023c850530
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Apr 14 12:44:17 2020 -0700

    Release notes: The Windows installers now ship with Qt 5.12.8.
    
    Change-Id: I01df94b6efce24d587b9852a85585b972a6b0560
    Reviewed-on: https://code.wireshark.org/review/36844
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 36e5266fe7
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 14:55:52 2020 -0700

    Add record length checks.
    
    Make sure the summary record is large enough; if not, report it as a bad
    file.
    
    If it's *too* large, skip the added data.
    
    Clean up the length check for the header records - use sizeof, as we
    later use sizeof when subtracting the fixed length portion's length.
    
    Change-Id: I70697804eaa0cbbb1fb074eadf6457d237f26876
    Reviewed-on: https://code.wireshark.org/review/36814
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit ada1a5c770e00d087385e2ec870291d67e190959)
    Reviewed-on: https://code.wireshark.org/review/36816

commit a06033c012
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 14:36:29 2020 -0700

    Fix a comment.
    
    Change-Id: I91ba743029247c7fcfac11bdfe7fc15680ab4137
    Reviewed-on: https://code.wireshark.org/review/36810
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 1070d7b37634e419d239ab878f6759f055746f0d)
    Reviewed-on: https://code.wireshark.org/review/36812

commit 2f016ed865
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 13:26:59 2020 -0700

    Fix previous change.
    
    Get rid of leftover duplicate code setting up the wtap structure and
    private data before we've found a summary record.
    
    If we find no data records, break out of the loop, so we fall into the
    code that sets up the wtap structure and private data.
    
    Change-Id: I00652bb7f3cb52b6c7c2088c6dd5fe5ec9a012a7
    Reviewed-on: https://code.wireshark.org/review/36806
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit e80592b5ce443e6027a8f9a046b5e08af7f8ea6c)
    Reviewed-on: https://code.wireshark.org/review/36808

commit 85775d2fe4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 12 08:41:33 2020 +0000

    [Automatic update for 2020-04-12]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I7c68e98d5b06c1c85eab877a9de22ea30e5e3702
    Reviewed-on: https://code.wireshark.org/review/36801
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit b4ed0c4f29
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Apr 11 20:43:09 2020 -0700

    Fix the heuristic for checking whether it's a CAM Inspector file.
    
    wtap_read_bytes() returns TRUE on *success*, so if we're in the loop,
    the last read succeeded, and no error code was supplied.  When we *exit*
    the loop, the read didn't succeed; check for the status then.  If we got
    a short read, we ran out of file data, so check the heuristics (even if
    it's not an integral number of 2-byte blocks, treat it as a CAM
    Inspector file - it might have gotten cut short); if we got a real read
    error, report that to our caller.
    
    Bug: 16458
    Change-Id: Ia1e838006744dadbc2883459aec16d0d11b732e1
    Reviewed-on: https://code.wireshark.org/review/36795
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit d8615d27b4ff168bc438576ca94fd41192579256)
    Reviewed-on: https://code.wireshark.org/review/36797

commit 2661b339cc
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Apr 11 18:42:58 2020 -0700

    lanalyzer: Make sure a LANalyzer file has exactly one summary record.
    
    If it has none, we don't know what link-layer header type it has, nor do
    we have a start time to use for time stamps.
    
    If it has more than one, we don't know which one to believe.
    
    Bug: 16459
    Change-Id: I306ec45171f9de4643699a53a4d837f4f7750c69
    Reviewed-on: https://code.wireshark.org/review/36791
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit edf694393b7034530e2b5b7b5cd2da3322d10b6b)
    Reviewed-on: https://code.wireshark.org/review/36793

commit c93acb4961
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 8 18:00:38 2020 -0700

    3.0.10 → 3.0.11.
    
    Change-Id: Ia1914bbbee427f7b6177565074277f1728839cfd
    Reviewed-on: https://code.wireshark.org/review/36761
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
