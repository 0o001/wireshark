commit 87c44aad2a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 24 10:15:14 2023 -0700

    Build: 4.0.6

    [skip ci]

commit 07e00508d0
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed May 24 07:46:21 2023 -0400

    QUIC: Don't include data from other streams in Follow tap

    If the stream length flag is set, use that to bound the tvb that
    is sent to the follow tap.

    Also fix the QUIC follow multistream test expected results, since
    we shouldn't be including the padding that isn't part of the stream.

    Fix #19102

    (cherry picked from commit 6e7d1995827aa06604f13282f5974d5545ab08e7)

commit e18d0e3697
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 23 13:52:03 2023 -0700

    XRA: Fix an infinite loop

    C compilers don't care what size a value was on the wire. Use
    naturally-sized ints, including in dissect_message_channel_mb where we
    would otherwise overflow and loop infinitely.

    Fixes #19100

    (cherry picked from commit ce87eac0325581b600b3093fcd75080df14ccfda)

    Conflicts:
            epan/dissectors/packet-xra.c

commit 407dbea678
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 22 16:41:47 2023 -0700

    Prep for 4.0.6

commit ec51c52539
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 22 11:03:40 2023 -0700

    batadv: Initialize a variable before using it

    Make sure iv_ogm_packeth->tvlv_len is initialized before we use it.

    Blind attempt at fixing #19047

    (cherry picked from commit de593771de351220fa1422856f8f272faee4989c)

commit 11f082000d
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Mon May 22 10:41:03 2023 +0000

    usb-hid: fix typo for 0x33 (Rx), 0x40 (Vx), or 0x43 (Vbrx)

    use wrong labels/name: (Rz, Vz, Vbrz)

    Issue reported by Daniel Höpfl

    Closed: #19095

    (cherry picked from commit 7b2db3d6617fbc8d8d1cb81dacc561b65afc19ec)

commit 265cbf15a4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu May 18 13:52:48 2023 -0700

    RTPS: Fixup our g_strlcpy dest_sizes

    Use the proper dest_size in various g_strlcpy calls.

    Fixes #19085

    (cherry picked from commit 28fdce547c417b868c521f87fb58f71ca6b1e3f7)

commit 62646bff96
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 21 16:19:22 2023 +0000

    [Automatic update for 2023-05-21]

    Update manuf, services enterprise numbers, translations, and other items.

commit fbe9291d78
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat May 20 23:08:08 2023 -0400

    synphasor: Use val_to_str_const

    Don't use a value from packet data to directly index a value_string,
    particularly when the value string doesn't cover all possible values.

    Fix #19087

    (cherry picked from commit c4f37d77b29ec6a9754795d0efb6f68d633728d9)

commit d290bc8cac
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun May 21 07:49:43 2023 -0400

    Decode As: Don't crash on a (none) configuration entry

    Our current code doesn't allow truly disabling decoding via
    Decode As for something with a default handle through the GUI,
    but if the decode_as_entries configuration file has such an
    entry (which it could if edited manually), don't crash from
    attempting to lookup information about the NULL protocol handle
    to set a nonexistent preference.

    (cherry picked from commit de347765f57067fbd768d9faa6b5e5d13af2873e)

commit 585fcd45ec
Author: Eugène Adell <eugene.adell@gmail.com>
Date:   Sun May 21 10:38:16 2023 +0000

    TCP: don't mark Ports Reused when it is only a Retransmission

    (cherry picked from commit 8101d02c5e52d849c6b7ad43e2a04b985d1cf0ff)

commit 74017383c8
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 16:29:45 2023 -0700

    netscaler: add more checks to make sure the record is within the page.

    Whie we're at it, restructure some other checks to test-before-casting -
    it's OK to test afterwards, but testing before makes it follow the
    pattern used elsewhere.

    Fixes #19081.

    (cherry picked from commit cb190d6839ddcd4596b0205844f45553f1e77105)

commit d09ef45463
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri May 19 17:18:24 2023 -0400

    TCP: Don't reassemble out of order if the segments list doesn't exist

    If the OOO TCP preference is set, but the tcp analysis struct doesn't
    have the OOO segments, because the preference wasn't set when it
    was created, don't try to reassemble out of order.

    This is an indication of dissecting in an inconsistent state, with
    changed preferences but old conversation data created with the old
    preference settings. Hopefully it's just a temporary dissection
    from a GUI refresh.

    Related to #19079

    (cherry picked from commit cc2fe84bd08ec1295afa97b08fbcdac074ca73d7)

commit 1dde1c10c8
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed May 17 19:19:02 2023 -0400

    dumpcap: Don't write fake IDBs for pcapng interfaces

    When we have multiple capture sources, for each one that is a pcapng
    source and supplies its own IDBs, don't create a fake IDB with invalid
    linktype WTAP_ENCAP_UNKNOWN and write it to the output file.

    Instead, use the IDBs from the source, remapping them as necessary.
    For non-pcapng sources, store the output IDB interface ID and write
    EPBs using that, since now the input interface ID and the output
    interface ID are not necessarily the same, if some of the other
    sources are not pcapng.

    Update the capture tests that use multiple FIFO sources, because now we
    don't add two extra IDBs, one for each FIFO. Instead there are
    3 * 11 == 33 total IDBs.

    This prevents some various incompatibilites in Wireshark and other
    tools when a file has interfaces of more than one link type, and also
    has IDBs with an illegal WTAP_ENCAP_UNKNOWN link type.

    Fix #19080

    (cherry picked from commit 563307ff6bc8798e46725f22932220e5bfa33be1)

commit f5315d9b47
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 02:38:14 2023 -0700

    blf: don't ws_debug the value of *data_offset on an error.

    *data_offset has whatever value happens to be there, and it's not
    guaranteed to have been set to any useful value, especially when the
    first packet is being read.

    (cherry picked from commit 472fdc16458ac3108f9b3c5519391b2b02318fe3)

commit 0ed5b3fa55
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 01:52:25 2023 -0700

    blf: plug another leak-on-error.

    If inflate() fails, call inflateEnd() on the stream we initialized, to
    free up any dynamically-allocated data structures attached to it.

    (cherry picked from commit 9eee508103759859aeac47d646baaea022c4c46c)

commit a406326aaf
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 19 00:53:36 2023 -0700

    blf: plug some leaks on read errors.

    If we've allocated a buffer of compressed data or a buffer into which
    we're uncompressing that data, and we get an error, free those buffers.

    If we've allocated a buffer of compressed data, and we *don't* get an
    error reading or uncompressing that data, free it once we're finished
    uncompressing it.

    (cherry picked from commit e6a2976af6fcc01b236b785e96d123bad9333821)

commit 1a0d6517b9
Author: Guy Harris <gharris@sonic.net>
Date:   Thu May 18 23:57:43 2023 -0700

    blf: fix a case where an error wasn't being reported.

    If blf_pull_logcontainer_into_memory() gets a short read when reading co
    pressed data, report it as Yet Another Internal Error, so it doesn't get
    treated as an EOF by callers.

    Before the recent fixes, blf_pull_logcontainer_into_memory() just
    returned either "success" or "failure", and the latter was always turned
    into an internal error; the recent fixes let
    blf_pull_logcontainer_into_memory() return more information about the
    error, including returning whatever the error was from
    wtap_read_bytes_or_eof(), which could be WTAP_ERR_SHORT_READ, which, as
    per the above, got treated a an EOF.

    This all needs much reworking, with the help of something approximating
    a detailed description of the file format.

    (cherry picked from commit f10a66999bf10f76e1171c4d4c9e218592e6647b)

commit a53491b87b
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu May 18 18:06:36 2023 -0400

    MS-MMS: Use format_text_string()

    The length of a string transcoded from UTF-16 to UTF-8 can be
    shorter (or longer) than the original length in bytes in the packet.
    Use the new string length, not the original length.

    Use format_text_string, which is a convenience function that
    calls strlen.

    Fix #19086

    (cherry picked from commit 1c45a899f83fa88e60ab69936bea3c4754e7808b)

commit 88311a4cf0
Author: Guy Harris <gharris@sonic.net>
Date:   Thu May 18 17:59:33 2023 -0700

    blf: don't assume that app text is null-terminated in the file.

    When reading the text from an app text message, allocate a buffer one
    byte larger than the size of the message, and set that byte to '\0'
    after reading the message text, to ensure that the text is
    null-terminated and can be safely handed to routines that process C
    strings.

    Fixes #19084.

    (cherry picked from commit 87803328179524f0b3982529b6cf6e3c2e07fe68)

commit da017472e6
Author: Guy Harris <gharris@sonic.net>
Date:   Thu May 18 15:03:23 2023 -0700

    vms: fix the search for the packet length field.

    The packet length field is of the form

        Total Length = DDD = ^xXXX

    where "DDD" is the length in decimal and "XXX" is the length in
    hexadecimal.

    Search for "length ". not just "Length", as we skip past "Length ", not
    just "Length", so if we assume we found "Length " but only found
    "Length", we'd skip past the end of the string.

    While we're at it, fail if we don't find a length field, rather than
    just blithely acting as if the packet length were zero.

    Fixes #19083.

    (cherry picked from commit db5135826de3a5fdb3618225c2ff02f4207012ca)

commit 3b6c8842a6
Author: Guy Harris <gharris@sonic.net>
Date:   Wed May 17 19:10:39 2023 -0700

    dumpcap(1): update some old "pcap as default format" text.

    Speak of dumpcap writing a "capture file" rather than a "pcap file".

    Use .pcapng rather than .pcap as the extension in sample capture file
    names.

    In the description of the -i option, explicitly mention the -P option as
    being overridden if more than one -i option is specified.

    (cherry picked from commit 9ef9fbeddfcba584e4623a65d77af7f2b3023e89)

commit 15aacdd046
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 17 10:55:27 2023 -0700

    blf: Include errno.h

    This should hopefully fix the build failures on older Linux
    distributions.

    (cherry picked from commit cd9f8da44b8227d4eca43e053c144ca83ec9c485)

commit 0633858a47
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed May 17 13:58:36 2023 +0200

    UDS: fix some data identifier items length

    Fixes #19078

commit e4d89450fc
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue May 16 18:30:33 2023 -0400

    Qt: Redissect packets when applying a time shift

    Packet fields like tcp.time_relative, smb2.time, and SRT tables depend
    on file-scoped data from other frames often computed in the first pass.
    Thus redissection is necessary after applying a time shift.

    Fix #18999

    (cherry picked from commit 8cab0daed1e2db63ce939d2e3afb7a636e39bf5b)

commit 35e630ea3e
Author: Guy Harris <gharris@sonic.net>
Date:   Tue May 16 18:09:41 2023 -0700

    blf: add some sanity checks.

    Have blf_pull_logcontainer_into_memory() return a libwiretap error code
    and additional information string, including various values being
    inconsistent.

    (If any of those correspond to identifiable file problems, they should
    be reported with WTAP_ERR_BAD_FILE and with a description more relevant
    to somebody writing code to write those files.)

    Fixes #19063.

    (cherry picked from commit c899be35a94440b6c46cf5715c5f24eda597f4c1)

commit 55dbdaf47c
Author: Guy Harris <gharris@sonic.net>
Date:   Tue May 16 12:05:07 2023 -0700

    candump: check for a too-long frame length.

    If the frame length is longer than the maximum, report an error in the
    file.

    Fixes #19062, preventing the overflow on a buffer on the stack (assuming
    your compiler doesn't call a bounds-checknig version of memcpy() if the
    size of the target space is known).

    (cherry picked from commit 0181fafb2134a177328443a60b5e29c4ee1041cb)

commit 3d3208f762
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat May 13 21:45:16 2023 -0400

    GDSDB: Make sure our offset advances.

    add_uint_string() returns the next offset to use, not the number
    of bytes consumed. So to consume all the bytes and make sure the
    offset advances, return the entire reported tvb length, not the
    number of bytes remaining.

    Fixup 8d3c2177793e900cfc7cfaac776a2807e4ea289f

    Fixes #19068

    (cherry picked from commit 118815ca7c9f82c1f83f8f64d9e0e54673f31677)

commit 256d05e281
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 14 16:36:57 2023 +0000

    [Automatic update for 2023-05-14]

    Update manuf, services enterprise numbers, translations, and other items.

commit b1d3523e17
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri May 12 07:56:46 2023 -0400

    media_type: Register dissector table as case-insensitive

    https://datatracker.ietf.org/doc/html/rfc6838#section-4.2
    RFC 6838, 4.2 Naming Requirements:
    "Both top-level type and subtype names are case-insensitive."

    Some media types, e.g. application/3gppHal+json, are officially
    registered with capital letters, and sometimes registered to
    the dissector table that way.

    Fix #18611

    (backported from dfd9e1d518c863b2ee2539eb5b9fe9761c942402)

commit 73eed48ae4
Author: Guy Harris <gharris@sonic.net>
Date:   Wed May 10 23:22:54 2023 -0700

    Don't build radiotap-gen if we didn't find libpcap.

    As a comment in its code says, it requires libpcap, so attempting to
    build it if you don't have libpcap is guaranteed to fail, and we don't
    require you to have libpcap's headers and libraries in order to build
    Wireshark, so just don't build it if we didn't find libpcap.

    Fixes #19059.

    (cherry picked from commit 7decbda52297b5aa567560f30cd321866d43eb4f)

commit d1a4f15be5
Author: Guy Harris <gharris@sonic.net>
Date:   Wed May 10 17:34:12 2023 -0700

    Fix no-libpcap compilation.

    (cherry picked from commit 554baf62949436c652263393c7a758bf10d73d63)

commit 7f6d857e76
Author: Zizhao Wang <21307130036@m.fudan.edu.cn>
Date:   Tue May 9 05:29:42 2023 +0000

    NR-RRC : Fix NR-RRC RSRQ upper boundary value to 20dB

    regen

    (cherry picked from commit 73ea8297c4a1d3cd1dd8b4aa5d3851bf1d80749c)

commit 97999129bf
Author: Guy Harris <gharris@sonic.net>
Date:   Mon May 8 15:53:45 2023 -0700

    bsd-setup: don't use Bash as the interpreter for the script.

    Do not use Bash as the shell for this script, and use the POSIX
    syntax for function definition rather than the
    "function <name>() { ... }" syntax, as FreeBSD 13, at least, does
    not have Bash, and its /bin/sh doesn't support the other syntax.

    (backported from commit 47759ca6584fbc3e6e61d7d16a06e9b942691112)

commit 6350a72f39
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun May 7 12:51:17 2023 +0200

    Doc: Replace GitLab legacy URLs and reorganize a bit

    Ref: https://gitlab.com/gitlab-org/gitlab/-/issues/28848
    Also clean up top level URLs list

    (cherry picked from commit 3b721ba7b951030767d377f310de2dedfe23bfa9)

commit 13761f2fac
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 7 16:35:16 2023 +0000

    [Automatic update for 2023-05-07]

    Update manuf, services enterprise numbers, translations, and other items.

commit 85e2958d89
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu May 4 21:12:04 2023 -0400

    Qt: Restore -z io,stat command line option

    Restore the ability to open the I/O Graph window from Wireshark
    from the command line with "-z io,stat", which was removed in !7115.

    Fix #19042

    (cherry picked from commit 277b7f63460c59a630bf07ae30a4c7dff96e0f6c)

commit 6335a9adf6
Author: Clément Notin <clement@notin.org>
Date:   Sun Apr 30 00:11:45 2023 +0200

    ntlmssp: fix decrypt error by decrypting verifier after payload

    (cherry picked from commit c73e2d4be05b8147cebf8277fb1a2d321c8483d8)

commit 989aa62063
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Feb 24 07:58:51 2023 -0500

    Qt: Revert to our function for displaying bit speed with units

    The Qt formattedDataSize() locale aware function only handles
    sizes in bytes, not other units. Revert to using our format_size()
    function from wsutil for the bits per second display string in
    the Conversation window.

    Fix #18211

    (cherry picked from commit ef0e96e447eb06c978b80ce1086c68d8772f3859)

commit 705c321afa
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 30 16:37:17 2023 +0000

    [Automatic update for 2023-04-30]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit 8308901826
Author: hidd3ncod3s <hidd3ncod3s@gmail.com>
Date:   Sun Apr 23 13:02:36 2023 -0700

    Bug 19015: Fix Community ID generation logic

    (cherry picked from commit 3ce3bd7d604ad2c5fa71b3f6f1ed8220b85dc7ba)

commit 2cf6d3e39e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 23 16:34:35 2023 +0000

    [Automatic update for 2023-04-23]

    Update manuf, services enterprise numbers, translations, and other items.

commit 3d9fe6baad
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Apr 22 08:54:16 2023 -0400

    H.265: The NAL header is 2 bytes

    This was copied from H.264, but here the header is 2 bytes so mark
    both bytes in the subtree text node

    (cherry picked from commit 45af76c2418ba9b866b040c90bb6f35a583da7e0)

commit 9e0b172dc8
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Apr 20 11:07:38 2023 -0700

    Fix the "invalid interface" unit test.

    The error message for a non-existent capture interface has changed;
    change the tests to match.

    (cherry picked from commit 849beca63d5a1eb0c1693c8f6fe8a081d0420387)

commit 389da88b33
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Apr 20 02:02:29 2023 -0700

    Check for EAFNOTSUP errors on Linux.

    On Linux, look for an error message of "socket: Address family not
    supported by protocol"; if we see it, that's EAFNOTSUP, which means
    either that 1) your kernel doesn't have PF_PACKET support configured in
    or 2) this is a Flatpak package of Wireshark that's "helpfully" been
    sandboxed.  Display a secondary error message indicating one of those is
    likely the problem; mention the Flatpak one first, as that's more likely
    than the second (if you can still configure PF_PACKET sockets out, it's
    not the default, so it's unlikely to be the case).

    See issue #19008.

    (cherry picked from commit 659876d108131a17eaedabb9b4b1d2c455f976ba)

commit a051097b12
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Apr 20 00:36:47 2023 -0700

    Improve reporting of libpcap errors.

    Expand the set of CAP_DEVICE_OPEN_ errors and warnings to include
    specific errors for many of the errors and warnings libpcap returns.
    (This doesn't include the errors that would definitely either be
    Wireshark or libpcap bugs, such as PCAP_ERROR_NOT_ACTIVATED and
    PCAP_ERROR_ACTIVATED.)

    Don't give "make sure you have the right permissions" secondary error
    messages if we know that the error isn't a permissions error.

    For the PCAP_ERROR_ codes that we handle individually, don't bother with
    the pcap_statustostr() string, as it would duplicate the error message
    we're providing.

    For the PCAP_ERROR_ codes we *don't* handle individually, give both the
    pcap_statustostr() string and the pcap_geterr() string, to give the user
    as much information as possible (even if that's just so that they can
    give *us* as much information as possible to figure out what the problem
    is).

    This should remove the "how to support packet capturing on Debian"
    message for "sorry, we don't support PF_PACKET sockets" error that shows
    up if either 1) your kernel doesn't have PF_PACKET support configured in
    or 2) this is a Flatpak package of Wireshark that's "helpfully" been
    sandboxed.  See issue #19008.

    (cherry picked from commit 3cc9d33f65ef3e009721964e6b0af5dea2ee58bc)

commit 77210ffb4a
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Apr 19 13:38:39 2023 -0700

    ilp, ulp: don't use the over-TCP dissector for media types.

    "Over TCP" dissectors are usable only over byte-stream protocols, as
    they have to carve individual PDUs out of a byte stream, doing
    reassembly if necessary; dissectors registered in the media_type
    dissector table get a reassembled PDU handed to them, and all the
    special reassembly stuff they do isn't necessary and may cause
    dissection not to work.

    (cherry picked from commit 6b763b3951080b4fba99b373af47d7c9b581beb1)

commit 1dc4b13d54
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Apr 19 00:03:51 2023 -0700

    cose: have separate dissectors for the media_type dissector table.

    Dissectors called from that dissector table are *not* passed a pointer
    to a wscbor_tag_t as their data argument, so they should not interpret
    it as pointing to such a structure.  Add new dissectors for that table
    that call the dissector for the cose.msgtag dissector table and pass it
    a null pointer as its data; that will cause them to assume no
    wscbor_tag_t is available.

    (cherry picked from commit 474a87df9c9251e587ae059393ad134d7ce8b683)

commit 41e532e099
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Apr 17 23:22:48 2023 -0700

    Fix ASN.1 source as well for 2a5434973f17b0ba1ca3513025f4cdff71ae687a.

    For

        commit 2a5434973f17b0ba1ca3513025f4cdff71ae687a
        Author: João Valverde <j@v6e.pt>
        Date:   Sun Apr 16 14:40:24 2023 +0100

            SPNEGO: Fix Krb5 offset

            The dissect_kerberos_main() offset starts at zero so the offset
            result must be added to the current SPNEGO offset.

            Fixes #18991.

    apply that change to the ASN.1-generator source.

    Further fixes #18991.

    (cherry picked from commit e9af2e52880e866236803a55b6c8293300b76ff2)

commit 0cb6ba916c
Author: João Valverde <j@v6e.pt>
Date:   Sun Apr 16 14:40:24 2023 +0100

    SPNEGO: Fix Krb5 offset

    The dissect_kerberos_main() offset starts at zero so the offset
    result must be added to the current SPNEGO offset.

    Fixes #18991.

    (cherry picked from commit 2a5434973f17b0ba1ca3513025f4cdff71ae687a)

commit 4baa2c36b0
Author: João Valverde <j@v6e.pt>
Date:   Thu Apr 13 21:50:25 2023 +0100

    NNTP: Add a null check.

    Fixes #18981.

    (cherry picked from commit 457862494907165782ab803d84359b80fd5be08e)

commit d8954db9e9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Apr 13 11:57:22 2023 -0700

    GitLab CI: Force the installation of llvm-15

    A bug fix for the jammy-updates LLVM packages broke compatibility with
    the LLVM upstream packages:

    https://bugs.launchpad.net/ubuntu/+source/llvm-toolchain-15/+bug/2008755

    Try to work around the issue by installing llvm-15 with the
    --force-overwrite option.

    (cherry picked from commit fe4498281f55a6133b765796cc422cb1d621e725)

commit 091a89e44e
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Wed Apr 12 22:16:19 2023 +0200

    BFCP: Fix length for some attributes

    Type and length field are 1 byte each. Length value includes type anf length field
    but excludes the padding bytes for non grouped attributes.

    Fixes: #18890

    (cherry picked from commit 56b32bc5dce4db12d57da9dc2d2d01a2f1c23751)

commit 883fc6a186
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Apr 13 09:51:15 2023 +0200

    ISAKMP: fix dissection of DEVIVE_IDENTITY identity type

    The encoding is in big endian and not little endian (the type is in the
    2 LSB).

    (cherry picked from commit 589445bffb5287e6e9acd8c9d27e168928e5f417)

commit 1f48d655b1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 12 12:44:55 2023 -0700

    Version: 4.0.5 → 4.0.6

    [skip ci]
